var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ANDSService.html",[0,1.193,1,3.289]],["body/injectables/ANDSService.html",[0,1.876,1,5.171,2,2.686,3,0.18,4,0.152,5,0.084,6,7.619,7,3.015,8,1.047,9,3.923,10,0.348,11,0.586,12,3.113,13,1.524,14,3.945,15,3.78,16,3.945,17,2.469,18,3.267,19,3.312,20,3.945,21,3.494,22,0.701,23,6.975,24,1.025,25,4.309,26,3.78,27,4.13,28,4.309,29,3.945,30,3.945,31,3.368,32,2.141,33,3.015,34,5.584,35,3.213,36,0.589,37,4.454,38,0.903,39,0.01,40,0.525,41,0.481,42,0.903,43,5.563,44,0.652,45,1.302,46,4.454,47,5.563,48,0.808,49,4.127,50,1.669,51,3.292,52,0.679,53,3.015,54,3.631,55,3.78,56,3.292,57,0.905,58,0.725,59,3.015,60,0.618,61,3.292,62,3.292,63,3.146,64,3.292,65,3.945,66,3.146,67,3.292,68,3.146,69,3.292,70,2.346,71,3.292,72,3.292,73,3.292,74,3.292,75,3.292,76,3.292,77,3.292,78,3.292,79,0.447,80,1.536,81,0.398,82,1.754,83,3.015,84,2.686,85,2.03,86,1.754,87,3.456,88,2.217,89,3.456,90,2.686,91,3.862,92,2.896,93,3.146,94,0.766,95,0.744,96,0.18,97,0.095,98,2.787,99,2.505,100,3.862,101,4.454,102,2.592,103,5.563,104,5.563,105,0.467,106,5.563,107,2.592,108,3.015,109,3.643,110,2.787,111,0.006,112,0.008,113,0.006]],["title/components/ActionButtonComponent.html",[114,0.121,115,0.896]],["body/components/ActionButtonComponent.html",[3,0.144,4,0.121,5,0.067,8,1.025,10,0.458,11,0.505,22,0.605,24,1.028,36,0.578,38,0.787,39,0.01,40,0.526,41,0.469,42,0.823,44,0.637,45,0.829,48,0.796,50,1.632,52,0.735,54,2.31,57,0.886,58,0.761,60,0.85,79,0.391,81,0.317,96,0.221,97,0.116,105,0.505,111,0.005,112,0.007,113,0.005,114,0.2,115,1.479,116,1.185,117,0.97,118,1.281,119,7.322,120,4.437,121,1.832,122,1.216,123,1.669,124,1.559,125,2.182,126,0.982,127,1.515,128,5.778,129,8.324,130,2.781,131,6.829,132,1.405,133,1.458,134,1.724,135,1.571,136,1.571,137,6.018,138,2.733,139,1.458,140,1.458,141,1.458,142,1.531,143,1.655,144,1.655,145,1.349,146,1.349,147,1.177,148,1.385,149,1.38,150,1.193,151,1.021,152,1.193,153,1.075,154,0.829,155,1.193,156,0.982,157,1.193,158,1.119,159,1.195,160,1.193,161,1.193,162,4.437,163,4.437,164,1.758,165,4.437,166,1.075,167,1.458,168,1.094,169,1.104,170,1.309,171,1.124,172,1.075,173,1.075,174,1.075,175,1.104,176,1.421,177,0.945,178,0.995,179,1.104,180,1.048,181,0.995,182,1.104,183,1.021,184,1.104,185,0.945,186,0.92,187,0.542,188,0.611,189,0.611,190,1.104,191,1.048,192,1.021,193,1.075,194,1.458,195,0.945,196,6.829,197,4.437,198,1.104,199,1.075,200,1.021,201,1.104,202,1.104,203,0.995,204,1.104,205,1.758,206,0.92,207,1.758,208,1.399,209,2.71,210,2.626,211,4.437,212,4.437,213,4.437,214,1.706,215,4.437,216,1.706,217,4.437,218,4.437,219,4.437,220,2.756,221,2.385,222,3.08,223,3.29,224,3.29,225,2.51,226,1.094,227,3.904,228,2.906,229,4.437,230,4.437,231,4.437,232,4.437,233,3.904,234,4.437,235,4.437,236,4.437,237,4.437,238,0.685,239,1.281,240,1.154,241,0.97,242,1.068,243,0.97,244,1.724,245,0.851,246,0.92,247,0.92,248,0.945,249,1.492,250,0.897,251,0.97,252,0.97,253,0.851,254,0.97,255,0.851,256,0.851,257,0.92,258,1.589,259,1.315,260,0.92,261,0.97,262,0.92,263,1.145,264,1.177,265,0.851,266,0.897,267,0.97,268,0.897,269,1.248,270,1.6,271,0.92,272,1.315,273,0.851,274,0.97,275,0.897,276,0.897,277,0.97,278,0.851,279,0.92,280,0.851,281,0.97,282,0.851,283,0.945,284,0.97,285,0.897,286,0.897,287,0.97,288,0.897,289,1.315,290,0.97,291,0.92,292,0.97,293,0.897,294,0.97,295,0.897,296,0.945,297,1.177,298,1.315,299,0.851,300,0.897,301,1.315,302,0.897,303,0.97,304,1.315,305,0.897,306,1.216,307,0.97,308,0.897,309,0.897,310,0.92,311,0.97,312,0.897,313,0.851,314,0.97,315,0.897,316,0.97,317,0.897,318,0.97,319,0.873,320,1.519,321,0.897,322,0.97,323,0.897,324,1.315,325,0.851,326,1.315,327,0.92,328,0.97,329,0.851,330,0.873,331,0.851,332,0.97,333,0.897,334,0.97,335,0.851,336,0.97,337,0.851,338,0.92,339,0.92,340,0.851,341,0.97,342,0.897,343,0.765,344,0.97,345,0.897,346,0.851,347,0.97,348,0.92,349,0.945,350,0.97,351,0.897,352,0.873,353,0.97,354,0.92,355,0.666,356,0.97,357,0.851,358,0.92,359,0.97,360,0.897,361,0.97,362,0.92,363,1.416,364,0.897,365,0.97,366,0.92,367,0.97,368,0.97]],["title/components/AnchorOrButtonComponent.html",[114,0.121,245,0.851]],["body/components/AnchorOrButtonComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.42,11,0.36,13,1.143,22,0.431,24,1.073,36,0.544,38,0.632,39,0.01,40,0.513,41,0.443,42,0.721,44,0.627,45,0.52,48,0.75,50,1.521,52,0.524,57,0.763,58,0.698,60,0.855,79,0.357,81,0.199,85,1.248,86,0.877,94,0.383,95,0.372,96,0.269,97,0.143,105,0.731,111,0.003,112,0.005,113,0.003,114,0.23,115,0.562,116,1.03,117,0.608,118,0.913,121,1.809,122,0.867,123,1.646,124,0.592,125,2.685,126,1.318,127,1.124,130,2.543,132,1.42,133,1.268,134,1.652,135,1.461,136,1.461,138,2.195,139,1.039,140,1.039,141,1.039,142,1.504,143,1.268,144,1.425,145,0.962,146,1.173,147,1.204,148,1.204,149,1.057,150,0.748,151,1.204,152,0.748,153,1.039,154,0.977,155,0.748,156,0.959,157,0.748,158,0.991,159,1.256,160,0.748,161,0.748,164,1.103,166,1.039,167,1.268,168,1.069,169,0.692,170,1.286,171,1.253,172,1.039,173,1.039,174,0.674,175,0.692,176,1.388,177,0.913,178,0.624,179,0.692,180,1.013,181,0.962,182,0.692,183,1.461,184,0.692,185,1.428,186,1.085,187,0.639,188,0.72,189,0.72,190,0.692,191,1.013,192,1.204,193,1.539,194,1.539,195,0.913,198,0.692,199,1.039,200,1.204,201,0.692,202,0.692,203,1.318,204,0.692,206,0.889,207,2.073,208,0.877,226,1.069,238,0.429,239,0.913,240,0.822,241,0.608,242,1.08,243,0.608,244,1.466,245,1.127,246,1.085,247,0.577,248,0.592,249,1.143,250,0.562,251,0.608,252,0.608,253,0.822,254,0.608,255,0.822,256,1.003,257,0.577,258,1.376,259,0.937,260,0.577,261,0.608,262,0.577,263,0.877,264,1.013,265,0.822,266,0.867,267,0.608,268,0.562,269,0.889,270,1.285,271,0.577,272,0.937,273,1.003,274,0.608,275,0.562,276,0.562,277,0.608,278,0.822,279,0.889,280,0.822,281,0.608,282,0.822,283,0.592,284,0.608,285,0.562,286,0.562,287,0.608,288,0.562,289,0.937,290,0.608,291,0.577,292,0.608,293,0.562,294,0.608,295,0.562,296,0.592,297,1.156,298,0.937,299,0.822,300,0.867,301,0.937,302,0.562,303,0.608,304,0.937,305,0.562,306,0.867,307,0.608,308,0.562,309,0.562,310,0.577,311,0.608,312,0.562,313,0.533,314,0.608,315,0.562,316,0.608,317,0.562,318,0.608,319,0.548,320,1.219,321,0.562,322,0.608,323,0.562,324,0.937,325,0.533,326,0.937,327,0.577,328,0.608,329,0.822,330,1.321,331,1.003,332,0.608,333,0.562,334,0.608,335,0.822,336,0.608,337,0.822,338,1.392,339,0.889,340,0.822,341,0.608,342,0.562,343,0.901,344,0.608,345,0.562,346,0.822,347,0.608,348,0.577,349,0.592,350,0.608,351,0.562,352,0.548,353,0.608,354,0.577,355,0.418,356,0.608,357,0.533,358,0.577,359,0.608,360,0.562,361,0.608,362,0.577,363,1.085,364,0.562,365,0.608,366,0.577,367,0.608,368,0.608,369,1.353,370,1.137,371,2.055,372,1.752,373,3.773,374,2.783,375,2.138,376,2.783,377,2.783,378,1.45,379,0.831,380,0.902,381,0.674,382,1.752,383,1.137,384,1.897,385,2.138,386,2.138,387,1.65,388,2.132,389,2.138,390,2.403,391,1.137,392,1.752,393,1.752,394,1.103,395,1.103,396,0.953,397,0.454,398,1.095,399,0.608,400,1.103,401,2.195,402,1.137,403,2.742,404,1.752,405,1.009,406,1.699,407,1.511,408,0.953,409,1.137,410,1.137,411,1.137,412,1.137,413,1.137,414,1.752,415,1.137,416,0.927,417,1.137,418,1.137,419,1.137,420,1.039,421,1.039,422,1.039,423,0.953,424,1.137,425,1.137,426,1.137,427,1.137,428,1.752,429,1.137,430,1.137,431,1.137,432,1.137,433,2.073,434,1.699,435,1.137,436,1.187,437,2.073,438,1.137,439,2.012,440,0.927,441,2.33,442,1.137,443,1.743,444,2.138,445,1.137,446,1.606,447,1.137,448,1.137,449,1.137,450,1.137,451,1.137,452,1.953,453,1.752,454,1.137,455,1.137,456,1.137,457,1.137,458,1.137,459,1.137,460,1.137,461,1.095,462,1.137,463,1.752,464,1.752,465,1.137,466,1.137,467,1.137,468,1.137,469,1.137,470,1.137,471,1.103,472,1.469,473,1.137,474,1.137,475,1.137,476,1.752,477,1.137,478,1.137,479,1.137,480,1.511,481,1.699,482,1.39,483,2.33,484,2.138,485,1.137,486,1.137,487,1.752,488,1.752,489,1.137,490,2.77,491,1.752,492,1.137,493,1.137,494,1.137,495,1.137,496,2.138,497,1.137,498,1.137,499,1.137,500,1.137,501,1.137,502,1.137,503,0.98,504,0.98,505,1.137,506,1.009,507,1.137,508,1.103,509,1.137,510,1.103,511,1.137,512,1.039,513,1.039,514,1.103,515,1.103,516,0.902,517,1.103,518,2.138,519,1.752,520,1.137,521,0.953,522,0.454,523,0.98,524,1.103,525,0.902,526,1.137,527,1.137,528,0.81,529,1.07,530,1.752,531,1.137,532,1.137,533,1.137,534,1.137,535,1.137,536,1.137,537,1.137,538,2.138,539,1.137,540,1.137,541,1.137,542,1.137,543,1.752,544,1.137,545,1.137,546,1.429,547,1.137,548,1.103,549,1.137,550,1.137,551,1.103,552,1.137,553,1.137,554,1.137,555,1.752,556,1.752,557,0.768,558,1.137,559,1.103,560,1.103,561,1.039,562,1.103,563,1.137,564,1.103,565,1.137,566,1.137,567,1.137,568,1.137,569,1.137,570,1.137,571,1.137,572,1.137,573,1.752,574,1.752,575,1.752,576,1.752,577,1.752,578,1.699,579,1.153,580,1.137,581,1.039,582,1.137,583,1.137,584,0.927,585,1.039,586,1.752,587,1.137,588,1.137,589,1.137,590,2.138,591,1.137,592,1.137,593,1.137,594,1.137,595,1.137,596,1.137,597,1.137,598,1.137,599,1.103,600,1.137,601,1.137,602,1.137,603,1.07,604,1.137,605,1.137,606,1.103,607,1.137,608,1.137,609,0.98,610,1.137,611,1.137,612,1.137,613,1.137,614,1.137,615,1.137,616,1.103,617,0.789,618,1.137,619,1.137,620,1.137,621,1.137,622,1.137,623,0.927]],["title/classes/AngularPage.html",[97,0.075,624,3.903]],["body/classes/AngularPage.html",[3,0.223,4,0.188,5,0.103,10,0.43,22,0.797,36,0.519,39,0.01,48,0.743,79,0.352,96,0.223,97,0.117,105,0.665,111,0.008,112,0.009,113,0.008,176,1.625,240,1.319,624,6.973,625,2.23,626,6.88,627,8.578,628,8.578,629,6.88,630,6.88,631,2.812,632,6.88,633,6.88,634,6.88,635,6.88]],["title/components/AsynchComponent.html",[114,0.121,250,0.896]],["body/components/AsynchComponent.html",[3,0.11,4,0.093,5,0.051,8,0.887,10,0.407,11,0.419,12,2.481,22,0.502,24,1.101,32,1.046,36,0.575,38,0.842,39,0.01,40,0.527,41,0.457,42,0.856,44,0.67,45,0.636,48,0.79,50,1.574,52,0.914,57,0.767,58,0.721,60,0.657,79,0.417,81,0.244,85,1.453,86,1.075,94,0.469,95,0.456,96,0.192,97,0.1,105,0.547,111,0.004,112,0.006,113,0.004,114,0.21,115,0.689,116,0.983,117,0.745,118,1.063,121,1.776,122,1.009,123,1.651,124,0.725,126,0.556,127,1.409,132,1.366,133,1.21,134,1.635,135,1.36,136,1.36,139,1.21,140,1.21,141,1.21,142,1.326,143,1.433,144,1.433,145,1.12,146,1.12,147,1.019,148,1.149,149,0.689,150,0.916,151,0.784,152,0.916,153,0.826,154,0.933,155,0.916,156,0.815,157,0.916,158,0.982,159,0.556,160,0.916,161,0.916,164,2.343,166,0.826,167,1.21,168,0.908,169,0.848,170,1.133,171,1.104,172,0.826,173,0.826,174,0.826,175,0.848,176,1.179,177,0.725,178,0.764,179,0.848,180,0.805,181,0.764,182,0.848,183,0.784,184,0.848,185,0.725,186,0.707,187,0.61,188,0.688,189,0.688,190,0.848,191,0.805,192,0.784,193,0.826,194,1.21,195,0.725,198,0.848,199,0.826,200,1.36,201,0.848,202,0.848,203,0.764,204,0.848,205,1.35,208,1.075,209,2.662,210,2.016,214,1.31,216,1.31,220,2.117,226,0.62,233,4.394,238,0.526,239,1.063,240,0.958,241,0.745,242,1.057,243,0.745,244,1.583,245,0.653,246,0.707,247,0.707,248,0.725,249,1.292,250,1.315,251,1.292,252,0.745,253,0.653,254,0.745,255,0.653,256,0.653,257,0.707,258,1.473,259,1.091,260,0.707,261,0.745,262,0.707,263,1.214,264,1.019,265,0.653,266,1.195,267,0.745,268,0.689,269,1.036,270,1.422,271,0.707,272,1.091,273,0.653,274,0.745,275,0.689,276,0.689,277,0.745,278,0.653,279,0.707,280,0.653,281,0.745,282,0.653,283,0.725,284,0.745,285,0.689,286,0.689,287,0.745,288,0.689,289,1.091,290,0.745,291,0.707,292,0.745,293,0.689,294,0.745,295,0.689,296,0.725,297,1.019,298,1.091,299,0.653,300,0.689,301,1.091,302,0.689,303,0.745,304,1.091,305,0.689,306,1.009,307,0.745,308,0.689,309,0.689,310,0.707,311,0.745,312,0.689,313,0.653,314,0.745,315,0.689,316,0.745,317,0.689,318,0.745,319,0.671,320,1.35,321,0.689,322,0.745,323,0.689,324,1.091,325,0.653,326,1.091,327,0.707,328,0.745,329,0.653,330,0.671,331,0.653,332,0.745,333,0.689,334,0.745,335,0.653,336,0.745,337,0.653,338,0.707,339,0.707,340,0.653,341,0.745,342,0.689,343,0.587,344,0.745,345,0.689,346,0.653,347,0.745,348,0.707,349,0.725,350,0.745,351,0.689,352,0.671,353,0.745,354,0.707,355,0.511,356,0.745,357,0.653,358,0.707,359,0.745,360,0.689,361,0.745,362,0.707,363,1.226,364,0.689,365,0.745,366,0.707,367,0.745,368,0.745,369,1.878,371,1.242,378,0.707,384,2.36,397,0.556,398,1.275,399,0.745,406,1.979,436,1.046,480,1.201,481,1.979,482,1.104,514,1.35,522,0.556,528,0.992,546,1.969,557,1.797,564,1.979,623,1.135,636,3.408,637,4.994,638,4.394,639,2.502,640,4.994,641,4.994,642,5.201,643,4.994,644,4.994,645,4.994,646,4.994,647,6.51,648,4.994,649,2.728,650,4.994,651,4.994,652,3.408,653,3.408,654,4.994,655,3.408,656,7.675,657,4.994,658,3.408,659,4.994,660,3.408,661,3.408,662,4.994,663,3.408,664,5.912,665,3.408,666,3.408,667,3.408,668,2.998,669,4.994,670,1.393,671,1.707,672,1.927,673,1.847,674,2.117,675,3.408,676,3.408,677,2.527,678,5.727,679,3.408,680,6.51,681,3.408,682,4.994,683,3.408,684,3.408,685,3.408,686,3.408,687,3.408,688,3.408,689,3.408,690,3.408,691,3.408,692,3.408,693,4.994,694,3.408,695,5.912,696,3.408,697,3.408,698,1.588,699,3.408,700,3.408,701,3.408,702,3.408,703,4.994,704,3.408,705,3.408,706,4.994,707,3.408,708,3.408,709,4.994,710,3.408,711,3.998,712,3.408,713,4.994,714,3.408,715,3.408,716,3.408,717,4.994,718,3.408,719,3.408,720,4.994,721,3.408,722,2.016,723,3.408,724,4.994,725,3.408,726,3.408,727,3.408,728,4.994,729,3.408,730,2.998,731,3.408,732,3.408,733,3.408,734,2.998,735,3.408,736,3.408,737,3.408,738,3.408,739,2.998,740,3.408,741,3.408,742,3.408,743,3.408,744,4.101,745,2.366,746,3.408,747,2.117,748,3.408,749,3.408,750,3.408,751,3.408,752,3.408,753,6.931,754,3.408,755,3.408,756,2.527,757,3.408,758,3.408,759,3.408,760,3.408,761,3.408,762,3.408,763,3.408,764,3.408,765,3.408,766,3.408,767,3.408,768,4.994,769,3.408,770,3.408,771,3.408,772,3.408,773,3.408,774,3.408,775,5.912,776,3.408,777,3.408,778,5.912,779,3.408,780,5.912,781,5.912,782,4.994,783,5.912,784,5.912,785,3.408,786,3.408,787,4.994,788,3.408,789,3.408,790,3.408,791,3.408,792,3.408,793,3.408,794,5.912,795,5.912,796,2.232,797,5.912,798,3.408,799,3.408,800,4.994,801,3.408,802,3.408,803,3.408,804,3.408,805,3.408,806,3.408,807,4.994,808,4.994,809,4.994,810,4.994,811,4.994,812,4.994,813,4.994,814,4.994,815,4.994,816,4.994,817,3.408,818,3.408,819,4.994,820,4.994,821,4.994,822,4.994,823,4.994,824,3.408,825,3.408]],["title/classes/BaseService.html",[9,1.932,97,0.075]],["body/classes/BaseService.html",[3,0.17,4,0.183,5,0.079,7,2.837,9,2.923,10,0.327,11,0.563,12,3.127,13,1.618,14,4.189,15,3.637,16,3.795,17,2.532,18,3.137,19,3.231,20,4.189,21,3.71,22,0.675,24,1.065,25,4.418,26,3.637,27,4.234,28,4.418,29,3.795,30,3.795,31,3.24,32,2.06,33,2.837,36,0.586,38,0.868,39,0.01,40,0.505,41,0.477,42,0.868,44,0.521,48,0.788,52,0.639,53,3.637,54,4.067,55,4.234,57,0.871,58,0.698,59,2.837,60,0.745,63,3.795,65,3.795,66,3.795,68,3.795,70,2.207,79,0.43,82,1.651,94,0.721,95,0.7,96,0.17,97,0.126,105,0.722,107,2.439,111,0.006,112,0.008,113,0.006,177,1.114,187,0.819,188,0.924,189,0.924,206,1.392,436,0.926,522,0.854,625,1.696,671,2.622,672,2.96,673,3.637,674,3.251,826,8.975,827,4.658,828,4.658,829,4.168,830,5.372,831,7.407,832,7.407,833,5.903,834,4.19,835,4.605,836,4.605,837,4.605,838,4.19,839,3.88,840,4.19,841,5.234,842,5.234,843,4.605,844,4.605,845,5.234,846,5.234,847,5.234,848,5.234,849,5.234,850,5.234,851,5.234,852,4.975,853,5.792,854,4.605,855,3.427,856,4.19,857,5.234,858,5.234,859,3.88,860,4.605,861,6.71,862,2.467,863,5.234,864,6.516,865,6.71,866,5.234,867,5.903,868,5.234,869,3.427,870,6.71,871,4.975,872,5.234,873,5.234,874,5.372,875,3.633,876,4.605,877,5.234,878,6.71,879,5.234,880,5.234,881,5.234,882,5.234,883,5.234,884,5.234,885,5.234]],["title/components/ButtonBarContainerComponent.html",[114,0.121,253,0.851]],["body/components/ButtonBarContainerComponent.html",[3,0.091,4,0.144,5,0.042,8,1.243,10,0.422,11,0.364,13,1.153,22,0.436,24,1.062,36,0.535,38,0.567,39,0.01,40,0.511,41,0.437,42,0.687,44,0.629,45,0.527,48,0.735,50,1.525,52,0.344,57,0.768,58,0.701,60,0.858,79,0.359,81,0.202,85,1.261,86,0.889,94,0.388,95,0.377,96,0.27,97,0.144,105,0.732,111,0.003,112,0.005,113,0.003,114,0.231,115,0.57,116,1.039,117,0.616,118,0.922,121,1.812,122,0.876,123,1.647,124,0.6,125,2.629,126,1.321,127,1.131,130,2.554,132,1.416,133,1.279,134,1.658,135,1.47,136,1.47,138,1.053,139,1.05,140,1.05,141,1.05,142,1.513,143,1.279,144,1.435,145,0.972,146,1.183,147,1.21,148,1.214,149,1.066,150,0.758,151,1.214,152,0.758,153,1.05,154,0.985,155,0.758,156,0.966,157,0.758,158,0.996,159,1.26,160,0.758,161,0.758,166,1.05,167,1.279,168,1.076,169,0.701,170,1.293,171,1.259,172,1.05,173,1.05,174,0.683,175,0.701,176,1.398,177,0.922,178,0.632,179,0.701,180,1.023,181,0.972,182,0.701,183,1.47,184,0.701,185,1.436,186,1.094,187,0.644,188,0.726,189,0.726,190,0.701,191,1.023,192,1.214,193,1.548,194,1.548,195,0.922,198,0.701,199,1.05,200,1.214,201,0.701,202,0.701,203,1.328,204,0.701,206,0.899,207,1.717,208,0.889,226,1.076,238,0.435,239,0.922,240,0.831,241,0.616,242,1.085,243,0.616,244,1.474,245,0.831,246,0.899,247,0.585,248,0.6,249,1.153,250,0.57,251,0.616,252,0.616,253,1.135,254,0.616,255,0.831,256,1.012,257,0.585,258,1.383,259,0.947,260,0.585,261,0.616,262,0.585,263,0.885,264,1.02,265,0.831,266,0.876,267,0.616,268,0.57,269,0.899,270,1.294,271,0.585,272,0.947,273,1.012,274,0.616,275,0.57,276,0.57,277,0.616,278,0.831,279,0.899,280,0.831,281,0.616,282,0.831,283,0.6,284,0.616,285,0.57,286,0.57,287,0.616,288,0.57,289,0.947,290,0.616,291,0.585,292,0.616,293,0.57,294,0.616,295,0.57,296,0.6,297,1.162,298,0.947,299,0.831,300,0.876,301,0.947,302,0.57,303,0.616,304,0.947,305,0.57,306,0.876,307,0.616,308,0.57,309,0.57,310,0.585,311,0.616,312,0.57,313,0.541,314,0.616,315,0.57,316,0.616,317,0.57,318,0.616,319,0.555,320,1.228,321,0.57,322,0.616,323,0.57,324,0.947,325,0.541,326,0.947,327,0.585,328,0.616,329,0.831,330,1.328,331,1.012,332,0.616,333,0.57,334,0.616,335,0.831,336,0.616,337,0.831,338,1.399,339,0.899,340,0.831,341,0.616,342,0.57,343,0.909,344,0.616,345,0.57,346,0.831,347,0.616,348,0.585,349,0.6,350,0.616,351,0.57,352,0.555,353,0.616,354,0.585,355,0.423,356,0.616,357,0.541,358,0.585,359,0.616,360,0.57,361,0.616,362,0.585,363,1.094,364,0.57,365,0.616,366,0.585,367,0.616,368,0.616,369,0.649,370,1.153,371,2.014,372,1.153,375,1.771,378,1.457,379,0.843,380,0.914,381,0.683,382,1.771,383,1.153,384,1.913,385,2.156,386,2.156,387,1.664,388,2.147,389,2.156,390,2.42,391,1.153,392,1.771,393,1.771,394,1.118,395,1.118,396,0.966,397,0.46,398,1.106,399,0.616,400,1.118,401,2.21,402,1.153,403,2.756,404,1.771,405,1.023,406,1.717,407,1.527,408,0.966,409,1.153,410,1.153,411,1.153,412,1.153,413,1.153,414,1.771,415,1.153,416,0.94,417,1.153,418,1.153,419,1.153,420,1.053,421,1.053,422,1.053,423,0.966,424,1.153,425,1.153,426,1.153,427,1.153,428,1.771,429,1.153,430,1.153,431,1.153,432,1.153,433,2.091,434,1.717,435,1.153,436,1.194,437,2.091,438,1.153,439,2.029,440,0.94,441,2.346,442,1.153,443,1.758,444,2.156,445,1.153,446,1.62,447,1.153,448,1.153,449,1.153,450,1.153,451,1.153,452,1.97,453,1.771,454,1.153,455,1.153,456,1.153,457,1.153,458,1.153,459,1.153,460,1.153,461,1.106,462,1.153,463,1.771,464,1.771,465,1.153,466,1.153,467,1.153,468,1.153,469,1.153,470,1.153,471,1.118,472,1.484,473,1.153,474,1.153,475,1.153,476,1.771,477,1.153,478,1.153,479,1.153,480,1.527,481,1.717,482,1.404,483,2.346,484,2.156,485,1.153,486,1.153,487,1.771,488,1.771,489,1.153,490,2.784,491,1.771,492,1.153,493,1.153,494,1.153,495,1.153,496,2.156,497,1.153,498,1.153,499,1.153,500,1.153,501,1.153,502,1.771,503,0.994,504,0.994,505,1.153,506,1.023,507,1.153,508,1.118,509,1.153,510,1.118,511,1.153,512,1.053,513,1.053,514,1.118,515,1.118,516,0.914,517,1.118,518,2.156,519,1.771,520,1.153,521,0.966,522,0.46,523,0.994,524,1.118,525,0.914,526,1.153,527,1.153,528,0.821,529,1.084,530,1.771,531,1.153,532,1.153,533,1.153,534,1.153,535,1.153,536,1.153,537,1.153,538,2.156,539,1.153,540,1.153,541,1.153,542,1.153,543,1.771,544,1.153,545,1.153,546,1.443,547,1.153,548,1.118,549,1.153,550,1.153,551,1.118,552,1.153,553,1.153,554,1.153,555,1.771,556,1.771,557,0.778,558,1.153,559,1.118,560,1.118,561,1.053,562,1.118,563,1.153,564,1.118,565,1.153,566,1.153,567,1.153,568,1.153,569,1.153,570,1.153,571,1.153,572,1.153,573,1.771,574,1.771,575,1.771,576,1.771,577,1.771,578,1.717,579,1.165,580,1.153,581,1.053,582,1.153,583,1.153,584,0.94,585,1.053,586,1.771,587,1.153,588,1.153,589,1.153,590,2.156,591,1.153,592,1.153,593,1.153,594,1.153,595,1.153,596,1.153,597,1.153,598,1.153,599,1.118,600,1.153,601,1.153,602,1.153,603,1.084,604,1.153,605,1.153,606,1.118,607,1.153,608,1.153,609,0.994,610,1.153,611,1.153,612,1.153,613,1.153,614,1.153,615,1.153,616,1.118,617,0.799,618,1.153,619,1.153,620,1.153,621,1.153,622,1.153,623,0.94]],["title/components/CancelButtonComponent.html",[114,0.121,255,0.851]],["body/components/CancelButtonComponent.html",[3,0.091,4,0.144,5,0.042,8,1.242,10,0.421,11,0.362,13,1.149,22,0.434,24,1.066,36,0.538,38,0.565,39,0.01,40,0.51,41,0.44,42,0.685,44,0.628,45,0.523,48,0.734,50,1.523,52,0.342,57,0.766,58,0.7,60,0.856,79,0.358,81,0.2,85,1.255,86,0.884,94,0.386,95,0.375,96,0.27,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.232,115,0.566,116,1.035,117,0.612,118,0.918,121,1.811,122,0.871,123,1.647,124,0.597,125,2.796,126,1.32,127,1.128,130,2.549,132,1.421,133,1.274,134,1.656,135,1.466,136,1.466,138,1.046,139,1.045,140,1.045,141,1.045,142,1.509,143,1.274,144,1.43,145,0.967,146,1.179,147,1.208,148,1.21,149,1.062,150,0.754,151,1.21,152,0.754,153,1.045,154,0.981,155,0.754,156,0.963,157,0.754,158,0.993,159,1.258,160,0.754,161,0.754,166,1.045,167,1.274,168,1.073,169,0.697,170,1.29,171,1.256,172,1.045,173,1.045,174,0.679,175,0.697,176,1.394,177,0.918,178,0.629,179,0.697,180,1.019,181,0.967,182,0.697,183,1.466,184,0.697,185,1.432,186,1.09,187,0.642,188,0.724,189,0.724,190,0.697,191,1.019,192,1.21,193,1.544,194,1.544,195,0.918,198,0.697,199,1.045,200,1.21,201,0.697,202,0.697,203,1.323,204,0.697,206,0.895,207,1.709,208,0.884,226,1.073,238,0.433,239,0.918,240,0.827,241,0.612,242,1.083,243,0.612,244,1.47,245,0.827,246,0.895,247,0.581,248,0.597,249,1.149,250,0.566,251,0.612,252,0.612,253,0.827,254,0.612,255,1.132,256,1.222,257,0.581,258,1.38,259,0.942,260,0.581,261,0.612,262,0.581,263,0.881,264,1.017,265,0.827,266,0.871,267,0.612,268,0.566,269,0.895,270,1.29,271,0.581,272,0.942,273,1.008,274,0.612,275,0.566,276,0.566,277,0.612,278,0.827,279,0.895,280,0.827,281,0.612,282,0.827,283,0.597,284,0.612,285,0.566,286,0.566,287,0.612,288,0.566,289,0.942,290,0.612,291,0.581,292,0.612,293,0.566,294,0.612,295,0.566,296,0.597,297,1.159,298,0.942,299,0.827,300,0.871,301,0.942,302,0.566,303,0.612,304,0.942,305,0.566,306,0.871,307,0.612,308,0.566,309,0.566,310,0.581,311,0.612,312,0.566,313,0.537,314,0.612,315,0.566,316,0.612,317,0.566,318,0.612,319,0.552,320,1.224,321,0.566,322,0.612,323,0.566,324,0.942,325,0.537,326,0.942,327,0.581,328,0.612,329,0.827,330,1.324,331,1.008,332,0.612,333,0.566,334,0.612,335,0.827,336,0.612,337,0.827,338,1.396,339,0.895,340,0.827,341,0.612,342,0.566,343,0.906,344,0.612,345,0.566,346,0.827,347,0.612,348,0.581,349,0.597,350,0.612,351,0.566,352,0.552,353,0.612,354,0.581,355,0.421,356,0.612,357,0.537,358,0.581,359,0.612,360,0.566,361,0.612,362,0.581,363,1.09,364,0.566,365,0.612,366,0.581,367,0.612,368,0.612,369,0.992,370,1.146,371,2.044,372,1.146,375,1.762,378,1.454,379,0.838,380,0.908,381,0.679,382,1.762,383,1.146,384,1.906,385,2.148,386,2.148,387,1.658,388,2.14,389,2.148,390,2.604,391,1.146,392,1.762,393,1.762,394,1.111,395,1.111,396,0.96,397,0.457,398,1.101,399,0.612,400,1.111,401,2.203,402,1.146,403,2.75,404,1.762,405,1.016,406,1.709,407,1.52,408,0.96,409,1.146,410,1.146,411,1.146,412,1.146,413,1.146,414,1.762,415,1.146,416,0.934,417,1.146,418,1.146,419,1.146,420,1.046,421,1.046,422,1.046,423,0.96,424,1.146,425,1.146,426,1.146,427,1.146,428,1.762,429,1.146,430,1.146,431,1.146,432,1.146,433,2.083,434,1.709,435,1.146,436,1.191,437,2.083,438,1.146,439,2.021,440,0.934,441,2.339,442,1.146,443,1.751,444,2.148,445,1.146,446,1.613,447,1.146,448,1.146,449,1.146,450,1.146,451,1.146,452,1.962,453,1.762,454,1.146,455,1.146,456,1.146,457,1.146,458,1.146,459,1.146,460,1.146,461,1.101,462,1.146,463,1.762,464,1.762,465,1.146,466,1.146,467,1.146,468,1.146,469,1.146,470,1.146,471,1.111,472,1.477,473,1.146,474,1.146,475,1.146,476,1.762,477,1.146,478,1.146,479,1.146,480,1.52,481,1.709,482,1.398,483,2.339,484,2.148,485,1.146,486,1.146,487,1.762,488,1.762,489,1.146,490,2.778,491,1.762,492,1.146,493,1.146,494,1.146,495,1.146,496,2.148,497,1.146,498,1.146,499,1.146,500,1.146,501,1.146,502,1.146,503,0.988,504,0.988,505,1.146,506,1.016,507,1.146,508,1.111,509,1.146,510,1.111,511,1.146,512,1.046,513,1.046,514,1.111,515,1.111,516,0.908,517,1.111,518,2.148,519,1.762,520,1.146,521,0.96,522,0.704,523,0.988,524,1.111,525,0.908,526,1.146,527,1.146,528,0.816,529,1.078,530,1.762,531,1.146,532,1.146,533,1.146,534,1.146,535,1.146,536,1.146,537,1.146,538,2.148,539,1.146,540,1.146,541,1.146,542,1.146,543,1.762,544,1.146,545,1.146,546,1.437,547,1.146,548,1.111,549,1.146,550,1.146,551,1.709,552,1.146,553,1.146,554,1.146,555,1.762,556,1.762,557,0.774,558,1.146,559,1.111,560,1.111,561,1.046,562,1.111,563,1.146,564,1.111,565,1.146,566,1.146,567,1.146,568,1.146,569,1.146,570,1.146,571,1.146,572,1.146,573,1.762,574,1.762,575,1.762,576,1.762,577,1.762,578,1.709,579,1.16,580,1.146,581,1.046,582,1.146,583,1.146,584,0.934,585,1.046,586,1.762,587,1.146,588,1.146,589,1.146,590,2.148,591,1.146,592,1.146,593,1.146,594,1.146,595,1.146,596,1.146,597,1.146,598,1.146,599,1.111,600,1.146,601,1.146,602,1.146,603,1.078,604,1.146,605,1.146,606,1.111,607,1.146,608,1.146,609,0.988,610,1.146,611,1.146,612,1.146,613,1.146,614,1.146,615,1.146,616,1.111,617,0.794,618,1.146,619,1.146,620,1.146,621,1.146,622,1.146,623,0.934,886,1.459,887,2.803]],["title/injectables/ConfigService.html",[0,1.193,18,1.656]],["body/injectables/ConfigService.html",[0,1.938,2,2.832,3,0.19,4,0.16,5,0.088,7,3.179,10,0.367,11,0.605,12,3.022,17,2.529,18,2.691,19,3,22,0.725,24,0.953,26,3.906,27,3.906,32,2.212,33,3.179,36,0.57,38,0.839,39,0.01,40,0.488,41,0.459,42,0.839,48,0.763,52,0.88,53,3.906,54,4.237,55,4.411,57,0.761,58,0.61,59,3.179,60,0.801,70,2.474,79,0.445,80,1.619,81,0.419,82,1.85,94,0.808,95,0.784,96,0.19,97,0.1,98,2.938,105,0.683,110,2.938,111,0.007,112,0.008,113,0.007,187,0.88,188,0.992,189,0.992,436,1.038,522,0.957,671,2.938,672,3.317,673,3.906,674,3.643,827,5.003,828,5.003,835,5.16,836,6.341,838,4.696,852,4.349,853,4.349,854,5.16,855,3.841,856,4.696,862,1.954,864,6.341,871,5.344,874,5.77,875,4.072,876,5.16,888,8.768,889,7.208,890,7.208,891,4.265,892,7.803,893,6.247,894,8.139,895,8.139,896,5.865,897,4.696,898,7.208,899,5.16,900,5.865,901,5.16,902,5.865,903,5.865,904,5.865,905,7.208,906,5.865,907,5.865,908,7.208,909,5.865,910,5.865,911,4.072,912,5.865,913,5.865,914,5.865,915,5.865]],["title/modules/DashboardModule.html",[916,1.478,917,3.289]],["body/modules/DashboardModule.html",[3,0.202,4,0.17,5,0.094,39,0.01,41,0.458,79,0.453,81,0.446,82,1.969,91,5.197,96,0.202,97,0.106,105,0.524,111,0.007,112,0.008,113,0.007,187,0.914,188,1.031,189,1.031,238,0.964,260,1.862,333,1.744,397,1.019,399,1.364,401,3.174,522,1.019,631,2.552,916,2.671,917,6.63,918,2.812,919,2.72,920,3.872,921,3.398,922,3.489,923,3.015,924,5.494,925,5.494,926,5.494,927,5.494,928,3.887,929,3.489,930,2.812,931,2.72,932,6.244,933,3.611,934,3.75,935,4.017,936,2.72,937,4.017,938,4.174,939,4.174,940,6.244,941,6.244,942,4.999,943,3.128,944,3.251,945,5.994,946,4.999]],["title/injectables/DashboardService.html",[0,1.193,947,2.905]],["body/injectables/DashboardService.html",[0,1.64,2,2.184,3,0.147,4,0.124,5,0.068,7,2.452,8,0.915,9,3.844,10,0.283,11,0.512,12,3.065,13,1.332,14,3.448,15,3.305,16,3.448,17,2.235,18,3.153,19,3.171,20,3.448,21,3.054,22,0.613,24,1.041,25,3.9,26,3.305,27,3.738,28,3.9,29,3.448,30,3.448,31,2.944,32,1.872,33,2.452,34,4.881,35,2.909,36,0.586,37,3.622,38,0.923,39,0.01,40,0.537,41,0.479,42,0.923,44,0.683,46,3.622,48,0.818,49,4.998,50,1.629,51,2.677,52,0.745,53,2.452,54,3.59,55,3.305,56,2.677,57,1,58,0.801,59,2.452,60,0.82,61,2.677,62,2.677,63,2.559,64,2.677,65,3.448,66,2.559,67,2.677,68,2.559,69,2.677,70,1.908,71,2.677,72,2.677,73,2.677,74,2.677,75,2.677,76,2.677,77,2.677,78,2.677,79,0.432,80,1.249,81,0.323,82,1.427,83,2.452,84,2.184,85,1.774,86,1.427,87,2.81,88,2.007,89,5.247,90,2.184,91,3.141,92,2.355,93,2.559,94,0.623,95,0.605,96,0.147,97,0.077,98,2.266,99,2.037,100,3.141,101,3.622,102,2.108,105,0.666,107,3.699,108,4.302,109,5.045,111,0.005,112,0.007,113,0.005,168,1.499,242,1.203,436,1.405,579,1.64,698,2.841,796,5.197,843,3.98,897,3.622,947,3.993,948,6.762,949,5.364,950,6.097,951,7.38,952,6.097,953,6.097,954,6.097,955,6.097,956,6.097,957,3.98,958,3.106,959,4.524,960,3.98,961,7.352,962,4.524,963,6.168,964,4.524,965,5.113,966,4.524,967,4.524,968,4.524,969,6.897,970,6.067,971,4.524,972,4.524,973,5.113,974,5.521,975,4.524,976,4.524,977,4.881,978,5.531,979,6.097,980,4.524,981,7.38,982,4.524,983,4.524,984,2.211,985,4.524,986,4.524,987,6.097,988,2.677,989,4.524,990,5.521,991,2.6,992,4.524,993,4.524,994,4.524,995,6.097,996,4.524,997,4.524,998,4.524,999,4.524,1000,4.524,1001,4.524,1002,4.524,1003,4.524,1004,4.524,1005,4.524,1006,4.524,1007,4.524,1008,4.524,1009,4.524,1010,3.98,1011,2.81,1012,3.98,1013,3.98,1014,4.524,1015,4.524,1016,4.524,1017,4.524,1018,4.524,1019,1.908,1020,3.98,1021,4.524,1022,4.524,1023,4.524,1024,2.81]],["title/components/DateTimeComponent.html",[114,0.121,265,0.851]],["body/components/DateTimeComponent.html",[3,0.089,4,0.142,5,0.041,8,1.238,10,0.418,11,0.357,13,1.136,22,0.428,24,1.068,36,0.547,38,0.559,39,0.01,40,0.509,41,0.442,42,0.68,44,0.626,45,0.514,48,0.748,50,1.518,52,0.52,57,0.759,58,0.724,60,0.853,79,0.356,81,0.197,85,1.238,86,0.869,94,0.379,95,0.368,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.231,115,0.557,116,1.023,117,0.602,118,0.906,121,1.808,122,0.86,123,1.645,124,0.586,125,2.609,126,1.315,127,1.119,130,2.535,132,1.425,133,1.26,134,1.648,135,1.455,136,1.455,138,1.028,139,1.031,140,1.031,141,1.031,142,1.613,143,1.26,144,1.417,145,0.954,146,1.166,147,1.2,148,1.197,149,1.051,150,0.741,151,1.346,152,0.741,153,1.031,154,0.971,155,0.741,156,0.954,157,0.741,158,0.987,159,1.252,160,0.741,161,0.741,166,1.031,167,1.26,168,1.063,169,0.685,170,1.281,171,1.248,172,1.031,173,1.031,174,0.668,175,0.685,176,1.381,177,0.906,178,0.618,179,0.685,180,1.005,181,0.954,182,0.685,183,1.455,184,0.685,185,1.532,186,1.078,187,0.635,188,0.716,189,0.716,190,0.685,191,1.005,192,1.346,193,1.532,194,1.532,195,0.906,198,0.685,199,1.031,200,1.197,201,0.685,202,0.685,203,1.311,204,0.685,206,0.883,207,1.686,208,0.869,226,1.063,238,0.425,239,0.906,240,0.816,241,0.602,242,1.077,243,0.602,244,1.46,245,0.816,246,0.883,247,0.571,248,0.586,249,1.136,250,0.557,251,0.602,252,0.602,253,0.816,254,0.602,255,0.816,256,0.997,257,0.571,258,1.371,259,0.93,260,0.571,261,0.602,262,0.571,263,0.872,264,1.008,265,1.121,266,1.051,267,0.602,268,0.557,269,0.883,270,1.278,271,0.571,272,0.93,273,0.997,274,0.602,275,0.557,276,0.557,277,0.602,278,0.816,279,0.883,280,0.816,281,0.602,282,0.816,283,0.586,284,0.602,285,0.557,286,0.557,287,0.602,288,0.557,289,0.93,290,0.602,291,0.571,292,0.602,293,0.557,294,0.602,295,0.557,296,0.586,297,1.151,298,0.93,299,0.816,300,0.86,301,0.93,302,0.557,303,0.602,304,0.93,305,0.557,306,0.86,307,0.602,308,0.557,309,0.557,310,0.571,311,0.602,312,0.557,313,0.528,314,0.602,315,0.557,316,0.602,317,0.557,318,0.602,319,0.542,320,1.213,321,0.557,322,0.602,323,0.557,324,0.93,325,0.528,326,0.93,327,0.571,328,0.602,329,0.816,330,1.315,331,0.997,332,0.602,333,0.557,334,0.602,335,0.816,336,0.602,337,0.816,338,1.386,339,0.883,340,0.816,341,0.602,342,0.557,343,0.896,344,0.602,345,0.557,346,0.816,347,0.602,348,0.571,349,0.586,350,0.602,351,0.557,352,0.542,353,0.602,354,0.571,355,0.413,356,0.602,357,0.528,358,0.571,359,0.602,360,0.557,361,0.602,362,0.571,363,1.078,364,0.557,365,0.602,366,0.571,367,0.602,368,0.602,369,1.455,370,1.126,371,2.087,372,1.126,375,1.739,378,1.445,379,0.823,380,0.893,381,0.668,382,1.739,383,1.126,384,1.885,385,2.125,386,2.125,387,1.64,388,2.609,389,2.125,390,2.39,391,1.126,392,1.739,393,1.739,394,1.092,395,1.092,396,0.944,397,0.449,398,1.086,399,0.602,400,1.092,401,2.183,402,1.126,403,2.731,404,1.739,405,0.999,406,1.686,407,1.499,408,0.944,409,1.126,410,1.126,411,1.126,412,1.126,413,1.126,414,1.739,415,1.126,416,0.918,417,1.126,418,1.126,419,1.126,420,1.028,421,1.028,422,1.028,423,0.944,424,1.126,425,1.126,426,1.126,427,1.126,428,1.739,429,1.126,430,1.126,431,1.126,432,1.126,433,2.06,434,1.686,435,1.126,436,1.183,437,2.06,438,1.126,439,1.999,440,0.918,441,2.317,442,1.126,443,2.106,444,2.125,445,1.126,446,1.596,447,1.126,448,1.126,449,1.126,450,1.126,451,1.126,452,1.941,453,1.739,454,1.126,455,1.126,456,1.126,457,1.126,458,1.126,459,1.126,460,1.126,461,1.086,462,1.126,463,1.739,464,1.739,465,1.126,466,1.126,467,1.126,468,1.126,469,1.126,470,1.126,471,1.092,472,1.458,473,1.126,474,1.126,475,1.126,476,1.739,477,1.126,478,1.126,479,1.126,480,1.499,481,1.686,482,1.379,483,2.76,484,2.125,485,1.126,486,1.126,487,1.739,488,1.739,489,1.126,490,2.76,491,1.739,492,1.126,493,1.126,494,1.126,495,1.126,496,2.125,497,1.126,498,1.126,499,1.126,500,1.126,501,1.126,502,1.126,503,0.971,504,0.971,505,1.126,506,0.999,507,1.126,508,1.092,509,1.126,510,1.092,511,1.126,512,1.028,513,1.028,514,1.092,515,1.092,516,0.893,517,1.092,518,2.125,519,1.739,520,1.126,521,0.944,522,0.694,523,0.971,524,1.092,525,0.893,526,1.126,527,1.126,528,0.802,529,1.059,530,1.739,531,1.126,532,1.126,533,1.126,534,1.126,535,1.126,536,1.126,537,1.126,538,2.125,539,1.126,540,1.126,541,1.126,542,1.126,543,1.739,544,1.126,545,1.126,546,1.418,547,1.126,548,1.092,549,1.126,550,1.126,551,1.092,552,1.126,553,1.126,554,1.126,555,1.739,556,1.739,557,0.76,558,1.126,559,1.092,560,1.092,561,1.028,562,1.092,563,1.126,564,1.092,565,1.126,566,1.126,567,1.126,568,1.126,569,1.126,570,1.126,571,1.126,572,1.126,573,1.739,574,1.739,575,1.739,576,1.739,577,1.739,578,1.686,579,1.144,580,1.126,581,1.028,582,1.126,583,1.126,584,0.918,585,1.028,586,1.739,587,1.126,588,1.126,589,1.126,590,2.125,591,1.126,592,1.126,593,1.126,594,1.126,595,1.126,596,1.126,597,1.126,598,1.126,599,1.092,600,1.126,601,1.739,602,1.739,603,1.636,604,1.739,605,1.739,606,1.686,607,2.125,608,1.739,609,0.971,610,1.126,611,1.126,612,1.739,613,1.739,614,2.39,615,1.126,616,1.092,617,0.781,618,1.126,619,1.126,620,1.126,621,1.126,622,1.126,623,0.918,1025,2.755,1026,2.755,1027,2.205,1028,2.755,1029,2.755]],["title/components/DmpFieldComponent.html",[114,0.121,268,0.896]],["body/components/DmpFieldComponent.html",[3,0.136,4,0.114,5,0.063,10,0.447,11,0.486,12,1.435,22,0.582,24,0.989,32,1.286,36,0.571,38,0.45,39,0.01,40,0.485,41,0.46,42,0.45,44,0.582,45,0.782,48,0.542,52,0.512,57,0.751,58,0.827,60,0.736,70,2.44,79,0.397,80,1.156,81,0.299,85,1.928,86,1.321,94,0.577,95,0.56,96,0.187,97,0.071,105,0.651,111,0.005,112,0.007,113,0.005,114,0.221,115,0.846,116,1.139,117,1.448,118,1.232,121,0.869,122,1.169,123,1.665,124,0.892,126,0.944,127,1.173,132,1.44,136,1.726,138,2.895,145,1.297,146,1.603,147,1.37,148,1.525,149,1.339,151,1.331,154,1.237,156,1.081,158,0.939,159,1.265,168,1.052,187,0.706,188,0.797,189,0.797,205,1.66,206,1.375,226,1.052,238,0.647,239,1.232,240,1.109,241,0.915,242,1.226,243,0.915,244,1.694,245,0.803,246,0.869,247,0.869,248,0.892,249,1.448,250,0.846,251,0.915,252,0.915,253,0.803,254,0.915,255,0.803,256,0.803,257,0.869,258,1.565,259,1.264,260,0.869,261,0.915,262,0.869,263,1.111,264,1.142,265,0.803,266,0.846,267,0.915,268,1.444,269,1.609,270,1.562,271,0.869,272,1.264,273,0.803,274,0.915,275,0.846,276,0.846,277,0.915,278,0.803,279,0.869,280,0.803,281,0.915,282,0.803,283,0.892,284,0.915,285,0.846,286,0.846,287,0.915,288,0.846,289,1.264,290,0.915,291,0.869,292,0.915,293,0.846,294,0.915,295,0.846,296,0.892,297,1.142,298,1.264,299,0.803,300,0.846,301,1.264,302,0.846,303,0.915,304,1.264,305,0.846,306,1.169,307,0.915,308,0.846,309,0.846,310,0.869,311,0.915,312,0.846,313,0.803,314,0.915,315,0.846,316,0.915,317,0.846,318,0.915,319,0.825,320,1.482,321,0.846,322,0.915,323,0.846,324,1.264,325,0.803,326,1.264,327,0.869,328,0.915,329,0.803,330,0.825,331,0.803,332,0.915,333,0.846,334,0.915,335,0.803,336,0.915,337,0.803,338,0.869,339,0.869,340,0.803,341,0.915,342,0.846,343,0.722,344,0.915,345,0.846,346,0.803,347,0.915,348,0.869,349,0.892,350,0.915,351,0.846,352,1.304,353,0.915,354,0.869,355,0.629,356,0.915,357,0.803,358,0.869,359,0.915,360,0.846,361,0.915,362,0.869,363,1.375,364,0.846,365,0.915,366,0.869,367,0.915,368,0.915,378,1.705,379,1.252,380,2.431,397,0.683,398,1.477,399,0.915,405,1.519,407,1.476,408,1.982,416,1.396,436,0.741,440,1.927,522,0.683,584,1.927,698,1.952,830,4.632,933,2.605,1027,4.632,1030,8.748,1031,3.685,1032,7.126,1033,4.229,1034,5.83,1035,6.288,1036,5.83,1037,5.83,1038,6.288,1039,5.83,1040,3.685,1041,6.823,1042,4.117,1043,4.44,1044,5.09,1045,5.09,1046,3.685,1047,4.189,1048,4.289,1049,3.685,1050,3.685,1051,4.189,1052,4.189,1053,4.189,1054,3.685,1055,4.189,1056,4.189,1057,5.09,1058,4.189,1059,5.305,1060,5.305,1061,4.016,1062,5.09,1063,5.09,1064,4.189,1065,6.288,1066,4.289,1067,3.685,1068,4.189,1069,3.685,1070,4.189,1071,3.594,1072,3.685,1073,4.189,1074,3.685,1075,5.83,1076,4.632,1077,3.685,1078,3.685,1079,3.685,1080,3.685,1081,3.685,1082,3.789,1083,4.189,1084,1.825,1085,4.189,1086,4.189,1087,3.685,1088,3.685,1089,3.685,1090,3.685,1091,3.685,1092,5.785,1093,3.354,1094,3.354,1095,3.685,1096,2.743,1097,3.354,1098,3.354,1099,3.685,1100,3.354,1101,3.685,1102,3.685,1103,3.685,1104,4.189,1105,4.189,1106,4.189,1107,4.189,1108,4.189,1109,4.189,1110,3.685,1111,4.189,1112,4.189,1113,3.685,1114,3.685,1115,3.685,1116,3.685,1117,3.685,1118,3.685,1119,3.685,1120,4.632,1121,3.685,1122,3.685,1123,3.685,1124,3.685,1125,3.685,1126,3.685,1127,4.189,1128,3.106,1129,4.189,1130,4.189,1131,4.189,1132,4.189,1133,3.685,1134,1.825,1135,3.354,1136,2.602,1137,2.369,1138,4.189,1139,4.189,1140,4.189,1141,3.685,1142,3.685]],["title/modules/DmpModule.html",[916,1.478,1143,3.289]],["body/modules/DmpModule.html",[3,0.192,4,0.162,5,0.089,24,0.998,39,0.01,79,0.442,81,0.424,82,1.871,96,0.192,97,0.101,111,0.007,112,0.008,113,0.007,128,4.118,238,0.916,264,1.351,269,1.23,271,1.871,397,0.968,399,1.296,631,2.424,916,1.976,918,2.671,919,2.584,920,3.786,921,3.205,922,3.382,923,2.864,928,3.84,929,3.382,930,2.671,931,2.584,933,3.268,934,3.636,935,3.636,936,2.584,937,3.636,938,3.088,939,3.778,944,3.088,1143,6.513,1144,5.219,1145,5.219,1146,5.219,1147,5.932,1148,5.219,1149,4.871,1150,5.444,1151,5.444,1152,5.444,1153,5.932,1154,4.749,1155,3.885,1156,5.219,1157,4.749,1158,4.749,1159,4.749,1160,5.814,1161,5.219,1162,6.541,1163,6.541,1164,6.214,1165,5.444,1166,5.038,1167,4.749,1168,5.219,1169,6.278,1170,6.278,1171,6.278,1172,4.749,1173,4.749,1174,4.398,1175,4.749,1176,4.749,1177,4.118,1178,4.398,1179,4.749,1180,4.749,1181,4.118,1182,5.381,1183,5.811,1184,4.749,1185,4.749,1186,4.749,1187,4.749,1188,4.398,1189,4.749,1190,3.51,1191,3.885,1192,4.118,1193,4.749,1194,3.685,1195,4.749,1196,5.219,1197,4.749,1198,5.219,1199,5.219,1200,5.219,1201,5.219,1202,5.219,1203,5.219,1204,5.219,1205,5.219,1206,5.219,1207,5.219,1208,5.219,1209,4.398]],["title/components/DropdownFieldComponent.html",[114,0.121,273,0.851]],["body/components/DropdownFieldComponent.html",[3,0.089,4,0.142,5,0.041,8,1.237,10,0.417,11,0.356,13,1.378,22,0.426,24,1.059,36,0.549,38,0.678,39,0.01,40,0.516,41,0.445,42,0.748,44,0.636,45,0.512,48,0.748,50,1.539,52,0.335,57,0.865,58,0.747,60,0.852,79,0.355,81,0.196,85,1.234,86,0.864,94,0.377,95,0.366,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.554,116,1.02,117,0.599,118,0.902,121,1.803,122,0.857,123,1.645,124,0.584,125,2.604,126,1.314,127,1.116,130,2.531,132,1.418,133,1.256,134,1.646,135,1.451,136,1.451,138,1.023,139,1.027,140,1.027,141,1.027,142,1.611,143,1.256,144,1.414,145,0.951,146,1.162,147,1.198,148,1.193,149,1.047,150,0.737,151,1.193,152,0.737,153,1.027,154,0.968,155,0.737,156,0.952,157,0.737,158,1.018,159,1.251,160,0.737,161,0.737,166,1.027,167,1.256,168,1.06,169,0.682,170,1.278,171,1.245,172,1.027,173,1.027,174,0.664,175,0.682,176,1.377,177,0.902,178,0.615,179,0.682,180,1.001,181,0.951,182,0.682,183,1.451,184,0.682,185,1.529,186,1.075,187,0.633,188,0.714,189,0.714,190,0.682,191,1.001,192,1.193,193,1.529,194,1.529,195,0.902,198,0.682,199,1.027,200,1.193,201,0.682,202,0.682,203,1.308,204,0.682,206,0.879,207,1.68,208,0.864,226,1.06,238,0.423,239,0.902,240,0.813,241,0.599,242,1.075,243,0.599,244,1.457,245,0.813,246,0.879,247,0.569,248,0.584,249,1.133,250,0.554,251,0.599,252,0.599,253,0.813,254,0.599,255,0.813,256,0.994,257,0.569,258,1.369,259,0.926,260,0.569,261,0.599,262,0.569,263,0.869,264,1.005,265,0.813,266,0.857,267,0.599,268,0.554,269,0.879,270,1.274,271,0.569,272,0.926,273,1.278,274,0.599,275,0.554,276,0.554,277,0.599,278,0.813,279,0.879,280,0.813,281,0.599,282,0.813,283,0.584,284,0.599,285,0.554,286,0.554,287,0.599,288,0.554,289,0.926,290,0.599,291,0.569,292,0.599,293,0.554,294,0.599,295,0.554,296,0.584,297,1.149,298,0.926,299,0.813,300,0.857,301,0.926,302,0.554,303,0.599,304,0.926,305,0.554,306,0.857,307,0.599,308,0.554,309,0.554,310,0.569,311,0.599,312,0.554,313,0.526,314,0.599,315,0.554,316,0.599,317,0.554,318,0.599,319,0.54,320,1.21,321,0.554,322,0.599,323,0.554,324,0.926,325,0.526,326,0.926,327,0.569,328,0.599,329,0.813,330,1.313,331,0.994,332,0.599,333,0.554,334,0.599,335,0.813,336,0.599,337,0.813,338,1.383,339,0.879,340,0.813,341,0.599,342,0.554,343,0.893,344,0.599,345,0.554,346,0.813,347,0.599,348,0.569,349,0.584,350,0.599,351,0.554,352,0.54,353,0.599,354,0.569,355,0.411,356,0.599,357,0.526,358,0.569,359,0.599,360,0.554,361,0.599,362,0.569,363,1.075,364,0.554,365,0.599,366,0.569,367,0.599,368,0.599,369,1.342,370,1.12,371,2.085,372,1.12,375,1.732,378,1.442,379,0.819,380,0.888,381,0.664,382,1.732,383,1.12,384,1.879,385,2.384,386,2.118,387,1.635,388,2.115,389,2.118,390,2.384,391,1.12,392,1.732,393,1.732,394,1.086,395,1.086,396,0.939,397,0.447,398,1.082,399,0.599,400,1.086,401,2.177,402,1.12,403,2.725,404,1.732,405,0.994,406,1.68,407,1.494,408,0.939,409,1.12,410,1.12,411,1.12,412,1.12,413,1.12,414,1.732,415,1.12,416,0.913,417,1.12,418,1.12,419,1.12,420,1.023,421,1.023,422,1.023,423,0.939,424,1.12,425,1.12,426,1.12,427,1.12,428,1.732,429,1.12,430,1.12,431,1.12,432,1.12,433,2.643,434,2.054,435,1.12,436,1.18,437,2.054,438,1.12,439,1.993,440,1.412,441,2.846,442,1.732,443,2.101,444,2.577,445,2.118,446,1.936,447,2.118,448,1.732,449,1.12,450,1.12,451,1.12,452,2.354,453,1.732,454,1.12,455,1.12,456,1.12,457,1.12,458,1.12,459,1.12,460,1.12,461,1.082,462,1.12,463,1.732,464,1.732,465,1.12,466,1.12,467,1.12,468,1.12,469,1.12,470,1.12,471,1.086,472,1.452,473,1.12,474,1.12,475,1.12,476,1.732,477,1.12,478,1.12,479,1.12,480,1.494,481,1.68,482,1.374,483,2.311,484,2.118,485,1.12,486,1.12,487,1.732,488,1.732,489,1.12,490,2.755,491,1.732,492,1.12,493,1.12,494,1.12,495,1.12,496,2.118,497,1.12,498,1.12,499,1.12,500,1.12,501,1.12,502,1.12,503,0.966,504,0.966,505,1.12,506,0.994,507,1.12,508,1.086,509,1.12,510,1.086,511,1.12,512,1.023,513,1.023,514,1.086,515,1.086,516,0.888,517,1.086,518,2.118,519,1.732,520,1.12,521,0.939,522,0.447,523,0.966,524,1.086,525,0.888,526,1.12,527,1.12,528,0.798,529,1.054,530,1.732,531,1.12,532,1.12,533,1.12,534,1.12,535,1.12,536,1.12,537,1.12,538,2.118,539,1.12,540,1.12,541,1.12,542,1.12,543,1.732,544,1.12,545,1.12,546,1.412,547,1.12,548,1.086,549,1.12,550,1.12,551,1.086,552,1.12,553,1.12,554,1.12,555,1.732,556,1.732,557,0.757,558,1.12,559,1.086,560,1.086,561,1.023,562,1.086,563,1.12,564,1.086,565,1.12,566,1.12,567,1.12,568,1.12,569,1.12,570,1.12,571,1.12,572,1.12,573,1.732,574,1.732,575,1.732,576,1.732,577,1.732,578,1.68,579,1.14,580,1.12,581,1.023,582,1.12,583,1.12,584,0.913,585,1.023,586,1.732,587,1.12,588,1.12,589,1.12,590,2.118,591,1.12,592,1.12,593,1.12,594,1.12,595,1.12,596,1.12,597,1.12,598,1.12,599,1.086,600,1.12,601,1.12,602,1.12,603,1.054,604,1.12,605,1.12,606,1.086,607,1.12,608,1.12,609,0.966,610,1.12,611,1.12,612,1.12,613,1.12,614,1.12,615,1.12,616,1.086,617,0.777,618,1.12,619,1.12,620,1.12,621,1.12,622,1.12,623,0.913,1210,4.239,1211,3.143,1212,2.741,1213,2.741,1214,2.412,1215,2.741,1216,2.741,1217,2.412]],["title/injectables/EmailNotificationService.html",[0,1.193,1218,3.289]],["body/injectables/EmailNotificationService.html",[0,1.826,2,2.574,3,0.173,4,0.146,5,0.08,7,2.889,8,1.019,9,3.908,10,0.333,11,0.57,12,3.128,13,1.484,14,3.84,15,4.402,16,3.84,17,2.632,18,3.245,19,3.285,20,3.84,21,3.401,22,0.683,24,1.014,25,4.225,26,3.68,27,4.049,28,4.225,29,3.84,30,3.84,31,3.278,32,2.084,33,2.889,36,0.59,38,0.893,39,0.01,40,0.519,41,0.483,42,0.893,44,0.689,48,0.801,49,4.018,50,1.662,51,3.155,52,0.651,53,2.889,54,3.889,55,3.68,56,3.155,57,0.969,58,0.777,59,2.889,60,0.902,61,3.155,62,3.155,63,3.015,64,3.155,65,3.84,66,3.015,67,3.155,68,3.015,69,3.155,70,2.248,71,3.155,72,3.155,73,3.155,74,3.155,75,3.155,76,3.155,77,3.155,78,3.155,79,0.425,80,1.472,81,0.381,82,1.681,83,2.889,84,2.574,87,3.312,88,2.289,96,0.173,97,0.091,98,2.671,99,2.401,102,2.484,105,0.448,108,2.889,111,0.006,112,0.008,113,0.006,126,1.325,187,0.651,242,0.778,263,1.362,355,1.019,522,0.87,673,4.402,837,4.69,838,5.436,839,3.953,852,3.953,853,5.832,869,3.491,886,2.775,1218,5.034,1219,8.304,1220,3.534,1221,6.79,1222,6.79,1223,5.331,1224,4.69,1225,5.331,1226,5.331,1227,6.79,1228,5.331,1229,5.331,1230,5.331,1231,4.69]],["title/classes/EmbeddableComponent.html",[97,0.075,1232,2.625]],["body/classes/EmbeddableComponent.html",[3,0.113,4,0.095,5,0.052,8,1.131,10,0.437,11,0.426,13,0.761,22,0.51,24,1.053,35,2.14,36,0.557,38,0.752,39,0.01,40,0.456,41,0.45,42,0.785,44,0.664,45,0.948,48,0.76,50,1.494,52,0.62,57,0.947,58,0.819,60,0.919,79,0.395,81,0.363,94,0.48,95,0.466,96,0.236,97,0.128,105,0.7,111,0.004,112,0.006,113,0.004,114,0.18,121,1.716,123,0.923,125,2.171,126,0.828,132,1.305,133,1.23,134,1.808,135,1.378,136,1.378,139,1.23,140,1.23,141,1.594,142,1.475,143,1.594,144,1.451,145,1.138,146,1.475,147,0.6,156,0.568,158,1.035,159,1.285,164,1.38,166,0.844,167,1.23,168,1.37,169,0.866,170,1.148,171,1.118,172,0.844,173,0.844,174,0.844,175,0.866,176,1.199,177,0.742,178,1.138,179,0.866,180,0.823,181,1.138,182,0.866,183,1.168,184,0.866,185,0.742,186,1.053,187,0.62,188,0.699,189,0.699,190,0.866,191,0.823,192,0.802,193,0.844,194,1.23,195,0.742,198,0.866,199,0.844,200,0.802,201,0.866,202,0.866,203,0.781,204,0.866,205,1.38,208,1.098,214,2.302,216,2.302,221,1.38,226,1.327,242,0.508,297,1.205,319,0.686,320,1.242,325,0.973,369,1.777,371,1.262,378,0.723,381,1.23,384,1.263,387,2.075,396,1.193,397,0.568,407,1.227,416,1.16,421,1.3,422,1.3,423,1.193,436,1.477,440,1.691,446,1.069,472,2.253,557,0.962,579,2.026,585,1.3,617,0.987,623,1.16,625,1.129,670,1.424,862,2.431,991,2.774,1084,2.608,1128,2.583,1134,2.608,1136,2.164,1137,3.72,1155,2.281,1194,2.164,1232,2.061,1233,2.789,1234,3.523,1235,3.003,1236,3.003,1237,2.751,1238,3.153,1239,3.003,1240,3.483,1241,2.751,1242,3.483,1243,3.483,1244,3.483,1245,4.583,1246,4.008,1247,2.751,1248,3.64,1249,3.503,1250,4.084,1251,3.719,1252,2.999,1253,3.483,1254,3.483,1255,2.79,1256,3.483,1257,1.813,1258,3.153,1259,2.418,1260,4.063,1261,2.583,1262,4.308,1263,2.789,1264,2.789,1265,4.063,1266,2.418,1267,2.789,1268,2.789,1269,2.789,1270,2.789,1271,2.789,1272,2.789,1273,2.789,1274,2.789,1275,2.789,1276,2.789,1277,2.789,1278,2.789,1279,2.789,1280,2.789,1281,2.789,1282,2.789,1283,2.789,1284,2.789,1285,3.523,1286,2.789,1287,4.793,1288,2.583,1289,2.789,1290,2.789,1291,2.789,1292,2.789,1293,2.789,1294,4.063,1295,4.063,1296,3.763,1297,2.789,1298,4.063,1299,2.789,1300,2.789,1301,2.789,1302,2.789,1303,2.789,1304,2.789,1305,4.063,1306,4.877,1307,2.789,1308,2.789,1309,2.789,1310,2.789,1311,2.789,1312,2.789,1313,3.956,1314,3.324,1315,4.063,1316,3.324,1317,4.793,1318,4.063,1319,2.789,1320,2.789,1321,2.789,1322,2.789,1323,2.789,1324,5.266,1325,4.063,1326,4.793,1327,4.793,1328,3.245,1329,2.789,1330,2.789,1331,4.063,1332,4.063,1333,4.567,1334,2.789,1335,2.789,1336,2.789,1337,4.063,1338,2.789,1339,2.789,1340,2.789,1341,2.789,1342,5.266,1343,2.789,1344,2.789,1345,2.789,1346,4.063,1347,2.789,1348,2.789,1349,2.789,1350,4.063,1351,2.789,1352,2.789,1353,2.789,1354,2.789,1355,2.789,1356,2.789,1357,2.789,1358,2.87,1359,2.789,1360,2.789,1361,2.789,1362,2.789,1363,2.789,1364,2.789,1365,2.789,1366,2.789,1367,2.789,1368,2.789,1369,2.789,1370,4.063,1371,3.153,1372,2.789,1373,2.789,1374,2.789,1375,2.789,1376,2.789,1377,2.789,1378,2.789,1379,2.789,1380,2.789,1381,2.418,1382,2.789,1383,2.789,1384,2.789,1385,5.266,1386,4.063,1387,4.063,1388,2.789,1389,2.789,1390,2.789,1391,2.789,1392,4.793,1393,2.789,1394,2.789,1395,2.281,1396,2.418,1397,2.789,1398,4.063,1399,4.793,1400,4.063,1401,4.063,1402,2.789,1403,2.789,1404,2.789,1405,2.789,1406,2.418,1407,4.063,1408,2.789,1409,2.789,1410,2.789,1411,2.418,1412,2.789,1413,2.789,1414,2.789,1415,2.789,1416,2.789,1417,2.789,1418,2.789,1419,2.281,1420,4.793,1421,3.245,1422,3.003,1423,3.153,1424,3.003,1425,3.153,1426,4.793,1427,2.789,1428,2.789,1429,4.793,1430,2.061,1431,2.281,1432,2.789,1433,2.789,1434,1.97,1435,1.97,1436,1.97,1437,2.87,1438,4.063,1439,2.789,1440,2.789,1441,2.789,1442,2.789,1443,2.789,1444,2.789,1445,2.789,1446,2.061,1447,4.063,1448,4.063,1449,2.789,1450,2.789,1451,5.266,1452,5.266,1453,5.266,1454,4.793,1455,4.063,1456,3.543,1457,2.789,1458,2.789,1459,4.793,1460,4.063,1461,2.789,1462,2.789,1463,2.789,1464,2.789,1465,2.789,1466,2.789,1467,2.789,1468,2.789,1469,2.789,1470,2.789,1471,2.789,1472,2.789,1473,4.063,1474,4.063,1475,2.789,1476,2.789,1477,2.789,1478,4.063,1479,2.789,1480,2.789,1481,2.789,1482,2.789,1483,2.789,1484,2.789,1485,2.789,1486,2.789,1487,2.789,1488,2.789,1489,2.789,1490,4.063,1491,5.843,1492,2.789,1493,2.789,1494,2.789,1495,2.789,1496,2.789]],["title/components/ExportFormComponent.html",[114,0.121,275,0.896]],["body/components/ExportFormComponent.html",[3,0.135,4,0.114,5,0.063,8,0.866,10,0.261,11,0.484,12,1.976,22,0.58,24,0.705,31,2.786,32,1.771,35,3.573,36,0.583,38,0.833,39,0.01,40,0.506,41,0.47,42,0.833,44,0.581,45,0.779,48,0.788,50,1.582,52,0.988,57,0.749,58,0.6,70,2.433,79,0.406,80,1.152,81,0.298,85,1.679,86,1.316,88,1.214,94,0.574,95,0.558,96,0.281,97,0.071,105,0.35,111,0.005,112,0.006,113,0.005,114,0.204,115,0.843,116,1.136,117,0.912,118,1.228,122,1.166,123,1.665,124,0.888,126,0.681,127,1.171,147,0.994,156,0.681,158,1.125,159,0.941,187,0.705,188,0.794,189,0.794,209,3.575,226,0.759,238,0.644,239,1.228,240,1.106,241,0.912,242,1.041,243,0.912,244,1.692,245,0.8,246,0.865,247,0.865,248,0.888,249,1.445,250,0.843,251,0.912,252,0.912,253,0.8,254,0.912,255,0.8,256,0.8,257,0.865,258,1.563,259,1.261,260,0.865,261,0.912,262,0.865,263,1.109,264,1.415,265,0.8,266,0.843,267,0.912,268,0.843,269,1.197,270,1.559,271,0.865,272,1.261,273,0.8,274,0.912,275,1.442,276,0.843,277,0.912,278,0.8,279,0.865,280,0.8,281,0.912,282,0.8,283,0.888,284,0.912,285,0.843,286,0.843,287,0.912,288,0.843,289,1.261,290,0.912,291,0.865,292,0.912,293,0.843,294,0.912,295,0.843,296,0.888,297,1.139,298,1.261,299,0.8,300,0.843,301,1.261,302,0.843,303,0.912,304,1.261,305,0.843,306,1.166,307,0.912,308,0.843,309,0.843,310,0.865,311,0.912,312,0.843,313,0.8,314,0.912,315,0.843,316,0.912,317,0.843,318,0.912,319,0.821,320,1.48,321,0.843,322,0.912,323,0.843,324,1.261,325,0.8,326,1.261,327,0.865,328,0.912,329,0.8,330,0.821,331,0.8,332,0.912,333,0.843,334,0.912,335,0.8,336,0.912,337,0.8,338,0.865,339,0.865,340,0.8,341,0.912,342,0.843,343,0.719,344,0.912,345,0.843,346,0.8,347,0.912,348,0.865,349,0.888,350,0.912,351,0.843,352,0.821,353,0.912,354,0.865,355,0.626,356,0.912,357,0.8,358,0.865,359,0.912,360,0.843,361,0.912,362,0.865,363,1.372,364,0.843,365,0.912,366,0.865,367,0.912,368,0.912,378,0.865,436,1.171,482,1.352,522,0.681,561,2.663,639,2.89,668,3.671,747,2.592,922,2.689,984,1.513,1061,4.591,1084,1.817,1149,3.584,1150,4.591,1151,4.005,1152,4.591,1246,2.89,1456,4.788,1497,8.586,1498,4.172,1499,5.769,1500,5.653,1501,4.619,1502,4.619,1503,5.769,1504,6.613,1505,6.613,1506,6.613,1507,5.818,1508,6.613,1509,6.613,1510,7.489,1511,6.613,1512,6.613,1513,4.277,1514,4.277,1515,4.005,1516,6.277,1517,7.135,1518,5.769,1519,4.903,1520,4.277,1521,4.903,1522,4.005,1523,4.277,1524,4.903,1525,4.591,1526,4.172,1527,4.432,1528,6.613,1529,5.769,1530,5.769,1531,4.172,1532,4.172,1533,5.769,1534,4.172,1535,4.277,1536,3.34,1537,3.093,1538,4.277,1539,3.34,1540,3.34,1541,3.093,1542,3.34,1543,3.093,1544,3.34,1545,2.469,1546,3.34,1547,3.34,1548,3.093,1549,3.34,1550,3.093,1551,4.172,1552,4.172,1553,4.172,1554,4.172,1555,4.172,1556,4.172,1557,4.172,1558,4.172,1559,3.34,1560,3.34,1561,3.34,1562,3.34,1563,3.093,1564,3.093,1565,3.34,1566,4.172,1567,4.172,1568,4.172,1569,4.172,1570,3.093,1571,5.769,1572,3.093,1573,3.671,1574,4.172,1575,3.34,1576,4.172,1577,3.34,1578,4.172,1579,5.769,1580,4.172,1581,4.172,1582,4.172,1583,5.769,1584,4.172,1585,3.093,1586,4.172,1587,4.172,1588,5.769,1589,5.769,1590,4.172,1591,4.172,1592,4.172,1593,4.172,1594,4.172,1595,4.172,1596,6.277,1597,7.135,1598,5.769]],["title/modules/ExportModule.html",[916,1.478,1599,3.289]],["body/modules/ExportModule.html",[3,0.191,4,0.161,5,0.089,24,0.996,39,0.01,79,0.445,81,0.421,82,1.859,96,0.234,97,0.1,111,0.007,112,0.008,113,0.007,128,4.092,170,1.13,238,0.91,264,1.347,275,1.822,388,2.137,397,0.962,399,1.288,631,2.409,916,1.964,918,2.654,919,2.568,920,3.776,921,3.196,922,3.369,923,2.846,928,3.835,929,3.369,930,2.654,931,2.568,933,3.256,934,3.622,935,3.622,936,2.568,937,3.622,938,3.764,939,3.764,944,3.069,1149,4.858,1150,5.429,1151,5.429,1152,5.429,1154,4.719,1155,3.86,1156,5.186,1157,4.719,1158,4.719,1159,4.719,1160,5.798,1161,5.186,1162,6.527,1163,6.527,1164,6.203,1165,5.429,1166,5.019,1167,4.719,1168,5.186,1169,6.261,1170,6.261,1171,6.261,1172,4.719,1173,4.719,1174,4.37,1175,4.719,1176,4.719,1177,4.092,1178,4.37,1179,4.719,1180,4.719,1181,4.092,1182,5.36,1183,5.788,1184,4.719,1185,4.719,1186,4.719,1187,4.719,1188,4.37,1189,4.719,1190,3.488,1191,3.86,1192,4.092,1193,4.719,1194,3.662,1195,4.719,1196,5.186,1197,4.719,1198,5.186,1199,5.186,1200,5.186,1201,5.186,1202,5.186,1203,5.186,1204,5.186,1205,5.186,1206,5.186,1207,5.186,1208,5.186,1209,4.37,1599,6.506,1600,5.186,1601,5.186,1602,5.895,1603,5.895,1604,5.186,1605,5.895,1606,5.788,1607,4.719]],["title/classes/ExternalLookupDataService.html",[97,0.075,1608,3.289]],["body/classes/ExternalLookupDataService.html",[0,1.192,3,0.094,4,0.079,5,0.044,8,1.024,9,1.931,10,0.376,12,0.995,13,0.635,17,0.942,18,2.245,19,3.157,22,0.446,24,1.081,32,1.361,36,0.424,38,0.647,39,0.01,40,0.376,41,0.324,42,0.647,44,0.699,45,1.209,48,0.564,52,0.734,58,0.71,60,0.833,79,0.416,80,0.802,81,0.208,82,0.916,83,1.575,84,1.403,85,0.846,88,1.29,94,0.4,95,0.389,96,0.195,97,0.116,99,1.309,102,1.354,105,0.729,107,1.354,110,1.456,111,0.006,112,0.005,113,0.003,114,0.147,121,0.92,123,0.528,126,0.474,132,0.981,134,0.969,142,0.652,147,0.501,148,0.669,149,0.896,154,0.543,156,0.474,158,1.132,159,1.194,168,0.977,170,0.557,171,0.543,178,0.652,181,0.994,186,0.603,187,0.355,188,0.4,189,0.4,195,0.619,203,0.652,205,1.152,206,0.92,214,1.117,216,1.117,221,2.813,225,4.241,226,1.391,256,1.361,258,0.572,263,1.404,297,0.501,313,1.031,355,0.807,357,0.557,369,1.571,371,1.103,378,1.518,379,0.868,381,0.704,397,0.474,408,0.995,416,0.968,423,0.995,436,1.52,443,1.477,472,1.841,480,1.894,482,1.742,506,1.054,522,0.877,528,1.29,557,0.802,581,1.085,617,1.523,625,0.942,670,1.188,671,1.456,673,3.26,674,1.805,698,2.066,855,1.903,859,2.155,862,2.438,875,3.078,921,1.188,943,1.456,984,2.953,988,1.72,991,1.024,1019,3.595,1033,4.603,1071,1.805,1134,1.931,1137,1.643,1235,1.72,1236,1.72,1237,2.403,1239,1.72,1241,1.575,1245,2.403,1246,2.221,1247,1.575,1248,1.513,1249,1.456,1250,1.575,1252,1.456,1255,3.018,1257,2.798,1258,4.023,1313,3.26,1314,1.903,1328,2.403,1395,1.903,1419,1.903,1430,1.72,1431,1.903,1527,2.754,1570,2.155,1608,3.985,1609,2.326,1610,5.185,1611,3.901,1612,4.815,1613,2.326,1614,4.303,1615,4.815,1616,5.185,1617,5.185,1618,2.906,1619,2.906,1620,4.303,1621,2.906,1622,6.46,1623,4.815,1624,2.906,1625,4.815,1626,2.906,1627,5.061,1628,2.155,1629,4.175,1630,1.805,1631,2.326,1632,2.155,1633,2.155,1634,2.155,1635,2.326,1636,3.549,1637,3.549,1638,2.326,1639,2.326,1640,2.326,1641,2.326,1642,3.549,1643,4.815,1644,2.326,1645,2.326,1646,4.303,1647,5.683,1648,2.326,1649,2.326,1650,2.326,1651,2.326,1652,2.326,1653,2.326,1654,2.326,1655,2.326,1656,2.326,1657,1.72,1658,1.805,1659,4.303,1660,2.326,1661,4.303,1662,2.326,1663,5.185,1664,2.326,1665,4.303,1666,2.326,1667,4.303,1668,2.326,1669,3.549,1670,2.326,1671,5.683,1672,2.326,1673,2.326,1674,2.326,1675,2.903,1676,4.815,1677,3.549,1678,2.326,1679,3.549,1680,2.326,1681,2.326,1682,2.326,1683,2.326,1684,3.549,1685,3.549,1686,2.326,1687,3.549,1688,3.549,1689,3.549,1690,1.805,1691,3.549,1692,2.326,1693,3.549,1694,2.326,1695,2.326,1696,5.683,1697,5.185,1698,2.326,1699,2.326,1700,2.326,1701,1.903,1702,2.326,1703,4.175,1704,2.326,1705,2.326,1706,2.326,1707,3.549,1708,2.326,1709,2.326,1710,2.326,1711,2.155,1712,1.903,1713,2.326,1714,2.326,1715,2.326,1716,5.859,1717,2.326,1718,2.326,1719,3.549,1720,2.326,1721,2.155,1722,2.326,1723,2.326,1724,2.326,1725,2.155,1726,2.326,1727,2.326,1728,4.303,1729,4.815,1730,2.326,1731,2.155,1732,2.326,1733,2.326,1734,4.815,1735,2.155,1736,2.326,1737,2.155,1738,2.155,1739,2.155,1740,2.155,1741,2.326,1742,2.326,1743,2.326,1744,2.326,1745,2.326,1746,1.805,1747,3.549,1748,3.287,1749,4.303,1750,2.326,1751,2.326,1752,2.326,1753,4.303,1754,5.464,1755,5.683,1756,6.393,1757,5.185,1758,4.815,1759,3.549,1760,4.303,1761,3.339,1762,5.185,1763,3.52,1764,4.303,1765,4.303,1766,4.303,1767,4.303,1768,2.326,1769,2.326,1770,2.326,1771,5.464,1772,2.155,1773,2.155,1774,2.326,1775,2.326,1776,2.326,1777,3.549,1778,3.549,1779,2.326,1780,2.326,1781,2.326,1782,5.56,1783,3.287,1784,2.326,1785,3.549,1786,2.017,1787,2.155,1788,2.326,1789,2.326,1790,3.549,1791,2.326,1792,2.326,1793,2.326,1794,2.326,1795,2.326,1796,3.549,1797,2.326,1798,2.326,1799,3.549,1800,2.326,1801,3.339,1802,2.326,1803,3.549,1804,3.549,1805,3.549,1806,3.549,1807,3.549,1808,4.815,1809,2.326,1810,3.549,1811,5.185,1812,3.549,1813,3.549,1814,2.326,1815,3.549,1816,3.549,1817,3.549,1818,3.287,1819,3.549,1820,2.326,1821,2.326,1822,2.326,1823,2.326,1824,2.155,1825,2.326,1826,2.326,1827,2.326,1828,2.326,1829,2.326,1830,2.326,1831,2.326,1832,2.326,1833,2.326,1834,2.326,1835,2.326,1836,2.326,1837,2.326,1838,2.326,1839,2.326,1840,2.326,1841,2.326,1842,2.326,1843,1.903,1844,2.326,1845,2.326,1846,2.326,1847,2.326,1848,2.326,1849,2.326,1850,2.326,1851,2.326,1852,3.549,1853,3.287,1854,2.326,1855,2.326,1856,2.326,1857,2.326,1858,2.326,1859,2.326,1860,2.326,1861,2.326,1862,2.326,1863,2.903,1864,2.326,1865,2.326,1866,2.326,1867,2.326,1868,2.326,1869,2.326,1870,4.303,1871,2.326,1872,2.155,1873,2.326,1874,1.903,1875,2.326,1876,2.326,1877,2.326,1878,4.303,1879,2.326,1880,2.326,1881,2.326,1882,2.326,1883,2.326,1884,2.326,1885,2.326,1886,2.155,1887,2.326,1888,1.805,1889,2.326,1890,2.326,1891,2.155,1892,2.155,1893,1.903,1894,2.326,1895,2.326,1896,3.549,1897,2.326,1898,2.326,1899,2.326,1900,2.326,1901,2.155,1902,2.326,1903,2.326,1904,2.326,1905,2.326,1906,2.326,1907,2.326]],["title/injectables/FieldControlMetaService.html",[0,1.193,1908,2.625]],["body/injectables/FieldControlMetaService.html",[0,1.669,2,2.243,3,0.15,4,0.127,5,0.07,8,0.931,9,3.855,10,0.291,11,0.521,12,3.094,13,1.356,14,3.51,15,3.364,16,3.51,17,2.265,18,3.195,19,3.19,20,3.51,21,3.109,22,0.624,24,0.977,25,3.953,26,3.364,27,3.788,28,3.953,29,3.51,30,3.51,31,2.997,32,1.905,33,2.518,35,3.499,36,0.584,38,0.903,39,0.01,40,0.525,41,0.476,42,0.903,44,0.603,48,0.803,50,1.635,51,2.749,52,0.758,53,2.518,54,3.231,55,3.364,56,2.749,57,0.907,58,0.727,59,2.518,60,0.776,61,2.749,62,2.749,63,2.627,64,2.749,65,3.51,66,2.627,67,2.749,68,2.627,69,2.749,70,1.959,71,2.749,72,2.749,73,2.749,74,2.749,75,2.749,76,2.749,77,2.749,78,2.749,79,0.438,80,1.282,81,0.332,82,1.465,88,2.171,93,2.627,94,0.64,95,0.621,96,0.15,97,0.106,98,2.327,99,2.092,100,3.225,102,2.165,105,0.705,111,0.005,112,0.007,113,0.005,114,0.127,132,0.758,170,0.891,206,0.964,369,1.879,436,1.32,461,2.084,503,2.739,504,2.739,528,1.352,625,2.265,671,2.327,672,2.627,698,2.892,730,4.087,745,3.225,860,4.087,862,1.548,1033,3.673,1042,4.342,1043,4.634,1120,3.719,1134,3.249,1259,3.225,1358,4.692,1396,4.308,1406,3.225,1411,3.225,1629,5.76,1630,2.886,1721,4.602,1843,5.434,1853,3.444,1908,3.673,1909,4.646,1910,6.207,1911,5.46,1912,6.207,1913,5.46,1914,6.207,1915,6.207,1916,7.46,1917,4.646,1918,5.46,1919,4.646,1920,4.087,1921,6.207,1922,4.646,1923,6.207,1924,5.46,1925,4.646,1926,6.563,1927,3.719,1928,4.646,1929,4.087,1930,4.087,1931,4.646,1932,6.207,1933,4.646,1934,4.646,1935,6.207,1936,4.646,1937,4.646,1938,4.646,1939,4.646,1940,4.646,1941,4.646,1942,6.989,1943,4.646,1944,4.646,1945,4.646,1946,6.207,1947,6.207,1948,2.749,1949,4.646,1950,4.646,1951,4.646,1952,4.646,1953,4.646,1954,4.646,1955,4.646,1956,4.646,1957,4.646,1958,4.646,1959,4.646,1960,6.207,1961,4.646,1962,4.646,1963,4.646,1964,4.646,1965,4.646,1966,7.392,1967,4.646,1968,4.646,1969,4.646,1970,4.646,1971,4.646,1972,4.646,1973,4.087,1974,4.646,1975,4.646,1976,4.646,1977,3.444,1978,4.646,1979,4.087,1980,4.646]],["title/injectables/FieldControlService.html",[0,1.193,1981,3.289]],["body/injectables/FieldControlService.html",[0,1.84,2,2.606,3,0.175,4,0.147,5,0.081,10,0.338,11,0.574,12,2.933,17,1.749,18,3.159,22,0.688,32,2.1,35,3.569,36,0.566,38,0.91,39,0.01,40,0.529,41,0.456,42,0.91,48,0.793,52,0.836,57,0.888,58,0.712,60,0.76,79,0.456,80,1.49,81,0.386,88,2.372,93,3.052,94,0.743,95,0.722,96,0.175,97,0.092,99,2.43,100,3.746,105,0.684,111,0.006,112,0.008,113,0.006,132,1.289,146,1.953,149,1.597,151,1.575,154,1.278,156,1.381,170,1.035,171,1.008,187,0.836,188,0.942,189,0.942,206,1.119,369,2.004,397,0.881,436,0.955,461,1.378,522,0.881,625,2.435,670,2.206,671,2.704,672,3.052,855,3.534,856,4.321,862,2.28,958,3.383,1033,3.193,1042,4.667,1043,4.908,1134,3.551,1255,2.515,1257,2.809,1358,4.786,1629,5.783,1630,3.352,1908,4.675,1911,6.02,1913,6.02,1918,6.02,1920,4.748,1924,6.02,1926,6.951,1927,4.321,1929,4.748,1930,4.748,1981,5.073,1982,5.397,1983,6.843,1984,6.843,1985,7.901,1986,6.843,1987,6.843,1988,6.843,1989,5.397,1990,5.571,1991,6.843,1992,6.843,1993,5.397,1994,5.397,1995,5.397,1996,5.397,1997,5.397,1998,6.843,1999,5.397,2000,6.843,2001,5.397,2002,6.843,2003,5.397,2004,5.397,2005,5.397,2006,3.746,2007,4.001,2008,5.397,2009,5.397,2010,5.397,2011,5.397,2012,5.397,2013,5.397,2014,5.397,2015,5.397,2016,5.397,2017,5.397,2018,5.397,2019,5.397,2020,5.397,2021,5.397,2022,5.397,2023,5.397]],["title/components/GenericGroupComponent.html",[114,0.121,276,0.896]],["body/components/GenericGroupComponent.html",[3,0.117,4,0.099,5,0.054,8,0.919,10,0.463,11,0.438,13,1.464,22,0.525,24,1.009,36,0.574,38,0.764,39,0.01,40,0.548,41,0.479,42,0.795,44,0.647,45,0.676,48,0.766,50,1.633,52,0.638,57,1.013,58,0.812,60,0.789,79,0.313,81,0.259,94,0.499,95,0.484,96,0.198,97,0.145,105,0.304,111,0.004,112,0.006,113,0.004,114,0.22,115,0.732,116,1.319,117,0.792,118,1.112,121,1.764,122,1.055,123,1.656,124,0.771,126,0.999,127,1.084,132,1.348,133,1.266,134,1.552,135,1.409,136,1.409,139,1.266,140,1.266,141,1.624,142,1.71,143,1.484,144,1.484,145,1.171,146,1.373,147,1.457,148,1.202,149,0.732,150,0.974,151,0.834,152,0.974,153,0.878,154,0.676,155,0.974,156,1.244,157,0.974,158,1.007,159,0.852,160,0.974,161,0.974,164,1.436,166,0.878,167,1.266,168,1.113,169,0.901,170,1.174,171,0.975,172,0.878,173,0.878,174,0.878,175,0.901,176,1.233,177,0.771,178,1.171,179,0.901,180,0.856,181,1.171,182,0.901,183,1.881,184,0.901,185,1.718,186,0.751,187,0.748,188,0.843,189,0.843,190,0.901,191,0.856,192,0.834,193,0.878,194,1.624,195,0.771,198,0.901,199,0.878,200,0.834,201,0.901,202,0.901,203,0.812,204,0.901,226,1.562,238,0.559,239,1.112,240,1.001,241,0.792,242,0.977,243,0.792,244,1.617,245,0.695,246,0.751,247,0.751,248,0.771,249,1.338,250,0.732,251,0.792,252,0.792,253,0.695,254,0.792,255,0.695,256,0.695,257,0.751,258,1.501,259,1.141,260,0.751,261,0.792,262,0.751,263,1.027,264,1.055,265,0.695,266,0.732,267,0.792,268,0.732,269,1.083,270,1.464,271,0.751,272,1.141,273,0.695,274,0.792,275,0.732,276,1.607,277,1.705,278,0.695,279,0.751,280,0.695,281,0.792,282,0.695,283,0.771,284,0.792,285,0.732,286,0.732,287,0.792,288,0.732,289,1.141,290,0.792,291,0.751,292,0.792,293,0.732,294,0.792,295,0.732,296,0.771,297,1.436,298,1.141,299,0.695,300,0.732,301,1.141,302,0.732,303,0.792,304,1.141,305,0.732,306,1.055,307,0.792,308,0.732,309,0.732,310,0.751,311,0.792,312,0.732,313,0.695,314,0.792,315,0.732,316,0.792,317,0.732,318,0.792,319,0.713,320,1.535,321,1.354,322,0.792,323,0.732,324,1.141,325,0.695,326,1.141,327,0.751,328,0.792,329,0.695,330,0.713,331,0.695,332,0.792,333,0.732,334,0.792,335,0.695,336,0.792,337,0.695,338,0.751,339,0.751,340,0.695,341,0.792,342,0.732,343,0.624,344,0.792,345,0.732,346,0.695,347,0.792,348,0.751,349,0.771,350,0.792,351,0.732,352,0.713,353,0.792,354,0.751,355,0.544,356,0.792,357,0.695,358,0.751,359,0.792,360,0.732,361,0.792,362,0.751,363,1.27,364,0.732,365,0.792,366,0.751,367,0.792,368,0.792,369,1.202,371,1.766,378,0.751,379,1.083,380,1.174,381,0.878,387,1.931,446,2.057,461,2.03,516,2.701,522,0.591,623,1.74,886,1.886,984,2.22,991,1.277,1019,2.582,1134,3.094,1220,4.255,1232,4.776,1234,3.625,1235,3.09,1236,3.09,1237,3.849,1238,3.244,1239,3.09,1241,1.964,1245,3.631,1246,2.616,1247,1.964,1248,1.886,1249,1.815,1250,1.964,1251,2.251,1252,1.815,1255,1.688,1262,2.373,1266,2.515,1421,2.83,1434,2.049,1435,2.049,1436,2.049,1437,2.049,1863,4.388,1948,3.965,2024,3.187,2025,4.594,2026,4.594,2027,4.181,2028,4.181,2029,4.181,2030,3.872,2031,7.266,2032,5.733,2033,5.386,2034,5.207,2035,6.365,2036,5.386,2037,6.543,2038,7.19,2039,6.995,2040,6.995,2041,7.559,2042,6.365,2043,6.995,2044,5.386,2045,5.386,2046,4.902,2047,2.686,2048,2.686,2049,2.686,2050,2.686,2051,2.686,2052,2.686,2053,2.686,2054,3.623,2055,2.251,2056,3.187]],["title/components/HiddenValueComponent.html",[114,0.121,278,0.851]],["body/components/HiddenValueComponent.html",[3,0.091,4,0.174,5,0.042,8,1.242,10,0.421,11,0.362,13,1.148,22,0.433,24,1.061,36,0.538,38,0.634,39,0.01,40,0.514,41,0.44,42,0.723,44,0.638,45,0.523,48,0.743,50,1.523,52,0.526,57,0.766,58,0.729,60,0.856,79,0.358,81,0.2,85,1.254,86,0.883,94,0.386,95,0.375,96,0.27,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.231,115,0.566,116,1.034,117,0.612,118,0.918,121,1.81,122,0.871,123,1.647,124,0.596,125,2.623,126,1.319,127,1.127,130,2.549,132,1.418,133,1.273,134,1.655,135,1.466,136,1.466,138,1.046,139,1.045,140,1.045,141,1.045,142,1.508,143,1.273,144,1.43,145,0.967,146,1.178,147,1.207,148,1.209,149,1.062,150,0.753,151,1.209,152,0.753,153,1.045,154,0.981,155,0.753,156,0.963,157,0.753,158,0.993,159,1.258,160,0.753,161,0.753,166,1.045,167,1.273,168,1.073,169,0.697,170,1.29,171,1.256,172,1.045,173,1.045,174,0.679,175,0.697,176,1.393,177,0.918,178,0.628,179,0.697,180,1.018,181,0.967,182,0.697,183,1.466,184,0.697,185,1.432,186,1.09,187,0.642,188,0.723,189,0.723,190,0.697,191,1.018,192,1.209,193,1.544,194,1.544,195,0.918,198,0.697,199,1.045,200,1.209,201,0.697,202,0.697,203,1.323,204,0.697,206,0.894,207,1.708,208,0.883,226,1.073,238,0.432,239,0.918,240,0.826,241,0.612,242,1.082,243,0.612,244,1.47,245,0.826,246,0.894,247,0.581,248,0.596,249,1.148,250,0.566,251,0.612,252,0.612,253,0.826,254,0.612,255,0.826,256,1.007,257,0.581,258,1.379,259,0.942,260,0.581,261,0.612,262,0.581,263,0.881,264,1.017,265,0.826,266,0.871,267,0.612,268,0.566,269,0.894,270,1.289,271,0.581,272,0.942,273,1.007,274,0.612,275,0.566,276,0.566,277,0.612,278,1.131,279,1.09,280,0.826,281,0.612,282,0.826,283,0.596,284,0.612,285,0.566,286,0.566,287,0.612,288,0.566,289,0.942,290,0.612,291,0.581,292,0.612,293,0.566,294,0.612,295,0.566,296,0.596,297,1.159,298,0.942,299,0.826,300,0.871,301,0.942,302,0.566,303,0.612,304,0.942,305,0.566,306,0.871,307,0.612,308,0.566,309,0.566,310,0.581,311,0.612,312,0.566,313,0.537,314,0.612,315,0.566,316,0.612,317,0.566,318,0.612,319,0.551,320,1.224,321,0.566,322,0.612,323,0.566,324,0.942,325,0.537,326,0.942,327,0.581,328,0.612,329,0.826,330,1.324,331,1.007,332,0.612,333,0.566,334,0.612,335,0.826,336,0.612,337,0.826,338,1.395,339,0.894,340,0.826,341,0.612,342,0.566,343,0.905,344,0.612,345,0.566,346,0.826,347,0.612,348,0.581,349,0.596,350,0.612,351,0.566,352,0.551,353,0.612,354,0.581,355,0.42,356,0.612,357,0.537,358,0.581,359,0.612,360,0.566,361,0.612,362,0.581,363,1.09,364,0.566,365,0.612,366,0.581,367,0.612,368,0.612,369,0.992,370,1.145,371,2.011,372,1.145,375,1.762,378,1.453,379,0.837,380,0.908,381,0.679,382,1.762,383,1.145,384,1.905,385,2.147,386,2.147,387,1.657,388,2.139,389,2.147,390,2.411,391,1.145,392,1.762,393,1.762,394,1.11,395,1.11,396,0.96,397,0.457,398,1.1,399,0.612,400,1.11,401,2.202,402,1.145,403,2.749,404,1.762,405,1.016,406,1.708,407,1.519,408,0.96,409,1.145,410,1.145,411,1.145,412,1.145,413,1.145,414,1.762,415,1.145,416,0.933,417,1.145,418,1.145,419,1.145,420,1.046,421,1.046,422,1.046,423,0.96,424,1.145,425,1.145,426,1.145,427,1.145,428,1.762,429,1.145,430,1.145,431,1.145,432,1.145,433,2.082,434,1.708,435,1.145,436,1.191,437,2.082,438,1.145,439,2.02,440,0.933,441,2.338,442,1.145,443,1.75,444,2.147,445,1.145,446,1.613,447,1.145,448,1.145,449,1.145,450,1.145,451,1.145,452,1.961,453,1.762,454,1.145,455,1.145,456,1.145,457,1.145,458,1.145,459,1.145,460,1.145,461,1.1,462,1.145,463,1.762,464,1.762,465,1.145,466,1.145,467,1.145,468,1.145,469,1.145,470,1.145,471,1.11,472,1.477,473,1.145,474,1.145,475,1.145,476,1.762,477,1.145,478,1.145,479,1.145,480,1.519,481,1.708,482,1.397,483,2.338,484,2.147,485,1.145,486,1.145,487,1.762,488,1.762,489,1.145,490,2.777,491,1.762,492,1.145,493,1.145,494,1.145,495,1.145,496,2.147,497,1.145,498,1.145,499,1.145,500,1.145,501,1.145,502,1.145,503,0.987,504,0.987,505,1.145,506,1.016,507,1.145,508,1.11,509,1.145,510,1.11,511,1.145,512,1.046,513,1.046,514,1.11,515,1.11,516,0.908,517,1.11,518,2.147,519,1.762,520,1.145,521,0.96,522,0.457,523,0.987,524,1.11,525,0.908,526,1.145,527,1.145,528,0.815,529,1.077,530,1.762,531,1.145,532,1.145,533,1.145,534,1.145,535,1.145,536,1.145,537,1.145,538,2.147,539,1.145,540,1.145,541,1.145,542,1.145,543,1.762,544,1.145,545,1.145,546,1.436,547,1.145,548,1.11,549,1.145,550,1.145,551,1.11,552,1.145,553,1.145,554,1.145,555,1.762,556,1.762,557,0.773,558,1.145,559,1.11,560,1.11,561,1.046,562,1.11,563,1.145,564,1.11,565,1.145,566,1.145,567,1.145,568,1.145,569,1.145,570,1.145,571,1.145,572,1.145,573,1.762,574,1.762,575,1.762,576,1.762,577,1.762,578,1.708,579,1.159,580,1.145,581,1.046,582,1.762,583,1.145,584,0.933,585,1.046,586,1.762,587,1.145,588,1.145,589,1.145,590,2.147,591,1.145,592,1.145,593,1.145,594,1.145,595,1.145,596,1.145,597,1.145,598,1.145,599,1.11,600,1.145,601,1.145,602,1.145,603,1.077,604,1.145,605,1.145,606,1.11,607,1.145,608,1.145,609,0.987,610,1.145,611,1.145,612,1.145,613,1.145,614,1.145,615,1.145,616,1.11,617,0.794,618,1.145,619,1.145,620,1.145,621,1.145,622,1.145,623,0.933,2057,4.311,2058,2.801]],["title/components/HtmlRawComponent.html",[114,0.121,280,0.851]],["body/components/HtmlRawComponent.html",[3,0.091,4,0.144,5,0.042,8,1.242,10,0.421,11,0.363,13,1.151,22,0.435,24,1.062,36,0.538,38,0.566,39,0.01,40,0.51,41,0.44,42,0.686,44,0.628,45,0.525,48,0.734,50,1.524,52,0.344,57,0.767,58,0.701,60,0.857,79,0.359,81,0.201,85,1.259,86,0.887,94,0.387,95,0.376,96,0.27,97,0.144,105,0.732,111,0.003,112,0.005,113,0.003,114,0.231,115,0.569,116,1.037,117,0.615,118,0.921,121,1.811,122,0.874,123,1.647,124,0.599,125,2.627,126,1.321,127,1.13,130,2.552,132,1.422,133,1.277,134,1.657,135,1.469,136,1.469,138,1.05,139,1.048,140,1.048,141,1.048,142,1.511,143,1.277,144,1.433,145,0.97,146,1.181,147,1.209,148,1.212,149,1.065,150,0.757,151,1.212,152,0.757,153,1.048,154,0.984,155,0.757,156,0.965,157,0.757,158,0.995,159,1.259,160,0.757,161,0.757,166,1.048,167,1.277,168,1.075,169,0.7,170,1.292,171,1.258,172,1.048,173,1.048,174,0.682,175,0.7,176,1.397,177,0.921,178,0.631,179,0.7,180,1.021,181,0.97,182,0.7,183,1.469,184,0.7,185,1.435,186,1.093,187,0.643,188,0.725,189,0.725,190,0.7,191,1.021,192,1.212,193,1.547,194,1.547,195,0.921,198,0.7,199,1.048,200,1.212,201,0.7,202,0.7,203,1.326,204,0.7,206,0.897,207,1.714,208,0.887,226,1.075,238,0.434,239,0.921,240,0.829,241,0.615,242,1.084,243,0.615,244,1.472,245,0.829,246,0.897,247,0.584,248,0.599,249,1.151,250,0.569,251,0.615,252,0.615,253,0.829,254,0.615,255,0.829,256,1.01,257,0.584,258,1.381,259,0.945,260,0.584,261,0.615,262,0.584,263,0.883,264,1.019,265,0.829,266,0.874,267,0.615,268,0.569,269,0.897,270,1.292,271,0.584,272,0.945,273,1.01,274,0.615,275,0.569,276,0.569,277,0.615,278,0.829,279,0.897,280,1.134,281,0.615,282,0.829,283,0.599,284,0.615,285,0.569,286,0.569,287,0.615,288,0.569,289,0.945,290,0.615,291,0.584,292,0.615,293,0.569,294,0.615,295,0.569,296,0.599,297,1.161,298,0.945,299,0.829,300,0.874,301,0.945,302,0.569,303,0.615,304,0.945,305,0.569,306,0.874,307,0.615,308,0.569,309,0.569,310,0.584,311,0.615,312,0.569,313,0.539,314,0.615,315,0.569,316,0.615,317,0.569,318,0.615,319,0.554,320,1.227,321,0.569,322,0.615,323,0.569,324,0.945,325,0.539,326,0.945,327,0.584,328,0.615,329,0.829,330,1.326,331,1.01,332,0.615,333,0.569,334,0.615,335,0.829,336,0.615,337,0.829,338,1.398,339,0.897,340,0.829,341,0.615,342,0.569,343,0.908,344,0.615,345,0.569,346,0.829,347,0.615,348,0.584,349,0.599,350,0.615,351,0.569,352,0.554,353,0.615,354,0.584,355,0.422,356,0.615,357,0.539,358,0.584,359,0.615,360,0.569,361,0.615,362,0.584,363,1.093,364,0.569,365,0.615,366,0.584,367,0.615,368,0.615,369,0.995,370,1.15,371,2.013,372,1.15,375,1.768,378,1.456,379,0.841,380,0.912,381,0.682,382,1.768,383,1.15,384,1.91,385,2.153,386,2.608,387,1.662,388,2.144,389,2.153,390,2.417,391,1.15,392,1.768,393,1.768,394,1.115,395,1.115,396,0.964,397,0.459,398,1.104,399,0.615,400,1.115,401,2.208,402,1.15,403,2.754,404,1.768,405,1.02,406,1.714,407,1.524,408,0.964,409,1.15,410,1.15,411,1.15,412,1.15,413,1.15,414,1.768,415,1.15,416,0.937,417,1.15,418,1.15,419,1.15,420,1.05,421,1.05,422,1.05,423,0.964,424,1.15,425,1.15,426,1.15,427,1.15,428,1.768,429,1.15,430,1.15,431,1.15,432,1.15,433,2.088,434,1.714,435,1.15,436,1.193,437,2.088,438,1.15,439,2.026,440,0.937,441,2.343,442,1.15,443,1.755,444,2.153,445,1.15,446,1.617,447,1.15,448,1.15,449,1.15,450,1.15,451,1.15,452,1.967,453,1.768,454,1.15,455,1.15,456,1.15,457,1.15,458,1.15,459,1.15,460,1.15,461,1.104,462,1.15,463,1.768,464,1.768,465,1.15,466,1.15,467,1.15,468,1.15,469,1.15,470,1.15,471,1.115,472,1.482,473,1.15,474,1.15,475,1.15,476,1.768,477,1.15,478,1.15,479,1.15,480,1.524,481,1.714,482,1.402,483,2.343,484,2.153,485,1.15,486,1.15,487,1.768,488,1.768,489,1.15,490,2.781,491,1.768,492,1.15,493,1.15,494,1.15,495,1.15,496,2.153,497,1.15,498,1.15,499,1.15,500,1.15,501,1.15,502,1.15,503,0.991,504,0.991,505,1.15,506,1.02,507,1.15,508,1.115,509,1.15,510,1.115,511,1.15,512,1.05,513,1.05,514,1.115,515,1.115,516,0.912,517,1.115,518,2.153,519,1.768,520,1.15,521,0.964,522,0.459,523,0.991,524,1.115,525,0.912,526,1.15,527,1.15,528,0.819,529,1.082,530,1.768,531,1.15,532,1.15,533,1.15,534,1.15,535,1.15,536,1.15,537,1.15,538,2.153,539,1.15,540,1.15,541,1.15,542,1.15,543,1.768,544,1.15,545,1.15,546,1.441,547,1.15,548,1.115,549,1.15,550,1.15,551,1.115,552,1.15,553,1.15,554,1.15,555,1.768,556,1.768,557,0.777,558,1.15,559,1.115,560,1.115,561,1.05,562,1.115,563,1.15,564,1.115,565,1.15,566,1.15,567,1.15,568,1.15,569,1.15,570,1.15,571,1.15,572,1.15,573,1.768,574,1.768,575,1.768,576,1.768,577,1.768,578,1.714,579,1.163,580,1.15,581,1.05,582,1.15,583,1.15,584,0.937,585,1.05,586,1.768,587,1.15,588,1.15,589,1.15,590,2.153,591,1.15,592,1.15,593,1.15,594,1.15,595,1.15,596,1.15,597,1.15,598,1.15,599,1.115,600,1.15,601,1.15,602,1.15,603,1.082,604,1.15,605,1.15,606,1.115,607,1.15,608,1.15,609,0.991,610,1.15,611,1.15,612,1.15,613,1.15,614,1.15,615,1.15,616,1.115,617,0.797,618,1.15,619,1.15,620,1.15,621,1.15,622,1.15,623,0.937,2059,2.814]],["title/components/LinkValueComponent.html",[114,0.121,282,0.851]],["body/components/LinkValueComponent.html",[3,0.091,4,0.144,5,0.042,8,1.242,10,0.421,11,0.363,13,1.15,22,0.434,24,1.062,36,0.538,38,0.566,39,0.01,40,0.51,41,0.436,42,0.686,44,0.628,45,0.524,48,0.743,50,1.523,52,0.343,57,0.767,58,0.729,60,0.857,79,0.359,81,0.201,85,1.257,86,0.885,94,0.387,95,0.375,96,0.27,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.231,115,0.567,116,1.036,117,0.614,118,0.919,121,1.811,122,0.873,123,1.647,124,0.598,125,2.625,126,1.32,127,1.129,130,2.671,132,1.415,133,1.275,134,1.656,135,1.467,136,1.467,138,1.048,139,1.047,140,1.047,141,1.047,142,1.51,143,1.275,144,1.432,145,0.968,146,1.18,147,1.208,148,1.211,149,1.063,150,0.755,151,1.211,152,0.755,153,1.047,154,0.982,155,0.755,156,0.964,157,0.755,158,1.026,159,1.258,160,0.755,161,0.755,166,1.047,167,1.275,168,1.074,169,0.698,170,1.291,171,1.257,172,1.047,173,1.047,174,0.68,175,0.698,176,1.395,177,0.919,178,0.63,179,0.698,180,1.02,181,0.968,182,0.698,183,1.467,184,0.698,185,1.433,186,1.091,187,0.643,188,0.724,189,0.724,190,0.698,191,1.02,192,1.211,193,1.545,194,1.545,195,0.919,198,0.698,199,1.047,200,1.211,201,0.698,202,0.698,203,1.325,204,0.698,206,0.896,207,1.711,208,0.885,226,1.074,238,0.433,239,0.919,240,0.828,241,0.614,242,1.083,243,0.614,244,1.471,245,0.828,246,0.896,247,0.582,248,0.598,249,1.15,250,0.567,251,0.614,252,0.614,253,0.828,254,0.614,255,0.828,256,1.009,257,0.582,258,1.38,259,0.944,260,0.582,261,0.614,262,0.582,263,0.882,264,1.018,265,0.828,266,0.873,267,0.614,268,0.567,269,0.896,270,1.291,271,0.582,272,0.944,273,1.009,274,0.614,275,0.567,276,0.567,277,0.614,278,0.828,279,0.896,280,0.828,281,0.614,282,1.133,283,0.919,284,0.614,285,0.567,286,0.567,287,0.614,288,0.567,289,0.944,290,0.614,291,0.582,292,0.614,293,0.567,294,0.614,295,0.567,296,0.598,297,1.16,298,0.944,299,0.828,300,0.873,301,0.944,302,0.567,303,0.614,304,0.944,305,0.567,306,0.873,307,0.614,308,0.567,309,0.567,310,0.582,311,0.614,312,0.567,313,0.538,314,0.614,315,0.567,316,0.614,317,0.567,318,0.614,319,0.553,320,1.225,321,0.567,322,0.614,323,0.567,324,0.944,325,0.538,326,0.944,327,0.582,328,0.614,329,0.828,330,1.325,331,1.009,332,0.614,333,0.567,334,0.614,335,0.828,336,0.614,337,0.828,338,1.397,339,0.896,340,0.828,341,0.614,342,0.567,343,0.907,344,0.614,345,0.567,346,0.828,347,0.614,348,0.582,349,0.598,350,0.614,351,0.567,352,0.553,353,0.614,354,0.582,355,0.421,356,0.614,357,0.538,358,0.582,359,0.614,360,0.567,361,0.614,362,0.582,363,1.091,364,0.567,365,0.614,366,0.582,367,0.614,368,0.614,369,0.994,370,1.147,371,2.045,372,1.147,375,1.765,378,1.455,379,0.839,380,0.91,381,0.68,382,1.765,383,1.147,384,1.908,385,2.15,386,2.15,387,1.659,388,2.142,389,2.15,390,2.414,391,1.147,392,1.765,393,1.765,394,1.113,395,1.113,396,0.962,397,0.458,398,1.102,399,0.614,400,1.113,401,2.205,402,1.147,403,2.752,404,1.765,405,1.018,406,1.711,407,1.522,408,0.962,409,1.147,410,1.147,411,1.147,412,1.147,413,1.147,414,1.765,415,1.147,416,0.935,417,1.147,418,1.147,419,1.147,420,1.048,421,1.048,422,1.048,423,0.962,424,1.147,425,1.147,426,1.147,427,1.147,428,1.765,429,1.147,430,1.147,431,1.147,432,1.147,433,2.085,434,1.711,435,1.147,436,1.192,437,2.085,438,1.147,439,2.023,440,0.935,441,2.341,442,1.147,443,1.753,444,2.15,445,1.147,446,1.615,447,1.147,448,1.147,449,1.147,450,1.147,451,1.147,452,1.964,453,1.765,454,1.147,455,1.147,456,1.147,457,1.147,458,1.147,459,1.147,460,1.147,461,1.102,462,1.147,463,1.765,464,1.765,465,1.147,466,1.147,467,1.147,468,1.147,469,1.147,470,1.147,471,1.113,472,1.479,473,1.147,474,1.147,475,1.147,476,1.765,477,1.147,478,1.147,479,1.147,480,1.522,481,1.711,482,1.399,483,2.341,484,2.15,485,1.147,486,1.147,487,1.765,488,1.765,489,1.147,490,2.779,491,1.765,492,1.147,493,1.147,494,1.147,495,1.147,496,2.15,497,1.147,498,1.147,499,1.147,500,1.147,501,1.147,502,1.147,503,0.989,504,0.989,505,1.147,506,1.018,507,1.147,508,1.113,509,1.147,510,1.113,511,1.147,512,1.048,513,1.048,514,1.113,515,1.113,516,0.91,517,1.113,518,2.15,519,1.765,520,1.147,521,0.962,522,0.458,523,0.989,524,1.113,525,0.91,526,1.147,527,1.147,528,0.817,529,1.08,530,1.765,531,1.147,532,1.147,533,1.147,534,1.147,535,1.147,536,1.147,537,1.147,538,2.15,539,1.147,540,1.147,541,1.147,542,1.147,543,1.765,544,1.147,545,1.147,546,1.439,547,1.147,548,1.113,549,1.147,550,1.147,551,1.113,552,1.147,553,1.147,554,1.147,555,1.765,556,1.765,557,0.775,558,1.147,559,1.113,560,1.113,561,1.048,562,1.113,563,1.147,564,1.113,565,1.147,566,1.147,567,1.147,568,1.147,569,1.147,570,1.147,571,1.147,572,1.147,573,1.765,574,1.765,575,1.765,576,1.765,577,1.765,578,1.711,579,1.161,580,2.414,581,1.048,582,1.147,583,1.147,584,0.935,585,1.048,586,1.765,587,1.147,588,1.147,589,1.147,590,2.15,591,1.147,592,1.147,593,1.147,594,1.147,595,1.147,596,1.147,597,1.147,598,1.147,599,1.113,600,1.147,601,1.147,602,1.147,603,1.08,604,1.147,605,1.147,606,1.113,607,1.147,608,1.147,609,0.989,610,1.147,611,1.147,612,1.147,613,1.147,614,1.147,615,1.147,616,1.113,617,0.796,618,1.147,619,1.147,620,1.147,621,1.147,622,1.147,623,0.935,2060,2.808]],["title/classes/LoadableComponent.html",[97,0.075,1500,2.905]],["body/classes/LoadableComponent.html",[3,0.179,4,0.151,5,0.083,10,0.345,11,0.582,22,0.697,24,0.927,31,3.349,32,2.329,35,3.659,36,0.581,38,0.856,39,0.01,40,0.498,41,0.459,42,0.856,44,0.589,48,0.806,52,1.023,57,0.9,58,0.721,70,3.201,79,0.355,88,2.019,93,3.119,94,0.759,95,0.737,96,0.179,97,0.129,105,0.703,111,0.006,112,0.008,113,0.006,135,1.269,158,1.205,185,1.174,187,0.847,188,0.955,189,0.955,191,1.638,226,1.492,242,0.804,398,1.408,399,1.658,436,1.343,510,2.749,522,0.9,599,2.185,625,1.787,796,3.612,871,5.143,1084,3.022,1500,4.543,1513,5.627,1514,5.627,1515,5.268,1519,5.904,1520,5.143,1521,5.904,1522,4.816,1523,5.143,1524,5.904,1525,5.528,1537,5.143,1538,5.904,1541,5.143,1543,5.143,1545,4.105,1548,5.143,1550,4.089,1585,4.089,1966,4.852,1979,6.677,2030,4.089,2061,5.515,2062,6.937,2063,6.937,2064,5.515,2065,5.515,2066,5.515,2067,5.515,2068,5.515,2069,5.515,2070,5.515,2071,5.515,2072,5.515,2073,5.515,2074,5.515,2075,7.964,2076,6.937,2077,5.515,2078,6.677,2079,5.515,2080,5.515,2081,5.515,2082,5.515,2083,5.515,2084,5.515,2085,5.515,2086,4.852,2087,5.515,2088,5.515,2089,5.515,2090,5.515,2091,5.515,2092,5.515,2093,5.515,2094,6.937,2095,5.515,2096,5.515,2097,5.515,2098,5.515,2099,5.515,2100,5.515,2101,5.515,2102,5.515,2103,5.515,2104,5.515]],["title/components/LocalAuthComponent.html",[114,0.121,285,0.896]],["body/components/LocalAuthComponent.html",[0,1.621,3,0.144,4,0.121,5,0.067,8,0.905,10,0.278,11,0.506,12,2.342,22,0.606,24,0.736,31,2.911,32,1.851,35,3.611,36,0.577,38,0.849,39,0.01,40,0.514,41,0.462,42,0.849,44,0.531,45,0.831,48,0.789,50,1.598,52,1.003,57,0.782,58,0.627,70,2.543,79,0.413,80,1.228,81,0.318,88,1.295,92,2.316,96,0.195,97,0.076,105,0.374,111,0.005,112,0.007,113,0.005,114,0.209,115,0.899,116,1.187,117,0.972,118,1.283,122,1.218,123,1.669,124,0.947,126,0.726,127,1.21,147,1.178,154,1.277,156,0.726,158,1.145,159,0.726,164,1.763,171,0.831,187,0.736,188,0.83,189,0.83,208,1.403,226,1.096,238,0.687,239,1.283,240,1.156,241,0.972,242,1.069,243,0.972,244,1.726,245,0.853,246,0.923,247,0.923,248,0.947,249,1.494,250,0.899,251,0.972,252,0.972,253,0.853,254,0.972,255,0.853,256,0.853,257,0.923,258,1.59,259,1.317,260,0.923,261,0.972,262,0.923,263,1.147,264,1.178,265,0.853,266,0.899,267,0.972,268,0.899,269,1.25,270,1.601,271,0.923,272,1.317,273,0.853,274,0.972,275,0.899,276,0.899,277,0.972,278,0.853,279,0.923,280,0.853,281,0.972,282,0.853,283,0.947,284,0.972,285,1.481,286,1.632,287,0.972,288,0.899,289,1.317,290,0.972,291,0.923,292,0.972,293,0.899,294,0.972,295,0.899,296,0.947,297,1.178,298,1.317,299,0.853,300,0.899,301,1.317,302,0.899,303,0.972,304,1.317,305,0.899,306,1.218,307,0.972,308,0.899,309,0.899,310,0.923,311,0.972,312,0.899,313,0.853,314,0.972,315,0.899,316,0.972,317,0.899,318,0.972,319,0.876,320,1.52,321,0.899,322,0.972,323,0.899,324,1.317,325,0.853,326,1.317,327,0.923,328,0.972,329,0.853,330,0.876,331,0.853,332,0.972,333,0.899,334,0.972,335,0.853,336,0.972,337,0.853,338,0.923,339,0.923,340,0.853,341,0.972,342,0.899,343,0.767,344,0.972,345,0.899,346,0.853,347,0.972,348,0.923,349,0.947,350,0.972,351,0.899,352,0.876,353,0.972,354,0.923,355,0.668,356,0.972,357,0.853,358,0.923,359,0.972,360,0.899,361,0.972,362,0.923,363,1.418,364,0.899,365,0.972,366,0.923,367,0.972,368,0.972,397,0.726,482,1.442,522,0.726,631,1.818,639,3.02,670,1.818,936,1.938,1076,3.562,1084,1.938,1149,3.745,1285,3.089,1316,3.948,1456,3.567,1500,5.702,1501,4.826,1502,4.826,1513,4.47,1514,4.47,1515,4.185,1519,5.07,1520,4.47,1521,5.07,1522,4.185,1523,4.47,1524,5.07,1525,4.747,1536,3.562,1537,3.299,1538,4.47,1539,3.562,1540,3.562,1541,3.299,1542,3.562,1543,3.299,1544,3.562,1545,2.633,1546,3.562,1547,3.562,1548,3.299,1549,3.562,1550,3.299,1559,3.562,1560,3.562,1561,3.562,1562,3.562,1563,3.299,1564,3.299,1575,3.562,1577,3.562,1585,3.299,2105,4.449,2106,4.826,2107,5.304,2108,6.029,2109,6.838,2110,7.66,2111,7.33,2112,6.029,2113,4.449,2114,4.553,2115,6.016,2116,5.868,2117,4.248,2118,6.029,2119,6.029,2120,4.449,2121,4.449,2122,4.449,2123,4.449,2124,4.449,2125,3.562,2126,2.516,2127,3.299,2128,4.449,2129,3.914,2130,3.914,2131,3.914,2132,4.449,2133,4.449,2134,3.02,2135,3.409,2136,4.449,2137,7.66,2138,6.029,2139,6.029,2140,6.029,2141,4.449,2142,3.562,2143,4.449,2144,4.449,2145,4.449,2146,4.449,2147,4.449,2148,4.449,2149,4.449,2150,4.449,2151,4.449,2152,6.838,2153,4.449,2154,4.449,2155,4.185,2156,6.029,2157,6.029,2158,6.029]],["title/modules/LocalAuthModule.html",[916,1.478,2159,3.289]],["body/modules/LocalAuthModule.html",[3,0.212,4,0.179,5,0.099,39,0.01,79,0.451,81,0.469,82,2.069,96,0.212,97,0.112,111,0.007,112,0.009,113,0.007,238,1.013,285,1.824,397,1.07,399,1.433,631,2.681,916,2.185,918,2.954,919,2.857,920,3.953,921,3.346,922,3.592,923,3.167,928,3.931,929,3.592,930,2.954,931,2.857,933,3.471,934,3.862,935,3.862,936,2.857,937,3.862,939,4.013,944,3.415,2159,6.617,2160,5.771,2161,5.771,2162,6.56,2163,5.771,2164,6.56,2165,6.56]],["title/classes/LoginResult.html",[97,0.075,2126,2.509]],["body/classes/LoginResult.html",[3,0.214,4,0.18,5,0.099,10,0.413,11,0.65,36,0.555,39,0.01,40,0.484,41,0.465,44,0.707,96,0.274,97,0.144,111,0.007,112,0.009,113,0.007,158,0.936,177,1.407,355,1.324,546,2.201,625,2.141,722,5.011,984,2.977,2126,4.378,2134,3.31,2135,3.736,2166,6.399,2167,3.909,2168,6.399,2169,6.607,2170,6.607,2171,6.607,2172,6.607,2173,3.079,2174,3.736,2175,3.738,2176,4.104,2177,3.909]],["title/components/ManageRolesComponent.html",[114,0.121,288,0.896]],["body/components/ManageRolesComponent.html",[0,1.347,3,0.192,4,0.093,5,0.051,8,0.752,10,0.214,11,0.421,12,1.716,22,0.504,24,0.612,31,2.419,32,1.538,35,3.36,36,0.575,38,0.843,39,0.01,40,0.544,41,0.471,42,0.843,44,0.627,45,0.639,48,0.773,50,1.525,52,0.986,57,1.034,58,0.849,60,0.916,70,2.113,79,0.401,80,0.945,81,0.245,88,1.458,92,1.781,94,0.471,95,0.457,96,0.162,97,0.058,105,0.548,111,0.004,112,0.006,113,0.004,114,0.19,115,0.691,116,0.986,117,0.748,118,1.262,122,1.012,123,1.652,124,1.262,126,0.558,127,1.049,154,0.639,156,0.558,158,0.984,159,0.558,164,1.356,171,0.639,183,1.153,187,0.612,188,0.69,189,0.69,208,1.079,226,1.186,238,0.528,239,1.066,240,0.96,241,0.748,242,1.143,243,0.748,244,1.585,245,0.656,246,0.71,247,0.71,248,0.728,249,1.295,250,0.691,251,0.748,252,0.748,253,0.656,254,0.748,255,0.656,256,1.136,257,0.71,258,1.475,259,1.095,260,0.71,261,0.748,262,0.71,263,0.994,264,1.021,265,0.656,266,0.691,267,0.748,268,0.691,269,1.039,270,1.425,271,0.71,272,1.095,273,0.656,274,0.748,275,0.691,276,0.691,277,0.748,278,0.656,279,0.71,280,0.656,281,0.748,282,0.656,283,0.728,284,0.748,285,0.691,286,0.691,287,0.748,288,1.318,289,1.937,290,0.748,291,0.71,292,0.748,293,0.691,294,0.748,295,0.691,296,0.728,297,1.021,298,1.095,299,0.656,300,0.691,301,1.095,302,0.691,303,0.748,304,1.095,305,0.691,306,1.012,307,0.748,308,0.691,309,0.691,310,0.71,311,0.748,312,0.691,313,0.656,314,0.748,315,0.691,316,0.748,317,0.691,318,0.748,319,0.674,320,1.353,321,0.691,322,0.748,323,0.691,324,1.095,325,0.656,326,1.095,327,0.71,328,0.748,329,0.656,330,1.166,331,0.656,332,0.748,333,0.691,334,0.748,335,0.656,336,0.748,337,0.656,338,0.71,339,0.71,340,0.656,341,0.748,342,0.691,343,0.59,344,0.748,345,0.691,346,0.656,347,0.748,348,0.71,349,0.728,350,0.748,351,0.691,352,0.674,353,0.748,354,0.71,355,0.889,356,0.748,357,0.656,358,0.71,359,0.748,360,0.691,361,0.748,362,0.71,363,1.229,364,0.691,365,0.748,366,0.71,367,0.748,368,0.748,396,1.172,397,0.558,398,1.279,399,1.095,482,1.109,522,0.558,529,1.316,579,0.92,584,1.14,631,1.398,639,2.509,670,1.398,930,2.256,936,1.49,1019,2.113,1084,1.49,1252,2.509,1296,3.714,1456,5.185,1500,5.487,1501,4.01,1502,4.01,1507,5.214,1513,3.714,1514,3.714,1515,3.477,1519,4.394,1520,3.714,1521,4.394,1522,3.477,1523,3.714,1524,4.394,1525,4.114,1536,2.739,1537,2.537,1538,3.714,1539,2.739,1540,2.739,1541,2.537,1542,2.739,1543,2.537,1544,2.739,1545,2.025,1546,2.739,1547,2.739,1548,2.537,1549,2.739,1550,2.537,1559,2.739,1560,2.739,1561,2.739,1562,2.739,1563,2.537,1564,2.537,1575,2.739,1577,2.739,1585,2.537,1675,2.241,1739,2.537,1888,4.052,2114,2.125,2115,5.214,2116,5.222,2117,3.681,2125,2.739,2126,1.935,2127,2.537,2129,3.01,2130,3.01,2131,3.01,2134,3.478,2173,3.38,2174,5.061,2175,3.899,2176,3.681,2177,2.025,2178,3.422,2179,5.01,2180,5.926,2181,5.926,2182,5.926,2183,6.942,2184,5.926,2185,5.926,2186,5.01,2187,4.407,2188,5.739,2189,5.01,2190,5.01,2191,3.422,2192,5.035,2193,5.01,2194,3.422,2195,3.422,2196,3.422,2197,3.422,2198,5.01,2199,3.422,2200,3.422,2201,3.422,2202,3.422,2203,3.422,2204,5.01,2205,3.422,2206,3.422,2207,4.407,2208,3.422,2209,3.422,2210,3.422,2211,3.422,2212,2.537,2213,5.926,2214,5.01,2215,5.01,2216,5.01,2217,3.422,2218,3.422,2219,3.422,2220,3.01,2221,2.739,2222,3.01,2223,3.01,2224,3.422,2225,3.422,2226,3.422,2227,3.422,2228,3.422,2229,3.422,2230,3.422,2231,3.422,2232,3.422,2233,3.422,2234,6.523,2235,3.422,2236,3.422,2237,3.422,2238,3.422,2239,5.926,2240,3.422,2241,5.926,2242,3.422,2243,2.537,2244,5.01,2245,5.01,2246,3.422,2247,3.422,2248,3.422,2249,3.422,2250,5.926,2251,3.422,2252,3.422,2253,3.422,2254,5.926,2255,3.422,2256,5.01,2257,3.422,2258,3.422,2259,5.01,2260,3.422,2261,3.422,2262,3.422,2263,3.422,2264,3.422,2265,5.01,2266,3.422,2267,7.253,2268,3.422,2269,3.422,2270,3.422,2271,3.422,2272,3.422,2273,5.01,2274,3.422,2275,3.422,2276,2.537,2277,3.422,2278,3.422,2279,3.422,2280,3.422,2281,3.422,2282,3.422,2283,3.422,2284,3.422,2285,3.422,2286,3.422,2287,3.422,2288,3.422,2289,3.422,2290,3.422,2291,3.422,2292,3.422,2293,7.253,2294,5.01,2295,5.01,2296,5.01,2297,5.01,2298,5.926,2299,5.01,2300,5.01,2301,5.01,2302,3.422,2303,3.422,2304,2.537,2305,4.819,2306,3.422,2307,3.422,2308,5.01,2309,3.422,2310,3.01,2311,3.422,2312,5.01,2313,5.01,2314,5.01,2315,5.01,2316,3.422]],["title/modules/ManageRolesModule.html",[916,1.478,2317,3.289]],["body/modules/ManageRolesModule.html",[3,0.212,4,0.179,5,0.099,39,0.01,79,0.45,81,0.468,82,2.065,96,0.212,97,0.111,111,0.007,112,0.009,113,0.007,238,1.011,288,1.824,397,1.069,399,1.431,631,2.677,916,2.182,918,2.949,919,2.853,920,3.95,921,3.344,922,3.589,923,3.162,928,3.929,929,3.589,930,2.949,931,2.853,933,3.468,934,3.858,935,3.858,936,2.853,937,3.858,938,4.009,939,4.009,944,3.409,2317,6.616,2318,5.762,2319,5.762,2320,6.55,2321,5.762,2322,6.55,2323,6.55]],["title/modules/ManageUsersModule.html",[916,1.478,2324,3.289]],["body/modules/ManageUsersModule.html",[3,0.211,4,0.178,5,0.098,39,0.01,79,0.453,81,0.466,82,2.054,96,0.211,97,0.111,111,0.007,112,0.009,113,0.007,238,1.005,291,1.871,397,1.063,399,1.423,631,2.662,916,2.17,918,2.933,919,2.837,920,3.941,921,3.445,922,3.578,923,3.145,928,3.924,929,3.578,930,2.933,931,2.837,933,3.457,934,3.846,935,3.846,936,2.837,937,3.846,938,3.996,939,3.996,943,3.263,944,3.391,2324,6.61,2325,5.73,2326,5.73,2327,6.514,2328,5.73,2329,6.514,2330,5.73,2331,6.514,2332,5.73]],["title/components/MapComponent.html",[114,0.121,293,0.896]],["body/components/MapComponent.html",[3,0.097,4,0.082,5,0.045,8,0.821,10,0.382,11,0.38,17,0.969,21,3.787,22,0.455,24,0.991,36,0.553,38,0.588,39,0.01,40,0.512,41,0.445,42,0.656,44,0.587,45,0.558,48,0.734,50,1.54,52,0.668,57,0.851,58,0.682,60,0.767,79,0.387,80,0.825,81,0.214,94,0.412,95,0.4,96,0.177,97,0.111,105,0.602,111,0.003,112,0.005,113,0.003,114,0.206,115,0.604,116,0.892,117,0.653,118,0.964,121,1.744,122,0.915,123,1.641,124,0.636,126,0.739,127,0.968,132,1.346,133,1.098,134,1.613,135,1.509,136,1.259,139,1.098,140,1.098,141,1.098,142,1.471,143,1.326,144,1.326,145,1.016,146,1.016,147,1.051,148,1.043,149,1.105,150,0.804,151,1.043,152,0.804,153,0.725,154,0.846,155,0.804,156,0.739,157,0.804,158,1.016,159,1.258,160,0.804,161,0.804,166,0.725,167,1.098,168,0.824,169,0.744,170,1.049,171,1.021,172,0.725,173,0.725,174,0.725,175,0.744,176,1.07,177,0.636,178,0.67,179,0.744,180,0.706,181,0.67,182,0.744,183,1.65,184,0.744,185,1.164,186,0.94,187,0.553,188,0.412,189,0.412,190,0.744,191,0.706,192,0.688,193,0.725,194,1.79,195,0.636,198,0.744,199,0.725,200,0.688,201,0.744,202,0.744,203,0.67,204,0.744,205,1.185,206,0.62,209,1.346,210,1.769,214,1.15,216,1.15,225,1.691,226,1.192,228,1.958,238,0.461,239,0.964,240,0.869,241,0.653,242,1.103,243,0.653,244,1.508,245,0.573,246,0.62,247,0.62,248,0.636,249,1.195,250,0.604,251,0.653,252,0.653,253,0.573,254,0.653,255,0.573,256,0.573,257,0.62,258,1.488,259,0.99,260,0.62,261,0.653,262,0.62,263,0.917,264,0.942,265,0.573,266,0.604,267,0.653,268,0.604,269,0.94,270,1.333,271,0.62,272,0.99,273,0.573,274,0.653,275,0.604,276,0.604,277,0.653,278,0.573,279,0.62,280,0.573,281,0.653,282,0.573,283,0.636,284,0.653,285,0.604,286,0.604,287,0.653,288,0.604,289,0.99,290,0.653,291,0.62,292,0.653,293,1.394,294,0.653,295,0.604,296,0.636,297,1.235,298,0.99,299,0.573,300,0.604,301,0.99,302,0.604,303,0.653,304,0.99,305,0.604,306,0.915,307,0.653,308,0.604,309,0.604,310,0.62,311,0.653,312,0.604,313,0.573,314,0.653,315,0.604,316,0.653,317,0.604,318,0.653,319,0.588,320,1.266,321,0.604,322,0.653,323,0.604,324,0.99,325,0.573,326,0.99,327,0.62,328,0.653,329,0.573,330,0.588,331,0.573,332,0.653,333,0.604,334,0.653,335,0.573,336,0.653,337,0.573,338,1.431,339,0.62,340,0.573,341,0.653,342,0.604,343,0.515,344,0.653,345,0.604,346,0.573,347,0.653,348,0.62,349,0.636,350,0.653,351,0.604,352,0.588,353,0.653,354,0.62,355,0.449,356,0.653,357,0.573,358,0.62,359,0.653,360,0.604,361,0.653,362,0.62,363,1.135,364,0.604,365,0.653,366,0.62,367,0.653,368,0.653,369,1.588,371,1.127,378,0.62,381,0.725,397,0.488,398,1.558,399,0.653,408,1.024,436,0.802,483,2.418,490,2.735,503,1.053,515,1.795,516,1.468,521,1.552,522,0.892,524,1.795,525,0.969,528,1.776,559,1.185,560,1.185,561,2.042,562,1.185,579,0.804,609,1.053,639,2.269,670,1.222,698,2.549,734,2.63,745,3.145,862,1.509,929,3.056,958,2.748,984,1.084,991,1.053,1048,6.069,1059,3.627,1061,3.145,1071,2.814,1094,5.25,1096,1.958,1136,1.857,1137,2.562,1177,2.075,1190,3.611,1191,3.996,1248,1.556,1249,2.269,1313,2.455,1328,2.455,1430,1.769,1573,2.63,1675,2.967,1690,1.857,1711,2.217,1735,2.217,1786,2.075,1888,3.791,1948,2.681,2117,1.857,2333,2.99,2334,3.359,2335,4.53,2336,2.814,2337,6.901,2338,4.53,2339,4.53,2340,4.53,2341,6.901,2342,4.53,2343,6.103,2344,6.071,2345,6.558,2346,3.627,2347,6.558,2348,4.53,2349,4.53,2350,3.627,2351,3.627,2352,6.103,2353,3.359,2354,6.053,2355,3.627,2356,3.986,2357,4.53,2358,4.53,2359,2.967,2360,4.53,2361,4.53,2362,3.145,2363,3.451,2364,7.56,2365,5.369,2366,5.25,2367,6.103,2368,4.525,2369,6.558,2370,4.53,2371,3.986,2372,4.53,2373,4.379,2374,4.53,2375,5.47,2376,5.47,2377,5.47,2378,5.525,2379,4.53,2380,6.103,2381,4.53,2382,4.53,2383,4.53,2384,4.53,2385,6.103,2386,5.47,2387,6.103,2388,2.99,2389,2.99,2390,2.99,2391,2.99,2392,6.901,2393,2.99,2394,2.63,2395,2.63,2396,2.99,2397,2.99,2398,2.99,2399,2.99,2400,2.99,2401,2.99,2402,2.99,2403,2.99,2404,4.53,2405,4.53,2406,4.53,2407,4.53,2408,4.53,2409,4.53,2410,4.53,2411,2.99,2412,2.99,2413,2.99,2414,2.99,2415,2.99,2416,5.47,2417,2.99,2418,2.99,2419,2.99,2420,2.99,2421,2.99,2422,2.99,2423,2.99,2424,4.53,2425,2.99,2426,2.63,2427,2.99,2428,4.53,2429,2.99,2430,2.99,2431,2.99,2432,2.99,2433,2.99,2434,2.99,2435,2.99,2436,4.53,2437,2.99,2438,2.99,2439,4.53,2440,2.99,2441,2.99,2442,4.53,2443,2.99,2444,2.99,2445,2.99,2446,2.99,2447,4.53,2448,2.99,2449,4.53,2450,4.53,2451,3.986,2452,3.627,2453,2.99,2454,2.99,2455,5.47,2456,2.99,2457,2.99,2458,2.99,2459,4.53,2460,2.99,2461,7.169,2462,2.99,2463,2.99,2464,2.99,2465,2.99,2466,2.99,2467,2.99,2468,2.99,2469,2.99,2470,4.53,2471,4.53,2472,4.53,2473,2.99,2474,2.99,2475,2.99,2476,2.99,2477,4.53,2478,4.53,2479,4.53,2480,2.99,2481,2.99,2482,2.99,2483,2.99,2484,2.99,2485,4.53,2486,2.99,2487,4.53,2488,2.63,2489,2.075,2490,4.53,2491,2.99,2492,2.99,2493,6.558,2494,2.99,2495,4.53,2496,2.99,2497,6.103,2498,6.558,2499,6.558,2500,5.47,2501,2.99,2502,4.53,2503,4.53,2504,4.53,2505,2.99,2506,2.99,2507,4.53,2508,4.53,2509,4.53,2510,2.99,2511,2.99,2512,2.99,2513,2.99,2514,2.99,2515,2.99,2516,2.99,2517,2.99,2518,2.99,2519,2.99,2520,2.99,2521,2.99,2522,2.99,2523,5.47,2524,2.681,2525,6.103,2526,2.99,2527,2.99,2528,2.075,2529,2.99,2530,2.99,2531,2.99,2532,4.53,2533,4.53,2534,5.47,2535,2.99,2536,2.99,2537,2.99,2538,2.99,2539,3.986,2540,2.63,2541,2.393,2542,2.63,2543,2.63,2544,2.63,2545,4.53,2546,2.63,2547,2.99,2548,2.99,2549,2.99,2550,2.99,2551,2.99,2552,4.53,2553,4.53,2554,6.103,2555,4.53,2556,3.986]],["title/components/MarkdownTextAreaComponent.html",[114,0.121,295,0.896]],["body/components/MarkdownTextAreaComponent.html",[3,0.124,4,0.105,5,0.058,8,1.189,10,0.472,11,0.456,13,0.838,22,0.547,24,1.019,36,0.579,38,0.78,39,0.01,40,0.517,41,0.473,42,0.811,44,0.662,45,0.716,48,0.783,50,1.642,52,0.772,57,1.006,58,0.824,60,0.861,79,0.351,81,0.274,94,0.528,95,0.513,96,0.257,97,0.135,105,0.322,111,0.004,112,0.006,113,0.004,114,0.216,115,0.775,116,1.07,117,0.838,118,1.158,121,1.779,122,1.099,123,1.661,124,0.816,126,1.184,127,1.118,130,2.226,132,1.383,133,1.318,134,1.806,135,1.454,136,1.454,139,1.318,140,1.318,141,1.666,142,1.807,143,1.531,144,1.531,145,1.219,146,1.219,147,1.299,148,1.251,149,1.467,150,1.031,151,1.251,152,1.031,153,0.929,154,0.716,155,1.031,156,0.887,157,1.031,158,1.029,159,0.887,160,1.031,161,1.031,164,1.519,166,0.929,167,1.318,168,1.44,169,0.953,170,1.211,171,1.015,172,0.929,173,0.929,174,0.929,175,0.953,176,1.284,177,0.816,178,1.219,179,0.953,180,0.905,181,1.219,182,0.953,183,0.882,184,0.953,185,1.651,186,0.795,187,0.772,188,0.87,189,0.87,190,0.953,191,0.905,192,0.882,193,0.929,194,1.318,195,0.816,198,0.953,199,0.929,200,0.882,201,0.953,202,0.953,203,0.86,204,0.953,206,0.795,214,2.429,216,2.429,221,2.876,238,0.592,239,1.158,240,1.042,241,0.838,242,1.059,243,0.838,244,1.647,245,0.735,246,0.795,247,0.795,248,0.816,249,1.38,250,0.775,251,0.838,252,0.838,253,0.735,254,0.838,255,0.735,256,0.735,257,0.795,258,1.526,259,1.188,260,0.795,261,0.838,262,0.795,263,1.059,264,1.089,265,0.735,266,0.775,267,0.838,268,0.775,269,1.128,270,1.502,271,0.795,272,1.188,273,0.735,274,0.838,275,0.775,276,0.775,277,0.838,278,0.735,279,0.795,280,0.735,281,0.838,282,0.735,283,0.816,284,0.838,285,0.775,286,0.775,287,0.838,288,0.775,289,1.188,290,0.838,291,0.795,292,0.838,293,0.775,294,0.838,295,1.389,296,1.345,297,1.365,298,1.188,299,0.735,300,0.775,301,1.188,302,0.775,303,0.838,304,1.188,305,0.775,306,1.099,307,0.838,308,0.775,309,0.775,310,0.795,311,0.838,312,0.775,313,0.735,314,0.838,315,0.775,316,0.838,317,0.775,318,0.838,319,0.755,320,1.506,321,0.775,322,0.838,323,1.277,324,1.188,325,0.735,326,1.188,327,0.795,328,0.838,329,0.735,330,0.755,331,0.735,332,0.838,333,0.775,334,0.838,335,0.735,336,0.838,337,0.735,338,0.795,339,0.795,340,0.735,341,0.838,342,1.099,343,0.661,344,0.838,345,1.099,346,0.735,347,0.838,348,0.795,349,0.816,350,0.838,351,0.775,352,0.755,353,0.838,354,0.795,355,0.575,356,0.838,357,0.735,358,0.795,359,0.838,360,0.775,361,0.838,362,0.795,363,1.31,364,0.775,365,0.838,366,0.795,367,0.838,368,0.838,369,1.454,371,2.153,378,0.795,379,1.146,380,1.242,381,1.666,398,0.979,399,0.838,436,0.679,443,2.512,446,1.177,461,1.613,557,2.081,609,1.916,617,1.79,978,3.561,991,1.351,1232,4.939,1234,3.774,1235,3.217,1236,3.217,1237,3.424,1238,3.377,1239,3.217,1241,2.078,1245,3.726,1246,2.724,1247,2.078,1248,1.996,1249,1.92,1250,2.078,1251,2.381,1252,1.92,1255,1.786,1371,2.381,1421,2.947,1422,2.268,1423,2.381,1424,2.268,1425,2.381,1434,2.168,1435,2.168,1436,2.168,1437,2.168,1657,3.739,1658,2.381,2034,4.137,2047,2.842,2048,2.842,2049,2.842,2050,2.842,2051,2.842,2052,2.842,2053,2.842,2055,2.381,2524,2.268,2557,2.842,2558,4.386,2559,4.684,2560,3.834,2561,4.684,2562,3.834,2563,2.381,2564,2.842,2565,5.59,2566,4.684,2567,2.842,2568,4.031,2569,4.031,2570,4.031,2571,4.031,2572,4.031,2573,3.774,2574,4.031,2575,4.031,2576,5.097,2577,2.842,2578,4.031,2579,4.031,2580,4.031,2581,2.661,2582,4.031]],["title/classes/MintLookupDataService.html",[97,0.075,1748,3.289]],["body/classes/MintLookupDataService.html",[0,1.183,3,0.093,4,0.079,5,0.043,8,1.02,9,1.917,10,0.374,11,0.369,12,0.986,13,0.629,17,0.933,18,2.234,19,3.151,22,0.442,24,1.081,32,1.351,36,0.463,38,0.693,39,0.01,40,0.403,41,0.367,42,0.693,44,0.699,45,1.204,48,0.605,52,0.731,58,0.707,60,0.831,79,0.416,80,0.794,81,0.206,82,0.908,83,1.56,84,1.39,85,0.837,88,1.281,94,0.396,95,0.385,96,0.194,97,0.116,99,1.296,102,1.341,105,0.728,107,1.341,110,1.442,111,0.006,112,0.005,113,0.003,114,0.146,121,0.913,123,0.523,126,0.47,132,0.976,134,0.962,142,0.645,147,0.496,148,0.662,149,0.889,154,0.537,156,0.47,158,1.129,159,1.19,168,0.971,170,0.552,171,0.537,178,0.645,181,0.987,186,0.597,187,0.351,188,0.396,189,0.396,195,0.613,203,0.645,205,1.14,206,0.913,214,1.107,216,1.107,221,2.804,225,4.23,226,1.387,256,1.356,258,0.566,263,1.409,297,0.496,313,1.024,355,0.802,357,0.552,369,1.679,371,1.095,378,1.513,379,0.86,381,0.697,397,0.47,408,0.986,416,0.959,423,0.986,436,1.518,443,1.466,472,1.83,480,1.883,482,1.732,506,1.043,522,0.872,528,1.281,557,0.794,581,1.074,617,1.514,625,0.933,670,1.176,671,1.442,673,3.243,674,1.788,698,2.051,855,1.885,859,2.134,862,2.431,875,3.055,921,1.176,943,1.442,984,2.947,988,1.703,991,1.014,1019,3.591,1033,4.592,1071,1.788,1134,2.607,1137,1.628,1235,1.703,1236,1.703,1237,2.385,1239,1.703,1241,1.56,1245,2.385,1246,2.205,1247,1.56,1248,1.498,1249,1.442,1250,1.56,1252,1.442,1255,3.005,1257,2.782,1258,4.005,1313,3.243,1314,1.885,1328,2.385,1395,1.885,1419,1.885,1430,1.703,1431,1.885,1527,2.734,1570,2.134,1608,3.263,1609,2.304,1610,5.162,1611,3.872,1612,4.791,1613,2.304,1614,2.304,1615,4.791,1616,5.162,1617,5.162,1620,4.278,1622,6.447,1623,4.791,1625,4.791,1627,5.041,1628,2.134,1629,4.154,1630,1.788,1631,2.304,1632,2.134,1633,2.134,1634,2.134,1635,2.304,1636,3.523,1637,3.523,1638,2.304,1639,2.304,1640,2.304,1641,2.304,1642,4.791,1643,5.443,1644,2.304,1645,2.304,1646,4.278,1647,5.664,1648,2.304,1649,2.304,1650,2.304,1651,2.304,1652,2.304,1653,2.304,1654,2.304,1655,2.304,1656,2.304,1657,1.703,1658,1.788,1659,4.278,1660,2.304,1661,4.278,1662,2.304,1663,5.162,1664,2.304,1665,4.278,1666,2.304,1667,4.278,1668,2.304,1669,3.523,1670,2.304,1671,5.664,1672,2.304,1673,2.304,1674,2.304,1675,2.882,1676,4.791,1677,3.523,1678,2.304,1679,3.523,1680,2.304,1681,2.304,1682,2.304,1683,2.304,1684,3.523,1685,3.523,1686,2.304,1687,3.523,1688,3.523,1689,3.523,1690,1.788,1691,3.523,1692,2.304,1693,3.523,1694,2.304,1695,2.304,1696,5.664,1697,5.162,1698,2.304,1699,2.304,1700,2.304,1701,1.885,1702,2.304,1703,4.154,1704,2.304,1705,2.304,1706,2.304,1707,3.523,1708,2.304,1709,2.304,1710,2.304,1711,2.134,1712,1.885,1713,2.304,1714,2.304,1715,2.304,1716,5.841,1717,2.304,1718,2.304,1719,3.523,1720,2.304,1721,2.134,1722,2.304,1723,2.304,1724,2.304,1725,2.134,1726,2.304,1727,2.304,1728,4.278,1729,4.791,1730,2.304,1731,2.134,1732,2.304,1733,2.304,1734,4.791,1735,2.134,1736,2.304,1737,2.134,1738,2.134,1739,2.134,1740,2.134,1741,2.304,1742,2.304,1743,2.304,1744,2.304,1745,2.304,1746,1.788,1747,3.523,1748,3.962,1749,4.278,1750,2.304,1751,2.304,1752,2.304,1753,4.278,1754,5.443,1755,5.664,1756,6.38,1757,5.162,1758,4.791,1759,3.523,1760,4.278,1761,3.319,1762,5.162,1763,3.499,1764,4.278,1765,4.278,1766,4.278,1767,4.278,1768,2.304,1769,2.304,1770,2.304,1771,5.443,1772,2.134,1773,2.134,1774,2.304,1775,2.304,1776,2.304,1777,3.523,1778,3.523,1779,2.304,1780,2.304,1781,2.304,1782,5.545,1783,3.263,1784,2.304,1785,3.523,1786,1.998,1787,2.134,1788,2.304,1789,2.304,1790,3.523,1791,2.304,1792,2.304,1793,2.304,1794,2.304,1795,2.304,1796,3.523,1797,2.304,1798,2.304,1799,3.523,1800,2.304,1801,3.319,1802,2.304,1803,3.523,1804,3.523,1805,3.523,1806,3.523,1807,3.523,1808,5.443,1809,2.304,1810,3.523,1811,5.162,1812,3.523,1813,3.523,1814,2.304,1815,3.523,1816,3.523,1817,3.523,1818,3.263,1819,3.523,1820,2.304,1821,2.304,1822,2.304,1823,2.304,1824,2.134,1825,2.304,1826,2.304,1827,2.304,1828,2.304,1829,2.304,1830,2.304,1831,2.304,1832,2.304,1833,2.304,1834,3.523,1835,2.304,1836,2.304,1837,2.304,1838,2.304,1839,2.304,1840,2.304,1841,2.304,1842,2.304,1843,1.885,1844,2.304,1845,2.304,1846,2.304,1847,2.304,1848,2.304,1849,2.304,1850,2.304,1851,2.304,1852,3.523,1853,3.263,1854,2.304,1855,2.304,1856,2.304,1857,2.304,1858,2.304,1859,2.304,1860,2.304,1861,2.304,1862,2.304,1863,2.882,1864,2.304,1865,2.304,1866,2.304,1867,2.304,1868,2.304,1869,2.304,1870,4.278,1871,2.304,1872,2.134,1873,2.304,1874,1.885,1875,2.304,1876,2.304,1877,2.304,1878,4.278,1879,2.304,1880,2.304,1881,2.304,1882,2.304,1883,2.304,1884,2.304,1885,2.304,1886,2.134,1887,2.304,1888,1.788,1889,2.304,1890,2.304,1891,2.134,1892,2.134,1893,1.885,1894,2.304,1895,2.304,1896,3.523,1897,2.304,1898,2.304,1899,2.304,1900,2.304,1901,2.134,1902,2.304,1903,2.304,1904,2.304,1905,2.304,1906,2.304,1907,2.304,2583,4.401,2584,4.401,2585,2.878,2586,2.878,2587,2.878,2588,2.878,2589,2.878]],["title/classes/MintRelationshipLookup.html",[97,0.075,1901,3.289]],["body/classes/MintRelationshipLookup.html",[0,1.207,3,0.096,4,0.081,5,0.044,8,0.979,9,1.956,10,0.379,11,0.377,12,1.012,13,0.646,17,0.958,18,2.264,19,3.226,22,0.451,24,1.073,32,1.378,36,0.397,38,0.483,39,0.01,40,0.281,41,0.293,42,0.483,44,0.696,45,1.218,48,0.277,52,0.548,58,0.714,60,0.817,79,0.418,80,0.816,81,0.211,82,0.932,83,1.601,84,1.427,85,0.86,88,1.306,94,0.407,95,0.395,96,0.196,97,0.117,99,1.33,102,1.377,105,0.73,107,1.377,110,1.48,111,0.006,112,0.005,113,0.003,114,0.148,121,0.931,123,0.537,126,0.482,132,0.99,134,0.981,142,0.663,147,0.509,148,0.68,149,0.907,154,0.552,156,0.482,158,1.136,159,1.2,168,0.987,170,0.566,171,0.552,178,0.663,181,1.007,186,0.613,187,0.361,188,0.407,189,0.407,195,0.629,203,0.663,205,1.171,206,0.931,214,1.136,216,1.136,221,2.829,225,4.261,226,1.397,256,1.163,258,0.582,263,1.39,297,0.509,313,1.041,355,0.815,357,0.566,369,1.501,371,1.117,378,1.526,379,0.883,381,0.716,397,0.482,408,1.012,416,0.984,423,1.012,436,1.523,443,1.496,472,1.86,480,1.913,482,1.76,506,1.071,522,0.886,528,1.306,557,0.816,581,1.103,617,1.272,625,0.958,670,1.207,671,1.48,673,2.943,674,1.835,698,2.092,855,1.935,859,2.191,862,2.451,875,3.117,921,1.207,943,1.48,984,2.962,988,1.748,991,1.041,1019,3.603,1033,4.622,1071,1.835,1134,1.956,1137,1.671,1235,1.748,1236,1.748,1237,2.433,1239,1.748,1241,1.601,1245,2.433,1246,2.249,1247,1.601,1248,1.538,1249,1.48,1250,1.601,1252,1.48,1255,3.04,1257,2.827,1258,4.052,1313,3.288,1314,1.935,1328,2.433,1395,1.935,1419,1.935,1430,1.748,1431,1.935,1527,2.789,1570,2.191,1608,3.329,1609,2.365,1610,4.856,1612,3.594,1613,2.365,1614,2.365,1615,3.594,1616,4.347,1617,4.347,1620,3.594,1622,6.415,1623,4.347,1625,4.856,1627,5.093,1628,2.191,1629,4.211,1630,1.835,1631,2.365,1632,2.191,1633,2.191,1634,2.191,1635,2.365,1636,3.594,1637,3.594,1638,2.365,1639,2.365,1640,2.365,1641,2.365,1642,3.594,1643,4.856,1644,2.365,1645,2.365,1646,4.347,1647,5.716,1648,2.365,1649,2.365,1650,2.365,1651,2.365,1652,2.365,1653,2.365,1654,2.365,1655,2.365,1656,2.365,1657,1.748,1658,1.835,1659,4.347,1660,2.365,1661,4.347,1662,2.365,1663,5.223,1664,2.365,1665,4.347,1666,2.365,1667,4.347,1668,2.365,1669,3.594,1670,2.365,1671,5.716,1672,2.365,1673,2.365,1674,2.365,1675,2.94,1676,4.856,1677,3.594,1678,2.365,1679,3.594,1680,2.365,1681,2.365,1682,2.365,1683,2.365,1684,3.594,1685,3.594,1686,2.365,1687,3.594,1688,3.594,1689,3.594,1690,1.835,1691,3.594,1692,2.365,1693,3.594,1694,2.365,1695,2.365,1696,5.716,1697,5.223,1698,2.365,1699,2.365,1700,2.365,1701,1.935,1702,2.365,1703,4.211,1704,2.365,1705,2.365,1706,2.365,1707,3.594,1708,2.365,1709,2.365,1710,2.365,1711,2.191,1712,1.935,1713,2.365,1714,2.365,1715,2.365,1716,5.89,1717,2.365,1718,2.365,1719,3.594,1720,2.365,1721,2.191,1722,2.365,1723,2.365,1724,2.365,1725,2.191,1726,2.365,1727,2.365,1728,4.347,1729,4.856,1730,2.365,1731,2.191,1732,2.365,1733,2.365,1734,4.856,1735,2.191,1736,2.365,1737,2.191,1738,2.191,1739,2.191,1740,2.191,1741,2.365,1742,2.365,1743,2.365,1744,2.365,1745,2.365,1746,1.835,1747,3.594,1748,3.329,1749,4.347,1750,2.365,1751,2.365,1752,2.365,1753,4.347,1754,5.5,1755,5.716,1756,6.415,1757,5.223,1758,4.856,1759,3.594,1760,4.347,1761,3.373,1762,5.223,1763,3.556,1764,4.347,1765,4.347,1766,4.347,1767,4.347,1768,2.365,1769,2.365,1770,2.365,1771,5.5,1772,2.191,1773,2.191,1774,2.365,1775,2.365,1776,2.365,1777,3.594,1778,3.594,1779,2.365,1780,2.365,1781,2.365,1782,5.587,1783,3.329,1784,2.365,1785,3.594,1786,2.051,1787,2.191,1788,2.365,1789,2.365,1790,3.594,1791,2.365,1792,2.365,1793,2.365,1794,2.365,1795,2.365,1796,3.594,1797,2.365,1798,2.365,1799,3.594,1800,2.365,1801,3.373,1802,2.365,1803,3.594,1804,3.594,1805,3.594,1806,3.594,1807,3.594,1808,5.89,1809,2.365,1810,3.594,1811,5.223,1812,3.594,1813,3.594,1814,2.365,1815,3.594,1816,3.594,1817,3.594,1818,3.329,1819,3.594,1820,2.365,1821,2.365,1822,2.365,1823,2.365,1824,2.191,1825,2.365,1826,2.365,1827,2.365,1828,2.365,1829,2.365,1830,2.365,1831,2.365,1832,2.365,1833,2.365,1834,2.365,1835,2.365,1836,2.365,1837,2.365,1838,2.365,1839,2.365,1840,2.365,1841,2.365,1842,2.365,1843,1.935,1844,2.365,1845,2.365,1846,2.365,1847,2.365,1848,2.365,1849,2.365,1850,2.365,1851,2.365,1852,3.594,1853,3.329,1854,2.365,1855,2.365,1856,2.365,1857,2.365,1858,2.365,1859,2.365,1860,2.365,1861,2.365,1862,2.365,1863,2.94,1864,2.365,1865,2.365,1866,2.365,1867,2.365,1868,2.365,1869,2.365,1870,4.347,1871,2.365,1872,2.191,1873,2.365,1874,1.935,1875,2.365,1876,2.365,1877,2.365,1878,4.347,1879,2.365,1880,2.365,1881,2.365,1882,2.365,1883,2.365,1884,2.365,1885,2.365,1886,2.191,1887,2.365,1888,1.835,1889,2.365,1890,2.365,1891,2.191,1892,2.191,1893,1.935,1894,2.365,1895,2.365,1896,3.594,1897,2.365,1898,2.365,1899,2.365,1900,2.365,1901,3.329,1902,2.365,1903,4.347,1904,2.365,1905,2.365,1906,2.365,1907,2.365,2590,4.49,2591,2.955,2592,2.955]],["title/pipes/MultivalueFieldPipe.html",[2593,3.289,2594,3.289]],["body/pipes/MultivalueFieldPipe.html",[3,0.219,4,0.184,5,0.101,22,0.678,24,0.957,36,0.442,38,0.725,39,0.01,40,0.518,41,0.364,42,0.725,44,0.643,48,0.633,79,0.345,80,1.862,81,0.482,96,0.219,97,0.115,105,0.566,111,0.008,112,0.009,113,0.008,122,1.363,242,0.984,523,2.377,617,1.912,1257,4.438,2593,5.81,2594,5.81,2595,5.401,2596,6.746,2597,7.836,2598,5.935,2599,6.746,2600,6.274,2601,6.746,2602,5.401,2603,6.894,2604,6.746,2605,5.935,2606,5.935,2607,6.746,2608,6.746]],["title/components/PDFListComponent.html",[114,0.121,302,0.896]],["body/components/PDFListComponent.html",[3,0.131,4,0.11,5,0.061,8,0.976,10,0.44,11,0.474,22,0.568,24,1.055,36,0.573,38,0.757,39,0.01,40,0.517,41,0.461,42,0.796,44,0.624,45,0.756,48,0.783,50,1.613,52,0.69,57,0.844,58,0.677,60,0.823,79,0.403,80,1.117,81,0.289,85,1.643,86,1.276,90,3.4,94,0.557,95,0.541,96,0.211,97,0.111,105,0.622,111,0.005,112,0.006,113,0.005,114,0.209,115,0.818,116,1.112,117,0.884,118,1.202,121,1.814,122,1.141,123,1.663,124,0.861,126,0.66,127,1.311,132,1.394,133,1.369,134,1.755,135,1.497,136,1.497,139,1.369,140,1.369,141,1.369,142,1.459,143,1.577,144,1.577,145,1.266,146,1.266,147,1.121,148,1.3,149,1.315,150,1.088,151,1.3,152,1.088,153,0.981,154,1.054,155,1.088,156,0.921,157,1.088,158,1.116,159,1.061,160,1.088,161,1.088,166,0.981,167,1.369,168,1.027,169,1.006,170,1.247,171,1.215,172,0.981,173,0.981,174,0.981,175,1.006,176,1.334,177,0.861,178,0.907,179,1.006,180,0.956,181,0.907,182,1.006,183,0.931,184,1.006,185,0.861,186,0.839,187,0.69,188,0.778,189,0.778,190,1.006,191,0.956,192,0.931,193,1.577,194,1.369,195,0.861,198,1.006,199,0.981,200,1.497,201,1.006,202,1.006,203,0.907,204,1.006,205,1.603,206,0.839,209,2.93,210,2.394,214,1.556,216,1.556,220,2.514,221,2.79,223,3,224,3,225,2.288,228,2.65,238,0.625,239,1.202,240,1.083,241,0.884,242,1.119,243,0.884,244,1.676,245,0.776,246,0.839,247,0.839,248,0.861,249,1.422,250,0.818,251,0.884,252,0.884,253,0.776,254,0.884,255,0.776,256,0.776,257,0.839,258,1.606,259,1.234,260,0.839,261,0.884,262,0.839,263,1.32,264,1.121,265,0.776,266,1.315,267,0.884,268,0.818,269,1.171,270,1.538,271,0.839,272,1.234,273,0.776,274,0.884,275,0.818,276,0.818,277,0.884,278,0.776,279,0.839,280,0.776,281,0.884,282,0.776,283,0.861,284,0.884,285,0.818,286,0.818,287,0.884,288,0.818,289,1.234,290,0.884,291,0.839,292,0.884,293,0.818,294,0.884,295,0.818,296,0.861,297,1.121,298,1.234,299,0.776,300,0.818,301,1.234,302,1.423,303,1.755,304,1.234,305,0.818,306,1.141,307,0.884,308,0.818,309,0.818,310,0.839,311,0.884,312,0.818,313,0.776,314,0.884,315,0.818,316,0.884,317,0.818,318,0.884,319,0.796,320,1.46,321,0.818,322,0.884,323,0.818,324,1.234,325,0.776,326,1.234,327,0.839,328,0.884,329,0.776,330,0.796,331,0.776,332,0.884,333,0.818,334,0.884,335,0.776,336,0.884,337,0.776,338,0.839,339,0.839,340,0.776,341,0.884,342,0.818,343,0.697,344,0.884,345,0.818,346,0.776,347,0.884,348,0.839,349,0.861,350,0.884,351,0.818,352,0.796,353,0.884,354,0.839,355,0.607,356,0.884,357,0.776,358,0.839,359,0.884,360,0.818,361,0.884,362,0.839,363,1.349,364,0.818,365,0.884,366,0.839,367,0.884,368,0.884,369,1.62,378,0.839,381,1.577,397,0.66,436,1,452,1.51,517,2.238,522,0.66,557,1.944,579,1.893,617,1.601,623,1.881,639,2.829,670,2.308,698,1.886,744,3.342,747,2.514,862,1.881,958,3.455,991,2.481,1061,3.921,1096,2.65,1165,4.888,1220,2.94,1246,2.027,1313,3.061,1328,3.061,1446,2.394,1516,7.066,1690,2.514,1701,2.65,2528,2.809,2609,4.046,2610,5.648,2611,4.187,2612,5.648,2613,5.648,2614,5.648,2615,4.046,2616,4.969,2617,4.046,2618,6.506,2619,4.046,2620,3,2621,3,2622,4.969,2623,3.239,2624,3.239,2625,3.239,2626,2.809,2627,4.046,2628,4.046,2629,4.046,2630,4.046,2631,4.969,2632,3.239,2633,3.56,2634,3.239,2635,3.239,2636,4.046,2637,4.046,2638,3.239,2639,4.046,2640,3,2641,4.969,2642,4.046,2643,4.046,2644,4.046,2645,4.046,2646,4.046,2647,4.046,2648,4.046,2649,4.046,2650,4.046,2651,5.648,2652,4.046,2653,4.046,2654,4.046,2655,4.046,2656,4.046,2657,4.046,2658,4.046,2659,4.046,2660,4.046,2661,4.046,2662,4.046,2663,4.046,2664,3.56,2665,4.046,2666,3.56,2667,4.046,2668,5.648,2669,5.648,2670,5.648,2671,6.194,2672,5.648,2673,5.648,2674,5.648]],["title/components/ParameterRetrieverComponent.html",[114,0.121,299,0.851]],["body/components/ParameterRetrieverComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.42,11,0.36,13,1.144,22,0.432,24,1.061,36,0.545,38,0.633,39,0.01,40,0.513,41,0.443,42,0.722,44,0.637,45,0.52,48,0.75,50,1.521,52,0.524,57,0.764,58,0.698,60,0.855,79,0.358,81,0.199,85,1.249,86,0.879,94,0.384,95,0.373,96,0.269,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.231,115,0.563,116,1.031,117,0.609,118,0.914,121,1.81,122,0.868,123,1.646,124,0.593,125,2.619,126,1.318,127,1.125,130,2.545,132,1.42,133,1.269,134,1.653,135,1.462,136,1.462,138,1.04,139,1.041,140,1.041,141,1.041,142,1.505,143,1.269,144,1.426,145,0.963,146,1.174,147,1.205,148,1.205,149,1.058,150,0.749,151,1.205,152,0.749,153,1.041,154,0.978,155,0.749,156,0.96,157,0.749,158,0.991,159,1.256,160,0.749,161,0.749,166,1.041,167,1.269,168,1.07,169,0.693,170,1.287,171,1.253,172,1.041,173,1.041,174,0.675,175,0.693,176,1.39,177,0.914,178,0.625,179,0.693,180,1.014,181,0.963,182,0.693,183,1.462,184,0.693,185,1.429,186,1.086,187,0.64,188,0.721,189,0.721,190,0.693,191,1.014,192,1.205,193,1.54,194,1.54,195,0.914,198,0.693,199,1.041,200,1.205,201,0.693,202,0.693,203,1.32,204,0.693,206,0.891,207,1.702,208,0.879,226,1.07,238,0.43,239,0.914,240,0.823,241,0.609,242,1.081,243,0.609,244,1.467,245,0.823,246,0.891,247,0.578,248,0.593,249,1.144,250,0.563,251,0.609,252,0.609,253,0.823,254,0.609,255,0.823,256,1.004,257,0.578,258,1.377,259,0.938,260,0.578,261,0.609,262,0.578,263,0.878,264,1.014,265,0.823,266,0.868,267,0.609,268,0.563,269,0.891,270,1.286,271,0.578,272,0.938,273,1.004,274,0.609,275,0.563,276,0.563,277,0.609,278,0.823,279,0.891,280,0.823,281,0.609,282,0.823,283,0.593,284,0.609,285,0.563,286,0.563,287,0.609,288,0.563,289,0.938,290,0.609,291,0.578,292,0.609,293,0.563,294,0.609,295,0.563,296,0.593,297,1.157,298,0.938,299,1.128,300,1.058,301,0.938,302,0.563,303,0.609,304,0.938,305,0.563,306,0.868,307,0.609,308,0.563,309,0.563,310,0.578,311,0.609,312,0.563,313,0.534,314,0.609,315,0.563,316,0.609,317,0.563,318,0.609,319,0.549,320,1.221,321,0.563,322,0.609,323,0.563,324,0.938,325,0.534,326,0.938,327,0.578,328,0.609,329,0.823,330,1.321,331,1.004,332,0.609,333,0.563,334,0.609,335,0.823,336,0.609,337,0.823,338,1.392,339,0.891,340,0.823,341,0.609,342,0.563,343,0.902,344,0.609,345,0.563,346,0.823,347,0.609,348,0.578,349,0.593,350,0.609,351,0.563,352,0.549,353,0.609,354,0.578,355,0.418,356,0.609,357,0.534,358,0.578,359,0.609,360,0.563,361,0.609,362,0.578,363,1.086,364,0.563,365,0.609,366,0.578,367,0.609,368,0.609,369,1.354,370,1.139,371,2.009,372,1.139,375,1.755,378,1.451,379,0.833,380,0.903,381,0.675,382,2.14,383,1.139,384,1.899,385,2.14,386,2.14,387,1.652,388,2.134,389,2.14,390,2.405,391,1.139,392,1.755,393,1.755,394,1.104,395,1.104,396,0.955,397,0.455,398,1.096,399,0.609,400,1.104,401,2.372,402,1.139,403,2.743,404,1.755,405,1.011,406,1.702,407,1.513,408,0.955,409,1.139,410,1.139,411,1.139,412,1.139,413,1.139,414,1.755,415,1.139,416,0.928,417,1.139,418,1.139,419,1.139,420,1.04,421,1.04,422,1.04,423,0.955,424,1.139,425,1.139,426,1.139,427,1.139,428,1.755,429,1.139,430,1.139,431,1.139,432,1.139,433,2.076,434,1.702,435,1.139,436,1.188,437,2.076,438,1.139,439,2.014,440,0.928,441,2.332,442,1.139,443,1.745,444,2.14,445,1.139,446,1.608,447,1.139,448,1.139,449,1.139,450,1.139,451,1.139,452,1.955,453,1.755,454,1.139,455,1.139,456,1.139,457,1.139,458,1.139,459,1.139,460,1.139,461,1.096,462,1.139,463,1.755,464,1.755,465,1.139,466,1.139,467,1.139,468,1.139,469,1.139,470,1.139,471,1.104,472,1.471,473,1.139,474,1.139,475,1.139,476,1.755,477,1.139,478,1.139,479,1.139,480,1.513,481,1.702,482,1.392,483,2.772,484,2.14,485,1.139,486,1.139,487,1.755,488,1.755,489,1.139,490,2.772,491,1.755,492,1.139,493,1.139,494,1.139,495,1.139,496,2.14,497,1.139,498,1.139,499,1.139,500,1.139,501,1.139,502,1.139,503,0.982,504,0.982,505,1.139,506,1.011,507,1.139,508,1.104,509,1.139,510,1.104,511,1.139,512,1.04,513,1.04,514,1.104,515,1.104,516,0.903,517,1.104,518,2.14,519,1.755,520,1.139,521,0.955,522,0.455,523,0.982,524,1.104,525,0.903,526,1.139,527,1.139,528,0.811,529,1.072,530,1.755,531,1.139,532,1.139,533,1.139,534,1.139,535,1.139,536,1.139,537,1.139,538,2.14,539,1.139,540,1.139,541,1.139,542,1.139,543,1.755,544,1.139,545,1.139,546,1.43,547,1.139,548,1.104,549,1.139,550,1.139,551,1.104,552,1.139,553,1.139,554,1.139,555,1.755,556,1.755,557,0.769,558,1.139,559,1.104,560,1.104,561,1.04,562,1.104,563,1.139,564,1.104,565,1.139,566,1.139,567,1.139,568,1.139,569,1.139,570,1.139,571,1.139,572,1.139,573,1.755,574,1.755,575,1.755,576,1.755,577,1.755,578,1.702,579,1.155,580,1.139,581,1.04,582,1.139,583,1.139,584,0.928,585,1.04,586,1.755,587,1.139,588,1.139,589,1.139,590,2.14,591,1.139,592,1.139,593,1.139,594,1.139,595,1.139,596,1.139,597,1.139,598,1.139,599,1.104,600,1.139,601,1.139,602,1.139,603,1.072,604,1.139,605,1.139,606,1.104,607,1.139,608,1.139,609,0.982,610,1.139,611,1.139,612,1.139,613,1.139,614,1.139,615,1.139,616,1.702,617,1.217,618,1.755,619,1.139,620,1.139,621,1.139,622,1.139,623,0.928,2675,3.778,2676,2.452,2677,2.787,2678,2.787,2679,2.787]],["title/classes/Plan.html",[90,2.142,97,0.075]],["body/classes/Plan.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.567,39,0.01,41,0.467,44,0.698,89,4.164,90,3.988,96,0.253,97,0.133,111,0.008,112,0.009,113,0.008,168,1.502,625,2.172,744,4.888,948,7.021,1011,4.164,1019,3.484,2167,3.966,2680,7.267,2681,7.267,2682,7.267,2683,5.897,2684,5.897,2685,5.897,2686,6.703,2687,6.703,2688,4.969,2689,4.969,2690,4.969]],["title/classes/PlanTable.html",[89,2.756,97,0.075]],["body/classes/PlanTable.html",[3,0.219,4,0.184,5,0.101,10,0.422,11,0.658,36,0.558,39,0.01,41,0.46,44,0.674,89,4.868,90,3.999,96,0.254,97,0.133,111,0.008,112,0.009,113,0.008,168,1.597,625,2.186,744,3.992,948,6.947,1011,5.145,1019,2.845,2167,3.992,2680,5.935,2681,5.935,2682,5.935,2688,6.141,2689,6.141,2690,6.141,2691,5.935,2692,5.935,2693,5.935,2694,5.935]],["title/components/PublishDataLocationRefreshComponent.html",[114,0.121,305,0.896]],["body/components/PublishDataLocationRefreshComponent.html",[3,0.145,4,0.122,5,0.067,8,1.028,10,0.459,11,0.507,22,0.607,24,1.038,36,0.575,38,0.736,39,0.01,40,0.521,41,0.468,42,0.789,44,0.638,45,0.833,48,0.781,50,1.633,52,0.545,57,0.889,58,0.712,60,0.761,79,0.404,80,1.232,81,0.319,94,0.615,95,0.597,96,0.222,97,0.116,105,0.375,111,0.005,112,0.007,113,0.005,114,0.221,115,0.902,116,1.189,117,0.975,118,1.286,121,1.833,122,1.221,123,1.669,124,0.95,126,0.728,127,1.357,128,3.099,132,1.414,133,1.464,134,1.797,135,1.576,136,1.576,139,1.464,140,1.464,141,1.464,142,1.536,143,1.66,144,1.66,145,1.355,146,1.355,147,1.18,148,1.39,149,1.384,150,1.2,151,1.39,152,1.2,153,1.082,154,1.128,155,1.2,156,0.986,157,1.2,158,1.087,159,0.728,160,1.2,161,1.2,166,1.082,167,1.464,168,1.098,169,1.11,170,1.313,171,1.279,172,1.082,173,1.082,174,1.082,175,1.11,176,1.427,177,0.95,178,1.001,179,1.11,180,1.054,181,1.001,182,1.11,183,1.027,184,1.11,185,0.95,186,0.926,187,0.836,188,0.943,189,0.943,190,1.11,191,1.054,192,1.027,193,1.082,194,1.464,195,0.95,198,1.11,199,1.082,200,1.027,201,1.11,202,1.11,203,1.001,204,1.11,205,1.769,206,0.926,209,3.084,210,2.641,214,1.716,216,1.716,220,2.773,221,2.394,222,3.099,226,0.812,238,0.689,239,1.286,240,1.158,241,0.975,242,1.119,243,0.975,244,1.727,245,0.856,246,0.926,247,0.926,248,0.95,249,1.496,250,0.902,251,0.975,252,0.975,253,0.856,254,0.975,255,0.856,256,0.856,257,0.926,258,1.591,259,1.32,260,0.926,261,0.975,262,0.926,263,1.467,264,1.436,265,0.856,266,0.902,267,0.975,268,0.902,269,1.253,270,1.604,271,0.926,272,1.32,273,0.856,274,0.975,275,0.902,276,0.902,277,0.975,278,0.856,279,0.926,280,0.856,281,0.975,282,0.856,283,0.95,284,0.975,285,0.902,286,0.902,287,0.975,288,0.902,289,1.32,290,0.975,291,0.926,292,0.975,293,0.902,294,0.975,295,0.902,296,0.95,297,1.18,298,1.32,299,0.856,300,0.902,301,1.32,302,0.902,303,0.975,304,1.32,305,1.483,306,1.661,307,0.975,308,0.902,309,0.902,310,0.926,311,0.975,312,0.902,313,0.856,314,0.975,315,0.902,316,0.975,317,0.902,318,0.975,319,0.879,320,1.522,321,0.902,322,0.975,323,0.902,324,1.32,325,0.856,326,1.32,327,0.926,328,0.975,329,0.856,330,0.879,331,0.856,332,0.975,333,0.902,334,0.975,335,0.856,336,0.975,337,0.856,338,0.926,339,0.926,340,0.856,341,0.975,342,0.902,343,0.769,344,0.975,345,0.902,346,0.856,347,0.975,348,0.926,349,0.95,350,0.975,351,0.902,352,0.879,353,0.975,354,0.926,355,0.67,356,0.975,357,0.856,358,0.926,359,0.975,360,0.902,361,0.975,362,0.926,363,1.421,364,0.902,365,0.975,366,0.926,367,0.975,368,0.975,369,1.39,371,1.503,378,0.926,381,1.082,397,0.728,398,1.139,399,0.975,522,0.728,639,3.027,670,1.824,747,2.773,886,2.324,1220,3.145,1863,3.957,2142,3.573,2695,4.464,2696,7.339,2697,6.042,2698,6.042,2699,6.042,2700,6.849,2701,4.464,2702,4.464,2703,4.464,2704,4.464,2705,6.042,2706,4.464,2707,4.464,2708,6.042,2709,4.464,2710,3.927,2711,4.464,2712,4.464]],["title/components/PublishDataLocationSelectorComponent.html",[114,0.121,308,0.896]],["body/components/PublishDataLocationSelectorComponent.html",[3,0.12,4,0.101,5,0.093,8,0.931,10,0.466,11,0.446,17,1.202,22,0.534,24,1.09,36,0.577,38,0.802,39,0.01,40,0.519,41,0.463,42,0.826,44,0.666,45,0.693,48,0.8,50,1.594,52,0.911,57,0.879,58,0.832,60,0.689,79,0.393,80,1.024,81,0.265,94,0.511,95,0.496,96,0.232,97,0.105,105,0.602,111,0.004,112,0.006,113,0.004,114,0.204,115,0.75,116,1.046,117,0.811,118,1.131,121,1.795,122,1.073,123,1.659,124,0.79,126,0.605,127,1.098,132,1.376,133,1.287,134,1.716,135,1.428,136,1.428,139,1.287,140,1.287,141,1.287,142,1.607,143,1.504,144,1.504,145,1.191,146,1.191,147,1.167,148,1.222,149,1.254,150,0.998,151,1.222,152,0.998,153,0.899,154,0.992,155,0.998,156,0.867,157,0.998,158,1.057,159,0.605,160,0.998,161,0.998,166,0.899,167,1.287,168,0.966,169,0.923,170,1.19,171,1.159,172,0.899,173,0.899,174,0.899,175,0.923,176,1.254,177,0.79,178,0.832,179,0.923,180,0.876,181,0.832,182,0.923,183,1.65,184,0.923,185,0.79,186,0.77,187,0.649,188,0.731,189,0.731,190,0.923,191,0.876,192,0.854,193,0.899,194,1.287,195,0.79,198,0.923,199,0.899,200,1.428,201,0.923,202,0.923,203,0.832,204,0.923,205,1.47,206,0.77,209,2.794,210,2.196,214,1.427,216,1.427,220,2.305,221,2.684,222,2.576,223,2.751,225,3.004,226,0.966,227,3.264,228,2.43,238,0.573,239,1.131,240,1.018,241,0.811,242,1.046,243,0.811,244,1.63,245,0.711,246,0.77,247,0.77,248,0.79,249,1.356,250,0.75,251,0.811,252,0.811,253,0.711,254,0.811,255,0.711,256,1.018,257,0.77,258,1.512,259,1.161,260,0.77,261,0.811,262,0.77,263,1.202,264,1.378,265,0.711,266,0.75,267,0.811,268,0.75,269,1.102,270,1.48,271,0.77,272,1.161,273,0.711,274,0.811,275,0.75,276,0.75,277,0.811,278,0.711,279,0.77,280,0.711,281,0.811,282,0.711,283,0.79,284,0.811,285,0.75,286,0.75,287,0.811,288,0.75,289,1.161,290,0.811,291,0.77,292,0.811,293,0.75,294,0.811,295,0.75,296,0.79,297,1.069,298,1.161,299,0.711,300,0.75,301,1.161,302,0.75,303,0.811,304,1.161,305,0.75,306,1.369,307,0.811,308,1.369,309,0.75,310,0.77,311,0.811,312,0.75,313,0.711,314,0.811,315,0.75,316,0.811,317,0.75,318,0.811,319,0.73,320,1.405,321,0.75,322,0.811,323,0.75,324,1.161,325,0.711,326,1.161,327,0.77,328,0.811,329,0.711,330,0.73,331,0.711,332,0.811,333,0.75,334,0.811,335,0.711,336,0.811,337,0.711,338,0.77,339,0.77,340,0.711,341,0.811,342,0.75,343,0.639,344,0.811,345,0.75,346,0.711,347,0.811,348,0.77,349,0.79,350,0.811,351,0.75,352,0.73,353,0.811,354,0.77,355,0.557,356,0.811,357,0.711,358,0.77,359,0.811,360,0.75,361,0.811,362,0.77,363,1.287,364,0.75,365,0.811,366,0.77,367,0.811,368,0.811,369,1.867,371,1.321,378,0.77,381,0.899,397,0.605,398,0.947,399,0.811,461,0.947,522,0.605,529,1.427,557,1.87,639,2.661,670,2.171,747,2.305,958,2.794,984,1.926,991,1.872,1220,2.765,1381,3.688,1446,2.196,1675,3.479,1712,2.43,1787,2.751,1888,3.3,2046,5.739,2363,3.004,2528,2.576,2616,5.459,2620,2.751,2621,2.751,2623,2.97,2624,2.97,2626,2.576,2632,2.97,2634,2.97,2635,2.97,2640,4.6,2713,3.71,2714,3.938,2715,3.688,2716,2.765,2717,5.312,2718,6.205,2719,5.312,2720,5.312,2721,6.774,2722,6.774,2723,6.774,2724,5.312,2725,5.312,2726,3.71,2727,3.71,2728,3.71,2729,3.71,2730,3.71,2731,3.71,2732,3.71,2733,3.71,2734,5.312,2735,3.71,2736,5.312,2737,3.71,2738,6.205,2739,3.71,2740,5.312,2741,3.71,2742,5.312,2743,5.312,2744,3.71,2745,4.673,2746,4.673,2747,3.71,2748,3.71,2749,3.71,2750,3.71,2751,3.71,2752,3.71,2753,3.71,2754,3.71,2755,3.71,2756,3.71,2757,3.71,2758,3.71,2759,3.71,2760,3.71,2761,3.71,2762,3.71,2763,3.71,2764,3.71,2765,3.71,2766,3.71,2767,3.71,2768,2.751,2769,3.71,2770,3.71,2771,3.71,2772,3.71,2773,3.71,2774,3.71,2775,3.71,2776,3.71,2777,3.71,2778,3.71,2779,3.71,2780,3.71,2781,3.71,2782,3.71,2783,3.71,2784,3.71,2785,3.264,2786,5.312,2787,3.71,2788,3.71,2789,3.71,2790,3.71,2791,3.71,2792,3.71,2793,3.71,2794,3.71,2795,3.71,2796,3.71,2797,3.71,2798,3.71,2799,3.71,2800,3.71,2801,3.71,2802,3.71,2803,3.71,2804,3.71,2805,3.71,2806,3.71,2807,6.205,2808,3.71,2809,3.71,2810,5.312,2811,3.71,2812,3.71,2813,5.312,2814,5.312,2815,5.312,2816,5.312,2817,5.312,2818,6.774,2819,5.312]],["title/classes/RbValidator.html",[97,0.075,2820,3.903]],["body/classes/RbValidator.html",[3,0.196,4,0.165,5,0.091,10,0.379,13,1.912,22,0.827,36,0.481,38,0.79,39,0.01,40,0.46,41,0.396,42,0.79,44,0.639,48,0.689,60,0.914,79,0.376,94,0.834,95,0.81,96,0.196,97,0.103,105,0.708,111,0.007,112,0.008,113,0.007,132,0.988,154,1.131,156,1.199,158,1.122,159,0.988,186,1.525,187,0.898,188,1.012,189,1.012,258,1.447,397,0.988,436,1.457,461,2.02,522,0.988,546,2.449,579,1.629,625,1.963,670,3.234,958,3.31,1084,2.639,1134,3.202,1396,4.205,2359,5.389,2602,6.588,2820,6.467,2821,6.058,2822,7.351,2823,5.103,2824,8.431,2825,7.351,2826,7.351,2827,8.431,2828,6.058,2829,7.351,2830,5.45,2831,7.351,2832,7.914,2833,6.058,2834,6.467,2835,6.467,2836,5.45,2837,5.885,2838,8.23,2839,7.914,2840,6.058,2841,6.058,2842,6.058,2843,6.058,2844,6.058,2845,6.058,2846,7.914,2847,7.351,2848,6.058,2849,6.058,2850,6.058,2851,6.058]],["title/classes/RecordActionResult.html",[97,0.075,2852,3.289]],["body/classes/RecordActionResult.html",[0,1.523,3,0.132,4,0.111,5,0.061,8,0.61,9,2.467,10,0.254,11,0.475,12,2.416,17,2.286,18,2.633,19,2.507,32,1.247,36,0.427,39,0.01,40,0.408,41,0.4,44,0.691,58,0.799,60,0.876,79,0.418,80,1.121,81,0.29,82,1.281,84,1.961,88,1.648,90,1.961,94,0.559,95,0.543,96,0.228,97,0.126,98,2.035,99,1.829,102,1.893,105,0.754,107,3.287,108,4.53,109,4.269,110,4.33,111,0.005,112,0.006,113,0.005,127,1.313,132,0.924,147,1.358,149,0.821,158,0.924,159,0.663,187,0.496,188,0.559,189,0.559,206,1.175,209,1.829,221,2.244,226,1.03,240,0.779,242,0.826,343,0.7,387,1.281,398,1.037,405,1.473,420,1.516,436,1.445,461,1.037,503,1.995,504,1.995,516,1.316,528,1.182,579,1.092,625,1.316,671,2.035,672,2.297,677,3.012,722,3.858,744,4.757,756,3.012,827,2.82,828,2.82,829,2.523,862,1.353,869,5.473,911,2.82,958,1.829,965,5.229,973,3.012,984,2.053,988,2.404,1019,1.713,1024,5.073,1042,2.523,1043,3.518,1134,1.769,1285,3.931,1535,3.012,1545,2.404,1761,2.523,1893,2.66,1908,3.351,1948,2.404,1977,3.012,1990,3.012,2006,2.82,2007,3.012,2032,2.82,2134,2.035,2173,1.893,2175,1.961,2336,2.523,2359,2.66,2489,2.82,2524,2.404,2563,3.518,2852,5.844,2853,3.252,2854,4.062,2855,4.062,2856,4.062,2857,3.252,2858,4.534,2859,3.252,2860,3.252,2861,3.252,2862,3.252,2863,3.252,2864,3.252,2865,3.252,2866,3.252,2867,3.252,2868,3.252,2869,3.252,2870,4.534,2871,2.82,2872,3.252,2873,3.252,2874,3.252,2875,3.252,2876,3.252,2877,3.252,2878,3.252,2879,3.252,2880,3.252,2881,3.252,2882,3.012,2883,2.82,2884,3.252,2885,3.252,2886,3.252,2887,3.012,2888,3.252,2889,3.252,2890,3.252,2891,3.252,2892,3.252,2893,3.252,2894,5.219,2895,3.252,2896,4.534,2897,5.646,2898,3.252,2899,3.252,2900,3.252,2901,3.252,2902,3.252,2903,3.252,2904,3.252,2905,3.252,2906,3.252,2907,3.252,2908,3.252,2909,3.252,2910,3.252,2911,3.252,2912,4.534,2913,3.252,2914,3.252,2915,3.252,2916,3.252,2917,3.252,2918,3.252,2919,3.252,2920,3.252,2921,3.252,2922,3.252,2923,4.199,2924,4.534,2925,3.252,2926,3.252,2927,4.534,2928,4.534,2929,4.534,2930,4.534,2931,3.252,2932,5.844,2933,5.581,2934,5.219,2935,3.931,2936,3.252,2937,3.252,2938,3.252,2939,3.252,2940,5.229,2941,3.252,2942,3.252,2943,3.252,2944,3.252,2945,3.252,2946,3.252,2947,3.252,2948,3.252,2949,3.252,2950,3.252,2951,3.252,2952,3.252,2953,3.252,2954,3.252,2955,3.252,2956,3.252,2957,3.252,2958,3.252,2959,3.012,2960,3.252,2961,3.252,2962,3.252,2963,4.534,2964,3.252,2965,3.252,2966,3.252,2967,3.252,2968,3.012,2969,3.012,2970,3.252,2971,3.252,2972,3.252,2973,3.252,2974,3.252,2975,3.252,2976,3.252,2977,3.252,2978,3.252,2979,3.252,2980,3.252,2981,3.252,2982,3.252,2983,3.252,2984,4.834,2985,3.252,2986,3.012,2987,3.252,2988,3.252,2989,3.012,2990,4.534,2991,4.534,2992,5.938,2993,5.219,2994,4.534,2995,3.252,2996,3.252,2997,3.252,2998,3.252,2999,4.534,3000,2.82,3001,3.252,3002,3.012,3003,3.012,3004,3.252,3005,3.252,3006,3.252,3007,3.252,3008,5.646,3009,4.534,3010,3.252,3011,3.252,3012,3.252,3013,3.252,3014,3.252,3015,3.252,3016,4.534,3017,4.534,3018,3.252,3019,3.252,3020,3.252,3021,3.252,3022,3.252,3023,3.252,3024,3.252,3025,3.252,3026,3.252,3027,4.534,3028,3.252,3029,3.252,3030,4.534,3031,4.534,3032,3.252,3033,3.252,3034,3.252,3035,3.252,3036,3.252,3037,3.252,3038,3.252,3039,3.252,3040,3.252,3041,3.252,3042,3.252,3043,5.646,3044,3.252,3045,3.252,3046,3.252,3047,3.252,3048,3.252,3049,3.252]],["title/components/RecordMetadataRetrieverComponent.html",[114,0.121,309,0.896]],["body/components/RecordMetadataRetrieverComponent.html",[3,0.153,4,0.129,5,0.071,8,1.057,10,0.469,11,0.526,17,1.529,22,0.63,24,1.048,36,0.579,38,0.757,39,0.01,40,0.527,41,0.471,42,0.807,44,0.646,45,0.881,48,0.79,50,1.644,52,0.576,57,0.914,58,0.732,60,0.782,79,0.384,81,0.337,96,0.228,97,0.12,105,0.396,111,0.005,112,0.007,113,0.005,114,0.205,115,0.953,116,1.234,117,1.031,118,1.335,121,1.843,122,1.517,123,1.672,124,1.004,126,0.77,127,1.383,132,1.41,133,1.519,134,1.791,135,1.621,136,1.621,139,1.519,140,1.519,141,1.519,142,1.579,143,1.707,144,1.707,145,1.406,146,1.406,147,1.213,148,1.443,149,1.423,150,1.268,151,1.085,152,1.268,153,1.143,154,0.881,155,1.268,156,1.023,157,1.268,158,1.064,159,0.77,160,1.268,161,1.268,166,1.143,167,1.519,168,1.14,169,1.173,170,1.35,171,1.171,172,1.143,173,1.143,174,1.143,175,1.173,176,1.481,177,1.004,178,1.058,179,1.173,180,1.114,181,1.058,182,1.173,183,1.085,184,1.173,185,1.004,186,0.978,187,0.576,188,0.649,189,0.649,190,1.173,191,1.114,192,1.085,193,1.143,194,1.519,195,1.004,198,1.173,199,1.143,200,1.085,201,1.173,202,1.173,203,1.058,204,1.173,205,1.869,206,0.978,209,3.171,210,2.791,214,1.814,216,1.814,220,2.93,238,0.728,239,1.335,240,1.202,241,1.031,242,1.095,243,1.031,244,1.755,245,0.904,246,0.978,247,0.978,248,1.004,249,1.539,250,0.953,251,1.031,252,1.031,253,0.904,254,1.031,255,0.904,256,0.904,257,0.978,258,1.614,259,1.37,260,0.978,261,1.031,262,0.978,263,1.181,264,1.213,265,0.904,266,0.953,267,1.031,268,0.953,269,1.3,270,1.64,271,0.978,272,1.37,273,0.904,274,1.031,275,0.953,276,0.953,277,1.031,278,0.904,279,0.978,280,0.904,281,1.031,282,0.904,283,1.004,284,1.031,285,0.953,286,0.953,287,1.031,288,0.953,289,1.37,290,1.031,291,0.978,292,1.031,293,0.953,294,1.031,295,0.953,296,1.004,297,1.213,298,1.37,299,0.904,300,0.953,301,1.37,302,0.953,303,1.031,304,1.37,305,0.953,306,1.267,307,1.031,308,0.953,309,1.517,310,0.978,311,1.031,312,0.953,313,0.904,314,1.031,315,0.953,316,1.031,317,0.953,318,1.031,319,0.928,320,1.557,321,0.953,322,1.031,323,0.953,324,1.37,325,0.904,326,1.37,327,0.978,328,1.031,329,0.904,330,0.928,331,0.904,332,1.031,333,0.953,334,1.031,335,0.904,336,1.031,337,0.904,338,0.978,339,0.978,340,0.904,341,1.031,342,0.953,343,0.813,344,1.031,345,0.953,346,0.904,347,1.031,348,0.978,349,1.004,350,1.031,351,0.953,352,0.928,353,1.031,354,0.978,355,0.708,356,1.031,357,0.904,358,0.978,359,1.031,360,0.953,361,1.031,362,0.978,363,1.461,364,0.953,365,1.031,366,0.978,367,1.031,368,1.031,394,2.791,578,1.869,616,2.485,744,2.791,747,2.93,2710,4.15,3050,6.27,3051,4.717,3052,4.717,3053,4.717,3054,4.717,3055,4.717,3056,4.717,3057,4.717]],["title/modules/RecordSearchModule.html",[916,1.478,3058,3.289]],["body/modules/RecordSearchModule.html",[3,0.205,4,0.173,5,0.095,39,0.01,79,0.451,81,0.453,82,1.999,96,0.205,97,0.108,111,0.007,112,0.008,113,0.007,238,0.979,264,1.391,310,1.883,312,1.769,397,1.034,399,1.385,631,2.591,916,2.112,918,2.855,919,2.762,920,3.897,921,3.298,922,3.521,923,3.061,928,3.901,929,3.521,930,2.855,931,2.762,933,3.402,934,3.785,935,3.785,936,2.762,937,3.785,938,3.933,939,3.933,944,3.3,1149,5.013,1150,5.602,1151,5.602,1152,5.602,3058,6.643,3059,5.577,3060,5.577,3061,6.34,3062,6.34,3063,5.577,3064,6.34]],["title/classes/RecordSearchParams.html",[97,0.075,2923,3.289]],["body/classes/RecordSearchParams.html",[0,1.451,3,0.123,4,0.104,5,0.057,8,0.569,9,2.351,10,0.237,11,0.453,12,2.344,17,2.343,18,2.554,19,2.415,22,0.543,32,1.656,36,0.558,38,0.831,39,0.01,40,0.516,41,0.453,42,0.831,44,0.696,48,0.764,52,0.917,58,0.781,60,0.859,79,0.411,80,1.047,81,0.271,82,1.196,84,1.832,88,1.57,90,1.832,94,0.522,95,0.507,96,0.222,97,0.123,98,1.9,99,1.708,102,1.768,105,0.75,107,3.189,108,4.471,109,4.113,110,4.29,111,0.004,112,0.006,113,0.004,127,1.28,132,0.88,147,1.332,149,0.767,158,0.89,159,0.619,187,0.463,188,0.522,189,0.522,206,1.119,209,1.708,221,2.138,226,0.981,240,0.727,242,0.787,343,0.654,387,1.196,398,0.968,405,1.375,420,1.416,436,1.423,461,0.968,503,1.901,504,1.901,516,1.229,528,1.104,579,1.02,625,1.229,671,1.9,672,2.145,677,2.812,722,2.245,744,4.446,756,2.812,827,2.633,828,2.633,829,2.356,862,1.264,869,5.402,911,2.633,958,1.708,965,5.571,973,4.657,974,3.037,984,1.957,988,2.245,1019,1.6,1024,4.994,1042,2.356,1043,3.352,1134,1.652,1535,4.001,1545,2.245,1761,2.356,1818,2.812,1893,2.484,1908,3.193,1948,2.245,1977,2.812,1990,2.812,2006,2.633,2007,2.812,2032,2.633,2134,1.9,2173,1.768,2175,1.832,2336,2.356,2359,2.484,2489,2.633,2524,2.245,2563,3.352,2852,5.571,2853,3.037,2857,3.037,2858,4.32,2859,3.037,2860,3.037,2861,3.037,2862,3.037,2863,3.037,2864,3.037,2865,3.037,2866,3.037,2867,3.037,2868,3.037,2869,3.037,2870,4.32,2871,2.633,2872,3.037,2873,3.037,2874,3.037,2875,3.037,2876,3.037,2877,3.037,2878,3.037,2879,3.037,2880,3.037,2881,3.037,2882,2.812,2883,2.633,2884,3.037,2885,3.037,2886,3.037,2887,2.812,2888,3.037,2889,3.037,2890,3.037,2891,3.037,2892,3.037,2893,3.037,2894,5.029,2895,3.037,2896,4.32,2897,5.478,2898,3.037,2899,3.037,2900,3.037,2901,3.037,2902,3.037,2903,3.037,2904,3.037,2905,3.037,2906,3.037,2907,3.037,2908,3.037,2909,3.037,2910,3.037,2911,3.037,2912,4.32,2913,3.037,2914,3.037,2915,3.037,2916,3.037,2917,3.037,2918,3.037,2919,3.037,2920,3.037,2921,3.037,2922,3.037,2923,4.657,2924,4.32,2925,3.037,2926,3.037,2927,4.32,2928,4.32,2929,4.32,2930,4.32,2931,3.037,2932,5.858,2933,5.832,2934,5.029,2935,3.746,2936,3.037,2937,3.037,2938,3.037,2939,3.037,2940,5.073,2941,3.037,2942,3.037,2943,3.037,2944,3.037,2945,3.037,2946,3.037,2947,3.037,2948,3.037,2949,3.037,2950,3.037,2951,3.037,2952,3.037,2953,3.037,2954,3.037,2955,3.037,2956,3.037,2957,3.037,2958,3.037,2959,2.812,2960,3.037,2961,3.037,2962,3.037,2963,4.32,2964,3.037,2965,3.037,2966,3.037,2967,3.037,2968,2.812,2969,2.812,2970,3.037,2971,3.037,2972,3.037,2973,3.037,2974,3.037,2975,3.037,2976,3.037,2977,3.037,2978,3.037,2979,3.037,2980,3.037,2981,3.037,2982,3.037,2983,5.029,2984,5.36,2985,4.32,2986,2.812,2987,3.037,2988,3.037,2989,5.073,2990,4.32,2991,4.32,2992,5.788,2993,5.029,2994,4.32,2995,4.32,2996,3.037,2997,3.037,2998,4.32,2999,4.32,3000,2.633,3001,3.037,3002,2.812,3003,2.812,3004,3.037,3005,3.037,3006,3.037,3007,4.32,3008,5.478,3009,4.32,3010,3.037,3011,3.037,3012,3.037,3013,3.037,3014,5.478,3015,4.32,3016,4.32,3017,4.32,3018,3.037,3019,3.037,3020,3.037,3021,3.037,3022,3.037,3023,3.037,3024,4.32,3025,3.037,3026,3.037,3027,4.32,3028,3.037,3029,3.037,3030,4.32,3031,4.32,3032,3.037,3033,3.037,3034,3.037,3035,3.037,3036,3.037,3037,3.037,3038,3.037,3039,5.478,3040,3.037,3041,3.037,3042,5.478,3043,5.478,3044,3.037,3045,4.32,3046,3.037,3047,3.037,3048,3.037,3049,3.037,3065,5.397,3066,5.397,3067,5.397,3068,5.397,3069,5.397,3070,5.397,3071,5.397,3072,3.793,3073,3.793,3074,3.793,3075,3.793,3076,3.793,3077,3.793,3078,3.793,3079,3.793,3080,3.793,3081,3.793,3082,3.793,3083,3.793,3084,3.793,3085,3.793]],["title/classes/RecordSearchRefiner.html",[97,0.075,2933,3.08]],["body/classes/RecordSearchRefiner.html",[0,1.496,3,0.128,4,0.108,5,0.06,8,0.595,9,2.424,10,0.248,11,0.467,12,2.39,17,2.261,18,2.604,19,2.473,22,0.559,32,1.708,36,0.532,38,0.598,39,0.01,40,0.489,41,0.456,42,0.598,44,0.692,48,0.371,52,0.484,58,0.844,60,0.869,79,0.415,80,1.094,81,0.283,82,1.249,84,1.913,88,1.619,90,1.913,94,0.545,95,0.53,96,0.226,97,0.125,98,1.984,99,1.784,102,1.846,105,0.753,107,3.251,108,4.509,109,4.212,110,4.315,111,0.004,112,0.006,113,0.004,127,1.301,132,0.908,147,1.349,149,0.8,158,0.912,159,0.646,187,0.484,188,0.545,189,0.545,206,1.154,209,1.784,221,2.205,226,1.012,240,0.759,242,0.812,343,0.683,387,1.249,398,1.011,405,1.436,420,1.479,436,1.437,461,1.011,503,1.961,504,1.961,516,1.284,528,1.153,579,1.065,625,1.284,671,1.984,672,2.24,677,2.937,722,2.344,744,4.509,756,2.937,827,2.75,828,2.75,829,2.461,862,1.32,869,5.448,911,2.75,958,1.784,965,5.172,973,2.937,984,2.018,988,2.344,1019,2.713,1024,5.044,1042,2.461,1043,3.457,1134,1.726,1535,2.937,1545,2.344,1761,2.461,1893,2.594,1908,3.293,1948,2.344,1977,2.937,1990,2.937,2006,2.75,2007,2.937,2032,2.75,2134,1.984,2173,1.846,2175,1.913,2336,2.461,2359,2.594,2489,2.75,2524,2.344,2563,3.457,2852,5.65,2853,3.171,2857,3.171,2858,4.455,2859,3.171,2860,3.171,2861,3.171,2862,3.171,2863,3.171,2864,3.171,2865,3.171,2866,3.171,2867,3.171,2868,3.171,2869,3.171,2870,4.455,2871,2.75,2872,3.171,2873,3.171,2874,3.171,2875,3.171,2876,3.171,2877,3.171,2878,3.171,2879,3.171,2880,3.171,2881,3.171,2882,2.937,2883,2.75,2884,3.171,2885,3.171,2886,3.171,2887,2.937,2888,3.171,2889,3.171,2890,3.171,2891,3.171,2892,3.171,2893,3.171,2894,5.149,2895,3.171,2896,4.455,2897,5.585,2898,3.171,2899,3.171,2900,3.171,2901,3.171,2902,3.171,2903,3.171,2904,3.171,2905,3.171,2906,3.171,2907,3.171,2908,3.171,2909,3.171,2910,3.171,2911,3.171,2912,4.455,2913,3.171,2914,3.171,2915,3.171,2916,3.171,2917,3.171,2918,3.171,2919,3.171,2920,3.171,2921,3.171,2922,3.171,2923,4.126,2924,4.455,2925,3.171,2926,3.171,2927,4.455,2928,4.455,2929,4.455,2930,4.455,2931,3.171,2932,5.803,2933,5.637,2934,5.149,2935,3.863,2936,3.171,2937,3.171,2938,3.171,2939,3.171,2940,5.172,2941,3.171,2942,3.171,2943,3.171,2944,3.171,2945,3.171,2946,3.171,2947,3.171,2948,3.171,2949,3.171,2950,3.171,2951,3.171,2952,3.171,2953,3.171,2954,3.171,2955,3.171,2956,3.171,2957,3.171,2958,3.171,2959,2.937,2960,3.171,2961,3.171,2962,3.171,2963,4.455,2964,3.171,2965,3.171,2966,3.171,2967,3.171,2968,4.769,2969,4.769,2970,5.149,2971,4.455,2972,3.171,2973,3.171,2974,3.171,2975,3.171,2976,3.171,2977,3.171,2978,3.171,2979,3.171,2980,3.171,2981,4.455,2982,3.171,2983,3.171,2984,4.769,2985,3.171,2986,2.937,2987,3.171,2988,3.171,2989,2.937,2990,4.455,2991,4.455,2992,5.883,2993,5.149,2994,4.455,2995,3.171,2996,3.171,2997,3.171,2998,3.171,2999,4.455,3000,2.75,3001,3.171,3002,2.937,3003,2.937,3004,3.171,3005,3.171,3006,3.171,3007,3.171,3008,5.585,3009,4.455,3010,3.171,3011,3.171,3012,3.171,3013,3.171,3014,3.171,3015,3.171,3016,4.455,3017,4.455,3018,3.171,3019,3.171,3020,3.171,3021,3.171,3022,3.171,3023,3.171,3024,3.171,3025,3.171,3026,3.171,3027,4.455,3028,3.171,3029,3.171,3030,4.455,3031,4.455,3032,3.171,3033,3.171,3034,3.171,3035,3.171,3036,3.171,3037,3.171,3038,3.171,3039,3.171,3040,3.171,3041,3.171,3042,3.171,3043,5.585,3044,3.171,3045,3.171,3046,3.171,3047,3.171,3048,3.171,3049,3.171,3086,5.565,3087,5.565,3088,3.485,3089,3.962,3090,3.962,3091,3.962,3092,3.962,3093,3.962,3094,3.962,3095,3.962]],["title/components/RecordSearchRefinerComponent.html",[114,0.121,312,0.896]],["body/components/RecordSearchRefinerComponent.html",[3,0.167,4,0.141,5,0.077,10,0.322,22,0.668,36,0.526,38,0.554,39,0.01,40,0.46,41,0.419,42,0.554,45,0.961,48,0.623,52,0.629,57,0.668,58,0.536,60,0.738,79,0.376,80,1.421,81,0.368,94,0.709,95,0.688,96,0.215,97,0.088,105,0.432,111,0.006,112,0.007,113,0.006,114,0.201,115,1.041,116,1.307,117,1.125,118,1.414,122,1.342,123,1.676,124,1.096,126,0.84,127,1.422,145,1.489,156,0.84,158,1.042,164,2.041,238,0.795,239,1.414,240,1.273,241,1.125,242,1.133,243,1.125,244,1.798,245,0.987,246,1.068,247,1.068,248,1.096,249,1.606,250,1.041,251,1.125,252,1.125,253,0.987,254,1.125,255,0.987,256,0.987,257,1.068,258,1.648,259,1.451,260,1.068,261,1.125,262,1.068,263,1.232,264,1.266,265,0.987,266,1.041,267,1.125,268,1.041,269,1.377,270,1.697,271,1.068,272,1.451,273,0.987,274,1.125,275,1.041,276,1.041,277,1.125,278,0.987,279,1.068,280,0.987,281,1.125,282,0.987,283,1.096,284,1.125,285,1.041,286,1.041,287,1.125,288,1.041,289,1.451,290,1.125,291,1.068,292,1.125,293,1.041,294,1.125,295,1.041,296,1.096,297,1.266,298,1.451,299,0.987,300,1.041,301,1.451,302,1.041,303,1.125,304,1.451,305,1.041,306,1.342,307,1.125,308,1.041,309,1.041,310,1.068,311,1.125,312,1.569,313,1.668,314,1.125,315,1.041,316,1.125,317,1.041,318,1.125,319,1.014,320,1.61,321,1.041,322,1.125,323,1.041,324,1.451,325,0.987,326,1.451,327,1.068,328,1.125,329,0.987,330,1.014,331,0.987,332,1.125,333,1.041,334,1.125,335,0.987,336,1.125,337,0.987,338,1.068,339,1.068,340,0.987,341,1.125,342,1.041,343,0.887,344,1.125,345,1.041,346,0.987,347,1.125,348,1.068,349,1.096,350,1.125,351,1.041,352,1.014,353,1.125,354,1.068,355,0.773,356,1.125,357,0.987,358,1.068,359,1.125,360,1.041,361,1.125,362,1.068,363,1.524,364,1.041,365,1.125,366,1.068,367,1.125,368,1.125,378,1.524,579,1.786,639,3.326,862,1.715,1238,4.125,1255,3.618,1257,3.457,1456,4.869,1527,3.199,1565,4.123,2142,4.123,2305,4.61,2768,4.923,2932,4.923,2933,5.102,2984,5.449,3096,8.229,3097,5.15,3098,6.641,3099,6.641,3100,6.216,3101,7.35,3102,7.35,3103,5.15,3104,5.15,3105,5.15,3106,5.15,3107,7.35,3108,5.15,3109,5.15,3110,5.15,3111,5.15,3112,5.15,3113,5.15,3114,5.15,3115,5.15,3116,6.641,3117,6.641,3118,5.842,3119,7.765,3120,6.641]],["title/components/RelatedObjectDataComponent.html",[114,0.121,315,0.896]],["body/components/RelatedObjectDataComponent.html",[3,0.13,4,0.109,5,0.06,8,0.971,10,0.438,11,0.471,22,0.564,24,1.007,32,1.229,36,0.572,38,0.793,39,0.01,40,0.521,41,0.465,42,0.822,44,0.632,45,0.747,48,0.773,50,1.611,52,0.489,57,0.839,58,0.673,60,0.719,79,0.422,80,1.105,81,0.286,94,0.551,95,0.535,96,0.21,97,0.11,105,0.659,111,0.004,112,0.006,113,0.004,114,0.214,115,0.809,116,1.103,117,0.875,118,1.193,121,1.811,122,1.307,123,1.662,124,0.852,126,0.915,127,1.145,132,1.4,133,1.359,134,1.75,135,1.489,136,1.489,139,1.359,140,1.359,141,1.359,142,1.451,143,1.568,144,1.568,145,1.257,146,1.257,147,1.115,148,1.29,149,1.307,150,1.077,151,1.29,152,1.077,153,0.97,154,1.047,155,1.077,156,0.915,157,1.077,158,1.113,159,0.915,160,1.077,161,1.077,166,0.97,167,1.359,168,1.019,169,0.996,170,1.24,171,1.208,172,0.97,173,0.97,174,0.97,175,0.996,176,1.324,177,0.852,178,0.898,179,0.996,180,0.945,181,0.898,182,0.996,183,0.921,184,0.996,185,0.852,186,0.83,187,0.685,188,0.772,189,0.772,190,0.996,191,0.945,192,0.921,193,0.97,194,1.359,195,0.852,198,0.996,199,0.97,200,1.489,201,0.996,202,0.996,203,0.898,204,0.996,205,1.586,206,0.83,209,2.913,210,2.369,214,1.539,216,1.539,220,2.487,221,2.923,222,2.779,224,2.968,225,2.264,228,2.622,238,0.618,239,1.193,240,1.075,241,0.875,242,1.145,243,0.875,244,1.671,245,0.768,246,0.83,247,0.83,248,0.852,249,1.413,250,0.809,251,0.875,252,0.875,253,0.768,254,0.875,255,0.768,256,0.768,257,0.83,258,1.602,259,1.225,260,0.83,261,0.875,262,0.83,263,1.085,264,1.115,265,0.768,266,0.809,267,0.875,268,0.809,269,1.163,270,1.531,271,0.83,272,1.225,273,0.768,274,0.875,275,0.809,276,0.809,277,0.875,278,0.768,279,0.83,280,0.768,281,0.875,282,0.768,283,0.852,284,0.875,285,0.809,286,0.809,287,0.875,288,0.809,289,1.225,290,0.875,291,0.83,292,0.875,293,0.809,294,0.875,295,0.809,296,0.852,297,1.115,298,1.225,299,0.768,300,0.809,301,1.225,302,0.809,303,0.875,304,1.225,305,0.809,306,1.133,307,0.875,308,0.809,309,0.809,310,0.83,311,0.875,312,0.809,313,0.768,314,0.875,315,1.416,316,0.875,317,0.809,318,0.875,319,0.788,320,1.454,321,0.809,322,0.875,323,0.809,324,1.225,325,0.768,326,1.225,327,0.83,328,0.875,329,0.768,330,0.788,331,0.768,332,0.875,333,0.809,334,0.875,335,0.768,336,0.875,337,0.768,338,0.83,339,0.83,340,0.768,341,0.875,342,0.809,343,0.69,344,0.875,345,0.809,346,0.768,347,0.875,348,0.83,349,0.852,350,0.875,351,0.809,352,0.788,353,0.875,354,0.83,355,0.601,356,0.875,357,0.768,358,0.83,359,0.875,360,0.809,361,0.875,362,0.83,363,1.342,364,0.809,365,0.875,366,0.83,367,0.875,368,0.875,369,1.698,378,0.83,381,0.97,397,0.653,398,1.022,480,1.411,482,1.297,522,0.653,579,1.077,631,1.636,639,2.808,670,2.291,671,2.006,672,2.264,698,2.612,747,2.487,862,1.334,936,1.744,958,3.322,984,2.033,1136,2.487,1220,3.367,1313,3.038,1328,3.038,1446,2.369,1545,2.369,1690,2.487,1701,2.622,1712,2.622,1763,2.622,1786,2.779,1801,2.487,1973,4.932,2117,2.487,2363,3.17,2528,2.779,2539,4.932,2540,3.522,2541,3.205,2542,3.522,2543,3.522,2544,3.522,2546,3.522,2620,2.968,2621,2.968,2622,4.932,2623,3.205,2624,3.205,2625,3.205,2626,2.779,2631,4.932,2632,3.205,2633,3.522,2634,3.205,2635,3.205,2640,2.968,2714,4.156,2715,3.891,2716,2.918,3121,4.004,3122,5.606,3123,7.008,3124,5.606,3125,4.004,3126,7.008,3127,5.606,3128,5.606,3129,4.004,3130,4.004,3131,5.691,3132,4.004,3133,4.004,3134,4.004,3135,3.205,3136,4.004,3137,4.004,3138,4.004,3139,4.004,3140,4.004,3141,5.606,3142,4.004,3143,5.179,3144,3.522,3145,4.004,3146,4.004,3147,4.004,3148,4.004,3149,4.004,3150,5.606,3151,4.004,3152,4.004,3153,5.606,3154,5.606,3155,5.606,3156,5.606,3157,7.008,3158,7.008,3159,5.606,3160,6.166,3161,5.606,3162,5.606,3163,5.606,3164,5.606]],["title/components/RelatedObjectSelectorComponent.html",[114,0.121,317,0.896]],["body/components/RelatedObjectSelectorComponent.html",[3,0.131,4,0.111,5,0.061,8,0.977,10,0.441,11,0.475,17,1.314,22,0.569,24,1.01,36,0.571,38,0.7,39,0.01,40,0.523,41,0.461,42,0.758,44,0.612,45,0.757,48,0.775,50,1.613,52,0.495,57,0.845,58,0.677,60,0.783,79,0.403,80,1.119,81,0.29,88,1.18,89,4.046,90,3.145,91,3.926,92,2.111,94,0.558,95,0.542,96,0.211,97,0.111,105,0.622,111,0.005,112,0.006,113,0.005,114,0.21,115,0.819,116,1.113,117,0.886,118,1.204,121,1.814,122,1.143,123,1.663,124,0.863,126,0.661,127,1.247,132,1.395,133,1.371,134,1.756,135,1.499,136,1.499,139,1.371,140,1.371,141,1.371,142,1.662,143,1.578,144,1.578,145,1.268,146,1.268,147,1.122,148,1.301,149,1.316,150,1.09,151,1.301,152,1.09,153,0.983,154,1.056,155,1.09,156,0.923,157,1.09,158,1.139,159,1.063,160,1.09,161,1.09,164,1.607,166,0.983,167,1.371,168,1.028,169,1.008,170,1.249,171,1.216,172,0.983,173,0.983,174,0.983,175,1.008,176,1.336,177,0.863,178,0.909,179,1.008,180,0.957,181,0.909,182,1.008,183,0.933,184,1.008,185,0.863,186,0.841,187,0.691,188,0.779,189,0.779,190,1.008,191,0.957,192,0.933,193,0.983,194,1.371,195,0.863,198,1.008,199,0.983,200,1.499,201,1.008,202,1.008,203,0.909,204,1.008,205,1.607,206,0.841,214,1.559,216,1.559,221,2.937,222,2.814,223,3.006,224,3.006,225,2.293,228,2.655,238,0.626,239,1.204,240,1.084,241,0.886,242,1.081,243,0.886,244,1.677,245,0.777,246,0.841,247,0.841,248,0.863,249,1.423,250,0.819,251,0.886,252,0.886,253,0.777,254,0.886,255,0.777,256,0.777,257,0.841,258,1.607,259,1.236,260,0.841,261,0.886,262,0.841,263,1.092,264,1.122,265,0.777,266,0.819,267,0.886,268,0.819,269,1.173,270,1.54,271,0.841,272,1.236,273,0.777,274,0.886,275,0.819,276,0.819,277,0.886,278,0.777,279,0.841,280,0.777,281,0.886,282,0.777,283,0.863,284,0.886,285,0.819,286,0.819,287,0.886,288,0.819,289,1.236,290,0.886,291,0.841,292,0.886,293,0.819,294,0.886,295,0.819,296,0.863,297,1.277,298,1.236,299,0.777,300,0.819,301,1.236,302,0.819,303,0.886,304,1.236,305,0.819,306,1.143,307,0.886,308,0.819,309,0.819,310,0.841,311,0.886,312,0.819,313,1.249,314,0.886,315,0.819,316,0.886,317,1.424,318,0.886,319,0.798,320,1.462,321,0.819,322,0.886,323,0.819,324,1.236,325,0.777,326,1.236,327,0.841,328,0.886,329,0.777,330,0.798,331,0.777,332,0.886,333,0.819,334,0.886,335,0.777,336,0.886,337,0.777,338,0.841,339,0.841,340,0.777,341,0.886,342,0.819,343,0.699,344,0.886,345,0.819,346,0.777,347,0.886,348,0.841,349,1.387,350,0.886,351,0.819,352,0.798,353,0.886,354,0.841,355,0.608,356,0.886,357,0.777,358,0.841,359,0.886,360,0.819,361,0.886,362,0.841,363,1.351,364,0.819,365,0.886,366,0.841,367,0.886,368,0.886,369,1.499,371,1.753,378,1.173,381,0.983,397,0.661,436,0.718,522,0.661,579,1.09,584,1.884,639,2.833,670,2.311,698,1.889,862,2.17,930,2.547,947,4.265,977,3.246,1019,2.385,1020,5.73,1220,2.944,1255,3.284,1313,3.065,1328,3.065,1430,2.399,1446,2.399,1456,4.542,1690,2.518,1701,2.655,1712,3.704,2187,3.567,2188,3.567,2310,3.567,2363,3.198,2528,2.814,2620,3.006,2621,3.006,2625,3.246,2640,3.006,2714,4.193,2715,3.926,2716,2.944,2986,3.006,3131,3.567,3165,4.054,3166,5.655,3167,5.655,3168,7.047,3169,6.513,3170,4.054,3171,4.054,3172,4.054,3173,4.054,3174,4.054,3175,4.054,3176,4.054,3177,4.054,3178,4.054,3179,4.054,3180,4.054,3181,4.054,3182,4.054,3183,4.054,3184,4.054,3185,4.054,3186,4.054,3187,5.655,3188,5.655,3189,5.655,3190,7.047,3191,5.655,3192,4.054,3193,4.054,3194,4.054,3195,4.054,3196,4.054,3197,4.054,3198,4.054,3199,4.054,3200,4.054,3201,4.054,3202,4.054,3203,4.054,3204,4.054,3205,4.054,3206,4.054,3207,4.054,3208,4.054,3209,4.054,3210,7.047,3211,4.975,3212,5.655]],["title/classes/RepeatableComponent.html",[97,0.075,1421,2.404]],["body/classes/RepeatableComponent.html",[3,0.116,4,0.097,5,0.054,8,1.139,10,0.38,11,0.433,13,0.779,22,0.519,24,1.047,35,2.178,36,0.549,38,0.759,39,0.01,40,0.46,41,0.434,42,0.791,44,0.645,45,0.964,48,0.772,50,1.502,52,0.741,57,0.67,58,0.734,60,0.905,79,0.397,81,0.369,94,0.491,95,0.477,96,0.238,97,0.129,105,0.703,111,0.004,112,0.006,113,0.004,114,0.182,121,1.724,123,0.939,125,2.201,126,0.842,132,1.344,133,1.251,134,1.816,135,1.397,136,1.397,139,1.251,140,1.251,141,1.251,142,1.492,143,1.839,144,1.471,146,1.492,147,0.615,156,0.582,158,1.043,159,1.268,164,2.046,166,0.864,167,1.251,168,1.413,169,0.887,170,1.164,171,1.133,172,0.864,173,0.864,174,0.864,175,0.887,176,1.219,177,0.759,178,0.8,179,0.887,180,0.842,181,0.8,182,0.887,183,1.188,184,0.887,185,0.759,186,1.071,187,0.631,188,0.711,189,0.711,190,0.887,191,0.842,192,0.821,193,0.864,194,1.251,195,0.759,198,0.887,199,0.864,200,0.821,201,0.887,202,0.887,203,0.8,204,0.887,205,1.414,208,1.125,214,2.333,216,2.333,221,1.414,226,1.338,242,0.52,297,1.146,319,0.702,320,1.259,325,0.99,369,1.624,371,1.284,378,0.74,381,1.251,384,1.293,387,2.098,396,1.222,397,0.582,407,1.257,416,1.188,421,1.332,422,1.332,423,1.222,436,1.483,440,1.72,446,1.095,472,2.279,557,0.985,579,2.041,585,1.332,617,1.011,623,1.188,625,1.156,670,1.458,862,2.452,991,2.791,1084,2.644,1128,2.645,1134,2.644,1136,2.216,1137,3.762,1155,2.336,1194,2.216,1233,2.856,1241,1.933,1245,4.463,1246,3.894,1247,1.933,1248,3.463,1249,3.332,1250,3.989,1251,3.207,1252,2.587,1255,2.406,1257,1.857,1258,3.207,1259,2.476,1260,4.134,1261,2.645,1262,4.623,1263,2.856,1264,2.856,1265,4.134,1266,2.476,1267,2.856,1268,2.856,1269,2.856,1270,2.856,1271,2.856,1272,2.856,1273,2.856,1274,2.856,1275,2.856,1276,2.856,1277,2.856,1278,2.856,1279,2.856,1280,2.856,1281,2.856,1282,2.856,1283,2.856,1284,2.856,1285,3.584,1286,2.856,1287,4.859,1288,2.645,1289,2.856,1290,2.856,1291,2.856,1292,2.856,1293,2.856,1294,4.134,1295,4.134,1296,3.828,1297,2.856,1298,4.134,1299,2.856,1300,2.856,1301,2.856,1302,2.856,1303,2.856,1304,2.856,1305,4.134,1306,4.932,1307,2.856,1308,2.856,1309,2.856,1310,2.856,1311,2.856,1312,2.856,1313,3.989,1314,3.381,1315,4.134,1316,3.381,1317,4.859,1318,4.134,1319,2.856,1320,2.856,1321,2.856,1322,2.856,1323,2.856,1324,5.325,1325,4.134,1326,4.859,1327,4.859,1328,3.289,1329,2.856,1330,2.856,1331,4.134,1332,4.134,1333,4.618,1334,2.856,1335,2.856,1336,2.856,1337,4.134,1338,2.856,1339,2.856,1340,2.856,1341,2.856,1342,5.325,1343,2.856,1344,2.856,1345,2.856,1346,4.134,1347,2.856,1348,2.856,1349,2.856,1350,4.134,1351,2.856,1352,2.856,1353,2.856,1354,2.856,1355,2.856,1356,2.856,1357,2.856,1358,2.92,1359,2.856,1360,2.856,1361,2.856,1362,2.856,1363,2.856,1364,2.856,1365,2.856,1366,2.856,1367,2.856,1368,2.856,1369,2.856,1370,4.134,1371,3.207,1372,2.856,1373,2.856,1374,2.856,1375,2.856,1376,2.856,1377,2.856,1378,2.856,1379,2.856,1380,2.856,1381,2.476,1382,2.856,1383,2.856,1384,2.856,1385,5.325,1386,4.134,1387,4.134,1388,2.856,1389,2.856,1390,2.856,1391,2.856,1392,4.859,1393,2.856,1394,2.856,1395,2.336,1396,2.476,1397,2.856,1398,4.134,1399,4.859,1400,4.134,1401,4.134,1402,2.856,1403,2.856,1404,2.856,1405,2.856,1406,2.476,1407,4.134,1408,2.856,1409,2.856,1410,2.856,1411,2.476,1412,2.856,1413,2.856,1414,2.856,1415,2.856,1416,2.856,1417,2.856,1418,2.856,1419,2.336,1420,4.859,1421,3.605,1422,3.591,1423,3.207,1424,3.591,1425,3.207,1426,4.859,1427,2.856,1428,2.856,1429,4.859,1430,2.111,1431,2.336,1432,2.856,1433,2.856,1434,2.017,1435,2.017,1436,2.017,1437,2.92,1438,4.134,1439,2.856,1440,2.856,1441,2.856,1442,2.856,1443,2.856,1444,2.856,1445,2.856,1446,2.111,1447,4.134,1448,4.134,1449,2.856,1450,2.856,1451,5.325,1452,5.325,1453,5.325,1454,4.859,1455,4.134,1456,3.591,1457,2.856,1458,2.856,1459,4.859,1460,4.134,1461,2.856,1462,2.856,1463,2.856,1464,2.856,1465,2.856,1466,2.856,1467,2.856,1468,2.856,1469,2.856,1470,2.856,1471,2.856,1472,2.856,1473,4.134,1474,4.134,1475,2.856,1476,2.856,1477,2.856,1478,4.134,1479,2.856,1480,2.856,1481,2.856,1482,2.856,1483,2.856,1484,2.856,1485,2.856,1486,2.856,1487,2.856,1488,2.856,1489,2.856,1490,4.134,1491,5.892,1492,2.856,1493,2.856,1494,2.856,1495,2.856,1496,2.856,3213,3.828,3214,3.828,3215,3.567,3216,3.567,3217,3.567,3218,3.567]],["title/components/RepeatableGroupComponent.html",[114,0.121,321,0.896]],["body/components/RepeatableGroupComponent.html",[3,0.119,4,0.1,5,0.055,8,0.925,10,0.422,11,0.442,13,1.473,22,0.53,24,0.988,36,0.57,38,0.767,39,0.01,40,0.55,41,0.476,42,0.799,44,0.608,45,0.685,48,0.776,50,1.62,52,0.753,57,0.875,58,0.701,60,0.685,79,0.315,81,0.262,94,0.505,95,0.491,96,0.2,97,0.146,105,0.308,111,0.004,112,0.006,113,0.004,114,0.218,115,0.741,116,1.214,117,0.802,118,1.122,121,1.768,122,1.065,123,1.657,124,0.781,126,1.006,127,1.091,132,1.351,133,1.277,134,1.56,135,1.419,136,1.419,139,1.277,140,1.277,141,1.277,142,1.716,143,1.801,144,1.494,145,1.182,146,1.511,147,1.46,148,1.213,149,0.741,150,0.987,151,0.844,152,0.987,153,0.889,154,0.685,155,0.987,156,1.212,157,0.987,158,1.012,159,0.599,160,0.987,161,0.987,164,2.088,166,0.889,167,1.277,168,1.225,169,0.913,170,1.182,171,0.984,172,0.889,173,0.889,174,0.889,175,0.913,176,1.245,177,0.781,178,0.823,179,0.913,180,0.867,181,0.823,182,0.913,183,1.905,184,0.913,185,1.723,186,0.761,187,0.753,188,0.849,189,0.849,190,0.913,191,0.867,192,0.844,193,0.889,194,1.801,195,0.781,198,0.913,199,0.889,200,0.844,201,0.913,202,0.913,203,0.823,204,0.913,226,1.565,238,0.566,239,1.122,240,1.01,241,0.802,242,0.983,243,0.802,244,1.624,245,0.704,246,0.761,247,0.761,248,0.781,249,1.347,250,0.741,251,0.802,252,0.802,253,0.704,254,0.802,255,0.704,256,0.704,257,0.761,258,1.507,259,1.151,260,0.761,261,0.802,262,0.761,263,1.034,264,1.062,265,0.704,266,0.741,267,0.802,268,0.741,269,1.093,270,1.473,271,0.761,272,1.151,273,0.704,274,0.802,275,0.741,276,1.501,277,1.624,278,0.704,279,0.761,280,0.704,281,0.802,282,0.704,283,0.781,284,0.802,285,0.741,286,0.741,287,0.802,288,0.741,289,1.151,290,0.802,291,0.761,292,0.802,293,0.741,294,0.802,295,0.741,296,0.781,297,1.426,298,1.151,299,0.704,300,0.741,301,1.151,302,0.741,303,0.802,304,1.151,305,0.741,306,1.065,307,0.802,308,0.741,309,0.741,310,0.761,311,0.802,312,0.741,313,0.704,314,0.802,315,0.741,316,0.802,317,0.741,318,0.802,319,0.722,320,1.624,321,1.583,322,0.802,323,0.741,324,1.151,325,0.704,326,1.151,327,0.761,328,0.802,329,0.704,330,0.722,331,0.704,332,0.802,333,0.741,334,0.802,335,0.704,336,0.802,337,0.704,338,0.761,339,0.761,340,0.704,341,0.802,342,0.741,343,0.632,344,0.802,345,0.741,346,0.704,347,0.802,348,0.761,349,0.781,350,0.802,351,0.741,352,0.722,353,0.802,354,0.761,355,0.551,356,0.802,357,0.704,358,0.761,359,0.802,360,0.741,361,0.802,362,0.761,363,1.279,364,0.741,365,0.802,366,0.761,367,0.802,368,0.802,369,1.213,371,1.904,378,0.761,379,1.097,380,1.189,381,0.889,387,1.945,446,2.069,461,2.036,516,2.728,522,0.599,623,2.245,886,1.91,984,2.236,991,2.173,1019,2.601,1134,3.334,1220,4.348,1232,3.118,1237,1.989,1262,4.038,1266,3.658,1421,4.149,1422,2.171,1424,2.171,1434,3.487,1435,3.487,1436,3.487,1437,3.487,1863,4.414,1948,4.224,2024,3.228,2025,3.228,2026,3.228,2027,2.938,2028,2.938,2029,2.938,2030,2.721,2031,7.284,2032,5.747,2033,5.425,2034,5.223,2035,6.385,2036,5.425,2037,6.687,2038,7.348,2039,7.017,2040,7.017,2041,7.572,2042,6.385,2043,7.017,2044,5.425,2045,5.425,2046,4.937,2055,2.279,2056,4.636,3213,3.907,3214,3.907,3219,2.938,3220,2.938,3221,2.938,3222,3.669,3223,2.938]],["title/components/RepeatableTextfieldComponent.html",[114,0.121,323,0.896]],["body/components/RepeatableTextfieldComponent.html",[3,0.125,4,0.105,5,0.058,8,1.191,10,0.431,11,0.458,13,1.385,22,0.549,24,0.999,36,0.578,38,0.835,39,0.01,40,0.527,41,0.471,42,0.853,44,0.642,45,0.72,48,0.8,50,1.629,52,0.922,57,0.894,58,0.756,60,0.808,79,0.352,81,0.276,94,0.531,95,0.515,96,0.257,97,0.135,105,0.324,111,0.004,112,0.006,113,0.004,114,0.217,115,0.779,116,1.074,117,0.842,118,1.162,121,1.78,122,1.103,123,1.662,124,0.821,126,1.187,127,1.122,130,2.233,132,1.384,133,1.323,134,1.808,135,1.458,136,1.458,139,1.323,140,1.323,141,1.323,142,1.809,143,1.831,144,1.536,145,1.224,146,1.224,147,1.301,148,1.256,149,1.47,150,1.037,151,1.256,152,1.037,153,0.934,154,0.72,155,1.037,156,0.891,157,1.037,158,1.031,159,0.629,160,1.037,161,1.037,164,2.731,166,0.934,167,1.323,168,1.504,169,0.959,170,1.215,171,1.019,172,0.934,173,0.934,174,0.934,175,0.959,176,1.289,177,0.821,178,0.864,179,0.959,180,0.91,181,0.864,182,0.959,183,0.887,184,0.959,185,1.653,186,0.8,187,0.774,188,0.873,189,0.873,190,0.959,191,0.91,192,0.887,193,0.934,194,1.323,195,0.821,198,0.959,199,0.934,200,0.887,201,0.959,202,0.959,203,0.864,204,0.959,206,0.8,214,2.437,216,2.437,221,2.883,238,0.595,239,1.162,240,1.047,241,0.842,242,1.061,243,0.842,244,1.65,245,0.739,246,0.8,247,0.8,248,0.821,249,1.385,250,0.779,251,0.842,252,0.842,253,0.739,254,0.842,255,0.739,256,0.739,257,0.8,258,1.529,259,1.193,260,0.8,261,0.842,262,0.8,263,1.063,264,1.092,265,0.739,266,0.779,267,0.842,268,0.779,269,1.132,270,1.506,271,0.8,272,1.193,273,0.739,274,0.842,275,0.779,276,0.779,277,0.842,278,0.739,279,0.8,280,0.739,281,0.842,282,0.739,283,0.821,284,0.842,285,0.779,286,0.779,287,0.842,288,0.779,289,1.193,290,0.842,291,0.8,292,0.842,293,0.779,294,0.842,295,1.103,296,1.162,297,1.301,298,1.193,299,0.739,300,0.779,301,1.193,302,0.779,303,0.842,304,1.193,305,0.779,306,1.103,307,0.842,308,0.779,309,0.779,310,0.8,311,0.842,312,0.779,313,0.739,314,0.842,315,0.779,316,0.842,317,0.779,318,0.842,319,0.759,320,1.567,321,0.779,322,0.842,323,1.526,324,1.193,325,0.739,326,1.193,327,0.8,328,0.842,329,0.739,330,0.759,331,0.739,332,0.842,333,0.779,334,0.842,335,0.739,336,0.842,337,0.739,338,0.8,339,0.8,340,0.739,341,0.842,342,1.103,343,0.664,344,0.842,345,1.103,346,0.739,347,0.842,348,0.8,349,0.821,350,0.842,351,0.779,352,0.759,353,0.842,354,0.8,355,0.579,356,0.842,357,0.739,358,0.8,359,0.842,360,0.779,361,0.842,362,0.8,363,1.314,364,0.779,365,0.842,366,0.8,367,0.842,368,0.842,369,1.674,371,2.154,378,0.8,379,1.152,380,1.249,381,1.536,398,0.984,399,0.842,436,0.682,443,2.516,446,1.945,461,1.618,557,2.085,609,1.923,617,1.547,978,3.575,991,2.233,1232,4.078,1237,2.089,1262,2.524,1371,2.395,1421,4.209,1422,3.75,1423,2.395,1424,3.75,1425,2.395,1434,3.584,1435,3.584,1436,3.584,1437,3.584,1657,3.75,1658,2.395,2034,4.513,2055,2.395,2524,2.281,2557,2.858,2558,3.789,2559,2.858,2561,4.047,2563,2.395,2564,2.858,2565,5.6,2566,4.699,2567,2.858,2568,4.047,2569,4.047,2570,4.047,2571,4.047,2572,4.047,2573,3.789,2574,4.047,2575,4.047,2576,5.11,2577,2.858,2578,4.047,2579,4.047,2580,4.047,2581,2.676,2582,4.047,3213,5.11,3214,5.11,3219,3.086,3220,3.086,3221,3.086,3223,3.086,3224,3.855,3225,3.855,3226,3.855,3227,3.855]],["title/components/RepeatableVocabComponent.html",[114,0.121,325,0.851]],["body/components/RepeatableVocabComponent.html",[3,0.1,4,0.084,5,0.046,8,1.087,10,0.437,11,0.389,13,1.217,22,0.466,24,1.025,35,1.954,36,0.56,38,0.714,39,0.01,40,0.493,41,0.453,42,0.75,44,0.634,45,1.157,48,0.749,50,1.584,52,0.68,57,0.804,58,0.753,60,0.876,79,0.381,81,0.331,94,0.424,95,0.412,96,0.235,97,0.123,105,0.685,111,0.003,112,0.005,113,0.003,114,0.181,115,0.622,116,0.912,117,0.673,118,0.986,121,1.742,122,0.936,123,1.644,124,0.656,125,2.02,126,0.909,127,0.986,132,1.384,133,1.123,134,1.766,135,1.282,136,1.282,139,1.123,140,1.123,141,1.123,142,1.389,143,1.755,144,1.35,145,1.039,146,1.565,147,1.068,148,1.066,149,0.622,150,0.828,151,0.709,152,0.828,153,0.747,154,0.575,155,0.828,156,0.909,157,0.828,158,1.027,159,1.244,160,0.828,161,0.828,164,1.836,166,0.747,167,1.123,168,1.355,169,0.766,170,1.068,171,1.04,172,0.747,173,0.747,174,0.747,175,0.766,176,1.094,177,0.656,178,0.691,179,0.766,180,0.727,181,0.691,182,0.766,183,1.066,184,0.766,185,0.656,186,0.961,187,0.566,188,0.638,189,0.638,190,0.766,191,0.727,192,0.709,193,0.747,194,1.123,195,0.656,198,0.766,199,0.747,200,0.709,201,0.766,202,0.766,203,0.691,204,0.766,205,1.221,208,0.971,214,2.142,216,2.142,221,1.221,226,1.269,238,0.475,239,0.986,240,0.888,241,0.673,242,0.969,243,0.673,244,1.525,245,0.591,246,0.639,247,0.639,248,0.656,249,1.217,250,0.622,251,0.673,252,0.673,253,0.591,254,0.673,255,0.591,256,0.591,257,0.639,258,1.426,259,1.012,260,0.639,261,0.673,262,0.639,263,0.934,264,0.96,265,0.591,266,0.622,267,0.673,268,0.622,269,0.961,270,1.354,271,0.639,272,1.012,273,0.591,274,0.673,275,0.622,276,0.622,277,0.673,278,0.591,279,0.639,280,0.591,281,0.673,282,0.591,283,0.656,284,0.673,285,0.622,286,0.622,287,0.673,288,0.622,289,1.012,290,0.673,291,0.639,292,0.673,293,0.622,294,0.673,295,0.622,296,0.656,297,1.248,298,1.012,299,0.591,300,0.622,301,1.012,302,0.622,303,0.673,304,1.012,305,0.622,306,0.936,307,0.673,308,0.622,309,0.622,310,0.639,311,0.673,312,0.622,313,0.591,314,0.673,315,0.622,316,0.673,317,0.622,318,0.673,319,0.912,320,1.546,321,0.622,322,0.673,323,0.622,324,1.012,325,1.338,326,1.012,327,0.639,328,0.673,329,0.591,330,0.606,331,0.591,332,0.673,333,0.622,334,0.673,335,0.591,336,0.673,337,0.591,338,0.639,339,0.639,340,0.591,341,0.673,342,0.622,343,0.531,344,0.673,345,0.622,346,0.591,347,0.673,348,0.639,349,0.656,350,0.673,351,0.622,352,0.606,353,0.673,354,0.639,355,0.462,356,0.673,357,0.591,358,0.639,359,0.673,360,0.622,361,0.673,362,0.639,363,1.155,364,0.622,365,0.673,366,0.639,367,0.673,368,0.673,369,1.282,371,1.736,378,0.639,381,1.123,384,1.117,387,1.954,396,1.055,397,0.503,407,1.085,416,1.026,421,1.15,422,1.15,423,1.055,436,1.444,440,1.544,446,1.71,472,2.122,557,0.85,579,1.947,585,1.15,617,0.873,623,1.544,670,1.259,862,2.325,991,2.779,1084,2.426,1128,2.284,1134,2.426,1136,1.914,1137,3.504,1155,2.017,1194,1.914,1233,2.466,1241,1.67,1245,4.331,1246,3.733,1247,1.67,1248,3.225,1249,3.104,1250,3.783,1251,2.878,1252,2.321,1255,2.159,1257,1.604,1258,2.878,1259,2.138,1260,3.71,1261,2.284,1262,4.351,1263,2.466,1264,2.466,1265,3.71,1266,2.138,1267,2.466,1268,2.466,1269,2.466,1270,2.466,1271,2.466,1272,2.466,1273,2.466,1274,2.466,1275,2.466,1276,2.466,1277,2.466,1278,2.466,1279,2.466,1280,2.466,1281,2.466,1282,2.466,1283,2.466,1284,2.466,1285,3.217,1286,2.466,1287,4.459,1288,2.284,1289,2.466,1290,2.466,1291,2.466,1292,2.466,1293,2.466,1294,3.71,1295,3.71,1296,3.436,1297,2.466,1298,3.71,1299,2.466,1300,2.466,1301,2.466,1302,2.466,1303,2.466,1304,2.466,1305,3.71,1306,4.594,1307,2.466,1308,2.466,1309,2.466,1310,2.466,1311,2.466,1312,2.466,1313,3.783,1314,3.035,1315,3.71,1316,3.035,1317,4.459,1318,3.71,1319,2.466,1320,2.466,1321,2.466,1322,2.466,1323,2.466,1324,4.96,1325,3.71,1326,4.459,1327,4.459,1328,3.019,1329,2.466,1330,2.466,1331,3.71,1332,3.71,1333,4.301,1334,2.466,1335,2.466,1336,2.466,1337,3.71,1338,2.466,1339,2.466,1340,2.466,1341,2.466,1342,4.96,1343,2.466,1344,2.466,1345,2.466,1346,3.71,1347,2.466,1348,2.466,1349,2.466,1350,3.71,1351,2.466,1352,2.466,1353,2.466,1354,2.466,1355,2.466,1356,2.466,1357,2.466,1358,2.621,1359,2.466,1360,2.466,1361,2.466,1362,2.466,1363,2.466,1364,2.466,1365,2.466,1366,2.466,1367,2.466,1368,2.466,1369,2.466,1370,3.71,1371,2.878,1372,2.466,1373,2.466,1374,2.466,1375,2.466,1376,2.466,1377,2.466,1378,2.466,1379,2.466,1380,2.466,1381,2.138,1382,2.466,1383,2.466,1384,2.466,1385,4.96,1386,3.71,1387,3.71,1388,2.466,1389,2.466,1390,2.466,1391,2.466,1392,4.459,1393,2.466,1394,2.466,1395,2.017,1396,2.138,1397,2.466,1398,3.71,1399,4.459,1400,3.71,1401,3.71,1402,2.466,1403,2.466,1404,2.466,1405,2.466,1406,2.138,1407,3.71,1408,2.466,1409,2.466,1410,2.466,1411,2.138,1412,2.466,1413,2.466,1414,2.466,1415,2.466,1416,2.466,1417,2.466,1418,2.466,1419,2.017,1420,4.459,1421,4.039,1422,3.296,1423,2.878,1424,3.296,1425,2.878,1426,4.459,1427,2.466,1428,2.466,1429,4.96,1430,1.823,1431,2.017,1432,2.466,1433,2.466,1434,3.15,1435,3.15,1436,3.15,1437,3.504,1438,3.71,1439,2.466,1440,2.466,1441,2.466,1442,2.466,1443,2.466,1444,2.466,1445,2.466,1446,1.823,1447,3.71,1448,3.71,1449,2.466,1450,2.466,1451,4.96,1452,4.96,1453,4.96,1454,4.459,1455,3.71,1456,3.296,1457,2.466,1458,2.466,1459,4.459,1460,3.71,1461,2.466,1462,2.466,1463,2.466,1464,2.466,1465,2.466,1466,2.466,1467,2.466,1468,2.466,1469,2.466,1470,2.466,1471,2.466,1472,2.466,1473,3.71,1474,3.71,1475,2.466,1476,2.466,1477,2.466,1478,3.71,1479,2.466,1480,2.466,1481,2.466,1482,2.466,1483,2.466,1484,2.466,1485,2.466,1486,2.466,1487,2.466,1488,2.466,1489,2.466,1490,3.71,1491,5.588,1492,2.466,1493,2.466,1494,2.466,1495,2.466,1496,2.466,3213,3.436,3214,3.436,3219,2.466,3220,2.466,3221,2.466,3223,2.466,3228,3.081,3229,3.081]],["title/classes/Report.html",[97,0.075,3230,3.289]],["body/classes/Report.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.567,39,0.01,40,0.517,41,0.467,44,0.681,96,0.253,97,0.133,111,0.008,112,0.009,113,0.008,168,1.502,625,2.172,958,3.901,1011,4.164,1019,3.484,2167,3.966,2305,5.734,2626,5.734,2688,4.969,2689,4.969,2690,4.969,2691,5.897,2692,5.897,2693,5.897,2694,5.897,3230,5.788,3231,7.021,3232,7.267,3233,6.703,3234,4.969]],["title/modules/ReportModule.html",[916,1.478,3235,3.289]],["body/modules/ReportModule.html",[3,0.205,4,0.173,5,0.095,39,0.01,79,0.458,81,0.452,82,1.995,88,1.841,96,0.205,97,0.108,111,0.007,112,0.008,113,0.007,170,1.213,238,0.976,327,1.864,388,2.293,397,1.032,399,1.382,631,2.585,916,2.107,918,2.848,919,2.755,920,3.893,921,3.412,922,3.757,923,3.054,928,3.898,929,3.516,930,2.848,931,2.755,933,3.397,934,3.779,935,3.779,936,2.755,937,3.779,938,3.928,939,3.928,942,5.064,943,3.169,944,3.293,945,5.064,946,5.064,1606,6.04,1607,5.064,2594,6.487,3235,6.684,3236,5.565,3237,5.565,3238,6.325,3239,5.565,3240,5.565,3241,6.419,3242,6.325,3243,6.325,3244,6.325]],["title/classes/ReportResults.html",[97,0.075,3234,3.289]],["body/classes/ReportResults.html",[3,0.219,4,0.184,5,0.101,10,0.422,11,0.658,36,0.558,39,0.01,40,0.422,41,0.46,44,0.643,96,0.254,97,0.133,111,0.008,112,0.009,113,0.008,168,1.597,625,2.186,958,3.839,1011,5.145,1019,2.845,2167,3.992,2305,4.683,2626,4.683,2683,5.935,2684,5.935,2685,5.935,2688,6.141,2689,6.141,2690,6.141,3230,5.002,3231,6.947,3232,5.935,3234,5.81,3245,6.746]],["title/injectables/ReportService.html",[0,1.193,3241,3.289]],["body/injectables/ReportService.html",[0,1.815,2,2.551,3,0.171,4,0.144,5,0.079,7,2.864,8,1.013,9,3.905,10,0.33,11,0.567,12,3.102,13,1.475,14,3.818,15,3.659,16,3.818,17,2.411,18,3.24,19,3.279,20,3.818,21,3.382,22,0.679,24,1.012,25,4.207,26,3.659,27,4.032,28,4.207,29,3.818,30,3.818,31,3.26,32,2.072,33,2.864,34,5.405,35,3.138,36,0.588,37,4.23,38,0.917,39,0.01,40,0.543,41,0.481,42,0.917,44,0.643,46,4.23,48,0.814,49,4.639,50,1.66,51,3.126,52,0.645,53,2.864,54,3.873,55,3.659,56,3.126,57,0.876,58,0.702,59,2.864,60,0.587,61,3.126,62,3.126,63,2.988,64,3.126,65,3.818,66,2.988,67,3.126,68,2.988,69,3.126,70,2.228,71,3.126,72,3.126,73,3.126,74,3.126,75,3.126,76,3.126,77,3.126,78,3.126,79,0.444,80,1.458,81,0.378,82,1.666,83,2.864,84,2.551,85,1.964,86,1.666,87,3.282,88,2.165,92,2.751,93,2.988,94,0.727,95,0.706,96,0.171,97,0.09,98,2.647,99,2.379,100,3.668,101,4.23,102,2.462,105,0.567,107,3.146,108,3.659,109,4.421,110,3.382,111,0.006,112,0.008,113,0.006,168,1.227,242,1.182,796,3.46,834,4.23,949,5.939,957,4.648,958,3.648,961,6.545,978,4.421,984,1.916,988,3.126,990,4.23,991,1.862,1010,4.648,1011,3.282,1012,4.648,1013,4.648,1084,2.302,2606,4.648,2959,5.516,3230,5.516,3231,6.485,3234,5.005,3241,5.005,3246,6.751,3247,6.751,3248,5.284,3249,5.284,3250,5.284,3251,5.284,3252,5.284,3253,5.284,3254,5.284,3255,5.284,3256,5.284,3257,5.284]],["title/classes/Role.html",[97,0.075,2175,2.142]],["body/classes/Role.html",[3,0.215,4,0.182,5,0.1,10,0.416,11,0.652,36,0.539,39,0.01,40,0.531,41,0.458,44,0.707,96,0.275,97,0.144,111,0.007,112,0.009,113,0.007,158,0.942,177,1.416,355,1.297,546,2.215,625,2.155,722,4.598,984,2.411,2126,3.76,2134,3.331,2135,3.76,2166,6.292,2167,3.934,2168,6.41,2173,3.098,2174,3.76,2175,3.975,2176,5.114,2177,3.934,3258,6.649,3259,6.649,3260,6.649]],["title/injectables/RolesService.html",[0,1.193,2192,3.08]],["body/injectables/RolesService.html",[0,1.861,2,2.654,3,0.178,4,0.15,5,0.083,7,2.979,8,1.039,9,3.919,10,0.344,11,0.581,12,3.107,13,1.513,14,3.915,15,3.752,16,3.915,17,2.456,18,3.261,19,3.304,20,3.915,21,3.468,22,0.696,24,1.022,25,4.285,26,3.752,27,4.107,28,4.285,29,3.915,30,3.915,31,3.342,32,2.125,33,2.979,36,0.589,38,0.9,39,0.01,40,0.523,41,0.48,42,0.9,44,0.537,48,0.813,49,4.096,50,1.667,51,3.253,52,0.671,53,2.979,54,3.604,55,3.752,56,3.253,57,0.898,58,0.72,59,2.979,60,0.611,61,3.253,62,3.253,63,3.109,64,3.253,65,3.915,66,3.109,67,3.253,68,3.109,69,3.253,70,2.318,71,3.253,72,3.253,73,3.253,74,3.253,75,3.253,76,3.253,77,3.253,78,3.253,79,0.434,80,1.517,81,0.393,82,1.733,83,2.979,84,2.654,87,3.415,88,2.314,92,2.862,96,0.178,97,0.093,98,2.754,99,2.475,102,2.562,105,0.581,107,3.226,108,3.752,110,3.468,111,0.006,112,0.008,113,0.006,187,0.845,188,0.953,189,0.953,355,1.039,522,0.897,834,4.401,839,4.075,899,4.836,1024,4.3,1220,3.604,2126,3.109,2175,3.84,2177,4.096,2192,4.806,3261,7.954,3262,7.954,3263,6.923,3264,6.923,3265,7.578,3266,5.618,3267,5.497,3268,5.497,3269,5.497]],["title/components/SaveButtonComponent.html",[114,0.121,329,0.851]],["body/components/SaveButtonComponent.html",[3,0.087,4,0.14,5,0.04,8,1.233,10,0.414,11,0.35,13,1.118,22,0.42,24,1.07,36,0.547,38,0.62,39,0.01,40,0.514,41,0.44,42,0.711,44,0.623,45,0.502,48,0.759,50,1.511,52,0.763,57,0.811,58,0.688,60,0.847,79,0.353,81,0.192,85,1.215,86,0.847,94,0.37,95,0.359,96,0.268,97,0.143,105,0.728,111,0.003,112,0.005,113,0.003,114,0.23,115,0.543,116,1.007,117,0.587,118,0.889,121,1.803,122,0.843,123,1.643,124,0.572,125,2.766,126,1.309,127,1.171,130,2.514,132,1.415,133,1.24,134,1.637,135,1.438,136,1.438,138,1.003,139,1.012,140,1.012,141,1.012,142,1.483,143,1.24,144,1.399,145,0.936,146,1.148,147,1.229,148,1.178,149,1.034,150,0.723,151,1.178,152,0.723,153,1.012,154,0.956,155,0.723,156,0.942,157,0.723,158,0.978,159,1.264,160,0.723,161,0.723,164,1.065,166,1.012,167,1.24,168,1.049,169,0.668,170,1.268,171,1.235,172,1.012,173,1.012,174,0.651,175,0.668,176,1.363,177,0.889,178,0.603,179,0.668,180,0.986,181,0.936,182,0.668,183,1.588,184,0.668,185,1.47,186,1.062,187,0.625,188,0.705,189,0.705,190,0.668,191,0.986,192,1.178,193,1.514,194,1.514,195,0.889,198,0.668,199,1.012,200,1.328,201,0.668,202,0.668,203,1.483,204,0.668,206,0.866,207,1.654,208,0.847,226,1.203,238,0.415,239,0.889,240,0.8,241,0.587,242,1.069,243,0.587,244,1.445,245,0.8,246,0.866,247,0.557,248,0.572,249,1.118,250,0.543,251,0.587,252,0.587,253,0.8,254,0.587,255,0.8,256,0.981,257,0.557,258,1.359,259,0.912,260,0.557,261,0.587,262,0.557,263,0.858,264,1.077,265,0.8,266,0.843,267,0.587,268,0.543,269,0.866,270,1.261,271,0.557,272,0.912,273,0.981,274,0.587,275,0.543,276,0.543,277,0.587,278,0.8,279,0.866,280,0.8,281,0.587,282,0.8,283,0.572,284,0.587,285,0.543,286,0.543,287,0.587,288,0.543,289,0.912,290,0.587,291,0.557,292,0.587,293,0.543,294,0.587,295,0.543,296,0.572,297,1.189,298,0.912,299,0.8,300,0.843,301,0.912,302,0.543,303,0.587,304,0.912,305,0.543,306,0.843,307,0.587,308,0.543,309,0.543,310,0.557,311,0.587,312,0.543,313,0.515,314,0.587,315,0.543,316,0.587,317,0.543,318,0.587,319,0.529,320,1.197,321,0.543,322,0.587,323,0.543,324,0.912,325,0.515,326,0.912,327,0.557,328,0.587,329,1.106,330,1.501,331,0.981,332,0.587,333,0.543,334,0.587,335,0.8,336,0.587,337,0.8,338,1.372,339,0.866,340,0.8,341,0.587,342,0.543,343,0.882,344,0.587,345,0.543,346,0.8,347,0.587,348,0.557,349,0.572,350,0.587,351,0.543,352,0.529,353,0.587,354,0.557,355,0.403,356,0.587,357,0.515,358,0.557,359,0.587,360,0.543,361,0.587,362,0.557,363,1.062,364,0.543,365,0.587,366,0.557,367,0.587,368,0.587,369,1.522,370,1.098,371,2.029,372,1.098,373,3.672,375,2.092,378,1.432,379,0.803,380,0.871,381,0.651,382,1.706,383,1.098,384,1.856,385,2.092,386,2.092,387,1.614,388,2.093,389,2.554,390,2.358,391,1.098,392,1.706,393,1.706,394,1.065,395,1.065,396,0.92,397,0.438,398,1.065,399,0.587,400,1.065,401,2.154,402,1.098,403,2.703,404,1.706,405,0.974,406,1.654,407,1.471,408,0.92,409,1.098,410,1.098,411,1.098,412,1.098,413,1.098,414,1.706,415,1.098,416,0.895,417,1.098,418,1.098,419,1.098,420,1.003,421,1.003,422,1.003,423,0.92,424,1.098,425,1.098,426,1.098,427,1.098,428,1.706,429,1.098,430,1.098,431,1.098,432,1.098,433,2.028,434,1.654,435,1.098,436,1.171,437,2.028,438,1.098,439,1.968,440,0.895,441,2.287,442,1.098,443,1.705,444,2.092,445,1.098,446,1.571,447,1.098,448,1.098,449,1.098,450,1.098,451,1.098,452,1.911,453,1.706,454,1.098,455,1.098,456,1.098,457,1.098,458,1.098,459,1.098,460,1.098,461,1.065,462,1.098,463,1.706,464,1.706,465,1.098,466,1.098,467,1.098,468,1.098,469,1.098,470,1.098,471,1.065,472,1.43,473,1.098,474,1.098,475,1.098,476,1.706,477,1.098,478,1.098,479,1.098,480,1.471,481,1.654,482,1.353,483,2.287,484,2.092,485,1.098,486,1.098,487,1.706,488,1.706,489,1.098,490,2.735,491,1.706,492,1.098,493,1.098,494,1.098,495,1.098,496,2.092,497,1.098,498,1.098,499,1.098,500,1.098,501,1.098,502,1.098,503,0.947,504,0.947,505,1.098,506,0.974,507,1.098,508,1.065,509,1.098,510,1.654,511,1.706,512,1.558,513,1.558,514,1.654,515,1.654,516,1.353,517,1.654,518,2.703,519,2.358,520,1.706,521,1.43,522,0.835,523,1.471,524,1.654,525,1.353,526,1.706,527,1.706,528,1.215,529,1.605,530,1.706,531,1.098,532,1.098,533,2.358,534,1.098,535,2.358,536,1.098,537,2.358,538,2.092,539,1.098,540,1.098,541,1.098,542,1.098,543,1.706,544,1.098,545,1.098,546,1.391,547,1.098,548,1.065,549,1.098,550,1.098,551,1.065,552,1.098,553,1.098,554,1.098,555,1.706,556,1.706,557,0.742,558,1.098,559,1.065,560,1.065,561,1.003,562,1.065,563,1.098,564,1.065,565,1.098,566,1.098,567,1.098,568,1.098,569,1.098,570,1.098,571,1.098,572,1.098,573,1.706,574,1.706,575,1.706,576,1.706,577,1.706,578,1.654,579,1.122,580,1.098,581,1.003,582,1.098,583,1.098,584,0.895,585,1.003,586,1.706,587,1.098,588,1.098,589,1.098,590,2.092,591,1.098,592,1.098,593,1.098,594,1.098,595,1.098,596,1.098,597,1.098,598,1.098,599,1.065,600,1.098,601,1.098,602,1.098,603,1.033,604,1.098,605,1.098,606,1.065,607,1.098,608,1.098,609,0.947,610,1.098,611,1.098,612,1.098,613,1.098,614,1.098,615,1.098,616,1.065,617,0.762,618,1.098,619,1.098,620,1.098,621,1.098,622,1.098,623,0.895,3270,2.687,3271,2.687,3272,2.687,3273,2.687,3274,2.687]],["title/classes/SaveResult.html",[97,0.075,2177,2.625]],["body/classes/SaveResult.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.511,39,0.01,40,0.488,41,0.445,44,0.706,96,0.275,97,0.145,111,0.008,112,0.009,113,0.008,158,1.106,177,1.425,355,1.276,546,2.75,625,2.169,722,5.032,984,2.426,2126,3.785,2134,3.352,2135,3.785,2166,6.12,2167,3.96,2168,6.12,2173,3.118,2174,3.785,2175,3.766,2176,4.157,2177,4.615,3275,6.692,3276,6.692]],["title/classes/SelectionComponent.html",[97,0.075,433,1.758]],["body/classes/SelectionComponent.html",[3,0.102,4,0.154,5,0.047,8,1.264,10,0.353,11,0.395,13,1.232,22,0.473,24,1.073,36,0.526,38,0.673,39,0.01,40,0.502,41,0.427,42,0.756,44,0.646,48,0.761,50,1.457,52,0.384,57,0.732,58,0.697,60,0.88,79,0.373,81,0.225,85,1.369,86,0.991,94,0.433,95,0.42,96,0.273,97,0.146,105,0.739,111,0.004,112,0.005,113,0.004,114,0.233,116,0.619,121,1.807,123,1.489,125,2.718,126,1.337,127,0.833,130,2.642,132,1.417,133,1.366,134,1.706,135,1.542,136,1.542,138,1.173,139,1.14,140,1.14,141,1.14,142,1.577,143,1.366,144,1.517,146,0.705,147,1.078,148,0.723,149,0.951,151,1.083,153,0.762,154,0.878,156,0.768,158,0.997,159,1.274,166,1.14,167,1.366,168,1.138,169,0.782,170,1.348,171,1.313,172,1.14,173,1.14,174,0.762,175,0.782,176,1.478,177,1.002,178,0.705,179,0.782,180,1.111,181,1.055,182,0.782,183,1.542,184,0.782,185,1.497,186,1.169,187,0.688,188,0.776,189,0.776,190,0.782,191,1.111,192,1.297,193,1.624,194,1.624,195,1.002,198,0.782,199,1.14,200,1.297,201,0.782,202,0.782,203,1.403,204,0.782,206,0.976,207,1.864,208,0.991,226,1.138,242,0.978,245,0.603,246,0.652,253,0.603,255,0.603,256,0.902,264,0.542,265,0.603,266,0.635,273,0.902,278,0.603,279,0.652,280,0.603,282,0.603,297,0.971,299,0.603,300,0.635,329,0.603,330,1.319,331,0.902,335,0.603,337,0.603,338,1.39,339,0.652,340,0.603,343,0.811,346,0.603,369,1.297,370,1.285,371,2.054,372,1.285,375,1.923,378,1.512,379,0.939,380,1.019,381,0.762,382,1.923,383,1.285,384,2.044,385,2.558,386,2.304,387,1.778,388,2.269,389,2.304,390,2.558,391,1.285,392,1.923,393,1.923,394,1.246,395,1.246,396,1.077,397,0.513,398,1.201,399,0.687,400,1.246,401,2.336,402,1.285,403,2.874,404,1.923,405,1.14,406,1.864,407,1.658,408,1.077,409,1.285,410,1.285,411,1.285,412,1.285,413,1.285,414,1.923,415,1.285,416,1.047,417,1.285,418,1.285,419,1.285,420,1.173,421,1.173,422,1.173,423,1.077,424,1.285,425,1.285,426,1.285,427,1.285,428,1.923,429,1.285,430,1.285,431,1.285,432,1.285,433,2.48,434,2.234,435,1.285,436,1.245,437,2.234,438,1.285,439,2.168,440,1.567,441,2.48,442,1.285,443,1.878,444,2.304,445,1.285,446,1.731,447,1.285,448,1.285,449,1.285,450,1.285,451,1.285,452,2.105,453,1.923,454,1.285,455,1.285,456,1.285,457,1.285,458,1.285,459,1.285,460,1.285,461,1.201,462,1.285,463,1.923,464,1.923,465,1.285,466,1.285,467,1.285,468,1.285,469,1.285,470,1.285,471,1.246,472,1.612,473,1.285,474,1.285,475,1.285,476,1.923,477,1.285,478,1.285,479,1.285,480,1.658,481,1.864,482,1.525,483,2.48,484,2.304,485,1.285,486,1.285,487,1.923,488,1.923,489,1.285,490,2.889,491,1.923,492,1.285,493,1.285,494,1.285,495,1.285,496,2.304,497,1.285,498,1.285,499,1.285,500,1.285,501,1.285,502,1.285,503,1.108,504,1.108,505,1.285,506,1.14,507,1.285,508,1.246,509,1.285,510,1.246,511,1.285,512,1.173,513,1.173,514,1.246,515,1.246,516,1.019,517,1.246,518,2.304,519,1.923,520,1.285,521,1.077,522,0.513,523,1.108,524,1.246,525,1.019,526,1.285,527,1.285,528,0.915,529,1.209,530,1.923,531,1.285,532,1.285,533,1.285,534,1.285,535,1.285,536,1.285,537,1.285,538,2.304,539,1.285,540,1.285,541,1.285,542,1.285,543,1.923,544,1.285,545,1.285,546,1.567,547,1.285,548,1.246,549,1.285,550,1.285,551,1.246,552,1.285,553,1.285,554,1.285,555,1.923,556,1.923,557,0.868,558,1.285,559,1.246,560,1.246,561,1.173,562,1.246,563,1.285,564,1.246,565,1.285,566,1.285,567,1.285,568,1.285,569,1.285,570,1.285,571,1.285,572,1.285,573,1.923,574,1.923,575,1.923,576,1.923,577,1.923,578,1.864,579,1.265,580,1.285,581,1.173,582,1.285,583,1.285,584,1.047,585,1.173,586,1.923,587,1.285,588,1.285,589,1.285,590,2.304,591,1.285,592,1.285,593,1.285,594,1.285,595,1.285,596,1.285,597,1.285,598,1.285,599,1.246,600,1.285,601,1.285,602,1.285,603,1.209,604,1.285,605,1.285,606,1.246,607,1.285,608,1.285,609,1.108,610,1.285,611,1.285,612,1.285,613,1.285,614,1.285,615,1.285,616,1.246,617,0.891,618,1.285,619,1.285,620,1.285,621,1.285,622,1.285,623,1.047,625,1.019,1211,3.488,3277,3.143,3278,3.143]],["title/components/SelectionFieldComponent.html",[114,0.121,331,0.851]],["body/components/SelectionFieldComponent.html",[3,0.088,4,0.141,5,0.041,8,1.235,10,0.415,11,0.353,13,1.372,22,0.423,24,1.058,36,0.553,38,0.714,39,0.01,40,0.518,41,0.449,42,0.77,44,0.634,45,0.507,48,0.766,50,1.537,52,0.514,57,0.815,58,0.721,60,0.85,79,0.354,81,0.194,85,1.224,86,0.856,94,0.374,95,0.363,96,0.268,97,0.143,105,0.729,111,0.003,112,0.005,113,0.003,114,0.23,115,0.548,116,1.014,117,0.593,118,0.896,121,1.801,122,0.85,123,1.644,124,0.578,125,2.596,126,1.311,127,1.111,130,2.523,132,1.417,133,1.248,134,1.641,135,1.445,136,1.445,138,1.013,139,1.02,140,1.02,141,1.02,142,1.605,143,1.248,144,1.406,145,0.943,146,1.155,147,1.194,148,1.185,149,1.041,150,0.73,151,1.185,152,0.73,153,1.02,154,0.962,155,0.73,156,0.947,157,0.73,158,1.015,159,1.248,160,0.73,161,0.73,164,1.667,166,1.02,167,1.248,168,1.055,169,0.675,170,1.273,171,1.24,172,1.02,173,1.02,174,0.658,175,0.675,176,1.37,177,0.896,178,0.609,179,0.675,180,0.993,181,0.943,182,0.675,183,1.445,184,0.675,185,1.524,186,1.068,187,0.629,188,0.709,189,0.709,190,0.675,191,0.993,192,1.185,193,1.522,194,1.522,195,0.896,198,0.675,199,1.02,200,1.185,201,0.675,202,0.675,203,1.301,204,0.675,206,0.873,207,1.667,208,0.856,226,1.055,238,0.419,239,0.896,240,0.807,241,0.593,242,1.072,243,0.593,244,1.451,245,0.807,246,0.873,247,0.563,248,0.578,249,1.125,250,0.548,251,0.593,252,0.593,253,0.807,254,0.593,255,0.807,256,0.988,257,0.563,258,1.364,259,0.919,260,0.563,261,0.593,262,0.563,263,0.864,264,1,265,0.807,266,0.85,267,0.593,268,0.548,269,0.873,270,1.268,271,0.563,272,0.919,273,0.988,274,0.593,275,0.548,276,0.548,277,0.593,278,0.807,279,0.873,280,0.807,281,0.593,282,0.807,283,0.578,284,0.593,285,0.548,286,0.548,287,0.593,288,0.548,289,0.919,290,0.593,291,0.563,292,0.593,293,0.548,294,0.593,295,0.548,296,0.578,297,1.144,298,0.919,299,0.807,300,0.85,301,0.919,302,0.548,303,0.593,304,0.919,305,0.548,306,0.85,307,0.593,308,0.548,309,0.548,310,0.563,311,0.593,312,0.548,313,0.52,314,0.593,315,0.548,316,0.593,317,0.548,318,0.593,319,0.534,320,1.203,321,0.548,322,0.593,323,0.548,324,0.919,325,0.52,326,0.919,327,0.563,328,0.593,329,0.807,330,1.307,331,1.273,332,0.593,333,0.548,334,0.593,335,0.807,336,0.593,337,0.807,338,1.378,339,0.873,340,0.807,341,0.593,342,0.548,343,0.888,344,0.593,345,0.548,346,0.807,347,0.593,348,0.563,349,0.578,350,0.593,351,0.548,352,0.534,353,0.593,354,0.563,355,0.407,356,0.593,357,0.52,358,0.563,359,0.593,360,0.548,361,0.593,362,0.563,363,1.068,364,0.548,365,0.593,366,0.563,367,0.593,368,0.593,369,1.528,370,1.109,371,2.101,372,1.109,375,1.719,378,1.437,379,0.811,380,0.88,381,0.658,382,1.719,383,1.109,384,1.868,385,2.566,386,2.105,387,1.624,388,2.104,389,2.105,390,2.371,391,1.109,392,1.719,393,1.719,394,1.076,395,1.076,396,0.93,397,0.443,398,1.074,399,0.593,400,1.076,401,2.166,402,1.109,403,2.714,404,1.719,405,0.984,406,1.667,407,1.482,408,0.93,409,1.109,410,1.109,411,1.109,412,1.109,413,1.109,414,1.719,415,1.109,416,0.904,417,1.109,418,1.109,419,1.109,420,1.013,421,1.013,422,1.013,423,0.93,424,1.109,425,1.109,426,1.109,427,1.109,428,1.719,429,1.109,430,1.109,431,1.109,432,1.109,433,2.632,434,2.488,435,1.109,436,1.176,437,2.488,438,1.109,439,1.981,440,1.401,441,2.632,442,1.109,443,2.092,444,2.831,445,1.109,446,1.927,447,1.109,448,1.109,449,1.109,450,1.109,451,1.109,452,1.923,453,1.719,454,1.109,455,2.371,456,1.109,457,2.371,458,1.109,459,1.109,460,1.719,461,1.074,462,1.109,463,1.719,464,1.719,465,1.109,466,1.109,467,1.109,468,1.109,469,1.109,470,1.109,471,1.076,472,1.441,473,1.109,474,1.109,475,1.109,476,1.719,477,1.109,478,1.109,479,1.109,480,1.482,481,1.667,482,1.363,483,2.299,484,2.105,485,1.109,486,1.109,487,1.719,488,1.719,489,1.109,490,2.745,491,1.719,492,1.109,493,1.109,494,1.109,495,1.109,496,2.105,497,1.109,498,1.109,499,1.109,500,1.109,501,1.109,502,1.109,503,0.956,504,0.956,505,1.109,506,0.984,507,1.109,508,1.076,509,1.109,510,1.076,511,1.109,512,1.013,513,1.013,514,1.076,515,1.076,516,0.88,517,1.076,518,2.105,519,1.719,520,1.109,521,0.93,522,0.443,523,0.956,524,1.076,525,0.88,526,1.109,527,1.109,528,0.79,529,1.044,530,1.719,531,1.109,532,1.109,533,1.109,534,1.109,535,1.109,536,1.109,537,1.109,538,2.105,539,1.109,540,1.109,541,1.109,542,1.109,543,1.719,544,1.109,545,1.109,546,1.401,547,1.109,548,1.076,549,1.109,550,1.109,551,1.076,552,1.109,553,1.109,554,1.109,555,1.719,556,1.719,557,0.749,558,1.109,559,1.076,560,1.076,561,1.013,562,1.076,563,1.109,564,1.076,565,1.109,566,1.109,567,1.109,568,1.109,569,1.109,570,1.109,571,1.109,572,1.109,573,1.719,574,1.719,575,1.719,576,1.719,577,1.719,578,1.667,579,1.131,580,1.109,581,1.013,582,1.109,583,1.109,584,0.904,585,1.013,586,1.719,587,1.109,588,1.109,589,1.109,590,2.105,591,1.109,592,1.109,593,1.109,594,1.109,595,1.109,596,1.109,597,1.109,598,1.109,599,1.076,600,1.109,601,1.109,602,1.109,603,1.044,604,1.109,605,1.109,606,1.076,607,1.109,608,1.109,609,0.956,610,1.109,611,1.109,612,1.109,613,1.109,614,1.109,615,1.109,616,1.076,617,0.769,618,1.109,619,1.109,620,1.109,621,1.109,622,1.109,623,0.904,1211,3.119,1214,2.388,1217,2.388,3279,4.207,3280,4.207,3281,2.714,3282,2.714,3283,2.714,3284,2.714,3285,2.714,3286,2.714]],["title/modules/SharedModule.html",[916,1.478,928,1.998]],["body/modules/SharedModule.html",[1,5.168,3,0.112,4,0.094,5,0.052,17,1.12,18,2.717,35,3.07,39,0.01,79,0.461,81,0.247,88,2.242,91,2.399,93,1.954,96,0.112,97,0.059,111,0.004,112,0.006,113,0.004,114,0.094,115,1.684,118,0.736,170,0.967,205,1.369,208,1.09,209,3.278,238,0.533,245,1.597,247,1.714,248,0.736,250,1.684,253,1.597,255,1.477,257,1.728,262,1.714,263,0.579,264,0.595,265,1.597,268,1.684,273,1.597,276,1.684,278,1.597,280,1.597,282,1.597,293,1.684,295,1.67,296,0.736,299,1.597,302,1.67,305,1.684,306,0.698,308,1.684,309,1.684,315,1.557,317,1.67,319,1.64,321,1.684,323,1.684,325,1.597,329,1.477,331,1.597,335,1.597,337,1.597,340,1.597,342,1.684,343,1.424,345,1.684,346,1.597,351,1.684,352,0.68,357,1.597,358,1.728,360,1.684,363,0.717,364,1.684,366,1.728,388,1.253,395,1.369,397,0.564,461,0.882,631,1.412,916,1.151,918,1.556,919,1.505,920,2.878,921,2.062,922,2.777,923,2.878,928,4.164,929,2.351,930,1.556,931,1.505,933,1.556,934,2.528,935,2.528,936,1.505,937,2.528,938,2.627,943,1.731,947,4.767,1209,3.741,1218,5.397,1258,2.147,1259,2.399,1261,2.562,1358,4.116,1606,4.771,1607,2.767,1630,2.147,1843,4.767,1908,4.124,1927,2.767,1981,5.397,2006,2.399,2055,2.147,2114,4.521,2173,1.61,2174,1.954,2192,5.053,2354,4.04,2378,2.767,3287,3.04,3288,3.04,3289,3.04,3290,3.04,3291,6.126,3292,5.053,3293,3.456,3294,3.456,3295,3.456,3296,3.04,3297,3.456,3298,8.495,3299,3.456,3300,3.456,3301,3.456,3302,3.456,3303,3.456,3304,3.456,3305,3.456,3306,3.456,3307,3.456,3308,3.456,3309,3.456,3310,5.046,3311,3.456,3312,5.96,3313,5.96,3314,2.562,3315,3.456,3316,5.046,3317,3.456,3318,3.456,3319,4.439,3320,3.456,3321,3.456,3322,5.96,3323,5.046,3324,5.96,3325,4.439,3326,3.456,3327,3.456,3328,3.456,3329,3.456,3330,5.046,3331,3.456,3332,3.456,3333,3.456,3334,3.456,3335,3.456,3336,3.456,3337,3.456,3338,3.456]],["title/classes/SimpleComponent.html",[97,0.075,121,0.92]],["body/classes/SimpleComponent.html",[3,0.101,4,0.153,5,0.047,8,1.254,10,0.438,11,0.391,13,1.223,22,0.469,24,1.072,36,0.544,38,0.602,39,0.01,40,0.511,41,0.444,42,0.717,44,0.64,48,0.751,52,0.379,57,0.807,58,0.728,60,0.878,79,0.371,81,0.222,85,1.356,86,0.979,94,0.427,95,0.415,96,0.272,97,0.146,105,0.738,111,0.003,112,0.005,113,0.003,114,0.234,116,0.611,121,1.734,123,1.486,125,2.708,126,1.333,127,0.825,130,2.632,132,1.429,133,1.356,134,1.7,135,1.534,136,1.534,138,1.159,139,1.13,140,1.13,141,1.13,142,1.57,143,1.356,144,1.507,145,1.045,146,1.255,147,1.251,148,1.288,149,1.131,151,1.288,153,1.13,154,1.045,156,0.913,158,1.029,159,1.289,166,1.13,167,1.356,168,1.131,170,1.342,171,1.307,172,1.13,173,1.13,174,0.752,176,1.469,177,0.992,178,0.696,180,1.101,181,1.045,183,1.534,185,1.49,186,1.161,187,0.76,188,0.856,189,0.856,191,1.101,192,1.288,193,1.616,194,1.616,195,0.992,199,1.13,200,1.288,203,1.395,206,1.161,207,1.847,208,0.979,226,1.131,242,0.972,245,0.595,246,0.644,253,0.595,255,0.595,256,0.894,264,0.535,265,0.595,266,0.627,273,0.894,278,0.595,279,0.644,280,0.595,282,0.595,297,0.964,299,0.595,300,0.627,329,0.595,330,1.312,331,0.894,335,0.595,337,0.595,338,1.383,339,0.644,340,0.595,343,0.803,346,0.595,369,1.923,370,1.269,371,2.05,372,1.269,375,1.905,378,1.506,379,0.928,380,1.006,381,0.752,382,1.905,383,1.269,384,2.029,385,2.287,386,2.287,387,1.765,388,2.255,389,2.287,390,2.542,391,1.269,392,1.905,393,1.905,394,1.23,395,1.23,396,1.064,397,0.507,398,1.19,399,0.678,400,1.23,401,2.322,402,1.269,403,2.861,404,1.905,405,1.126,406,1.847,407,1.642,408,1.064,409,1.269,410,1.269,411,1.269,412,1.269,413,1.269,414,1.905,415,1.269,416,1.034,417,1.269,418,1.269,419,1.269,420,1.159,421,1.159,422,1.159,423,1.064,424,1.269,425,1.269,426,1.269,427,1.269,428,1.905,429,1.269,430,1.269,431,1.269,432,1.269,433,2.218,434,1.847,435,1.269,436,1.239,437,2.218,438,1.269,439,2.152,440,1.034,441,2.465,442,1.269,443,1.864,444,2.287,445,1.269,446,1.718,447,1.269,448,1.269,449,1.269,450,1.269,451,1.269,452,2.089,453,1.905,454,1.269,455,1.269,456,1.269,457,1.269,458,1.269,459,1.269,460,1.269,461,1.19,462,1.269,463,1.905,464,1.905,465,1.269,466,1.269,467,1.269,468,1.269,469,1.269,470,1.269,471,1.23,472,1.597,473,1.269,474,1.269,475,1.269,476,1.905,477,1.269,478,1.269,479,1.269,480,1.642,481,1.847,482,1.511,483,2.465,484,2.287,485,1.269,486,1.269,487,1.905,488,1.905,489,1.269,490,2.877,491,1.905,492,1.269,493,1.269,494,1.269,495,1.269,496,2.287,497,1.269,498,1.269,499,1.269,500,1.269,501,1.269,502,1.269,503,1.094,504,1.094,505,1.269,506,1.126,507,1.269,508,1.23,509,1.269,510,1.23,511,1.269,512,1.159,513,1.159,514,1.23,515,1.23,516,1.006,517,1.23,518,2.287,519,1.905,520,1.269,521,1.064,522,0.76,523,1.094,524,1.23,525,1.006,526,1.269,527,1.269,528,0.903,529,1.194,530,1.905,531,1.269,532,1.269,533,1.269,534,1.269,535,1.269,536,1.269,537,1.269,538,2.287,539,1.269,540,1.269,541,1.269,542,1.269,543,1.905,544,1.269,545,1.269,546,1.553,547,1.269,548,1.23,549,1.269,550,1.269,551,1.23,552,1.269,553,1.269,554,1.269,555,1.905,556,1.905,557,0.857,558,1.269,559,1.23,560,1.23,561,1.159,562,1.23,563,1.269,564,1.23,565,1.269,566,1.269,567,1.269,568,1.269,569,1.269,570,1.269,571,1.269,572,1.269,573,1.905,574,1.905,575,1.905,576,1.905,577,1.905,578,1.847,579,1.253,580,1.269,581,1.159,582,1.269,583,1.269,584,1.034,585,1.159,586,1.905,587,1.269,588,1.269,589,1.269,590,2.287,591,1.269,592,1.269,593,1.269,594,1.269,595,1.269,596,1.269,597,1.269,598,1.269,599,1.23,600,1.269,601,1.269,602,1.269,603,1.194,604,1.269,605,1.269,606,1.23,607,1.269,608,1.269,609,1.094,610,1.269,611,1.269,612,1.269,613,1.269,614,1.269,615,1.269,616,1.23,617,0.88,618,1.269,619,1.269,620,1.269,621,1.269,622,1.269,623,1.034,625,1.006,3339,3.105,3340,3.105,3341,3.105,3342,3.105,3343,3.105,3344,3.105,3345,3.105,3346,3.105,3347,3.105,3348,3.105,3349,3.105,3350,3.105,3351,3.105,3352,3.105,3353,3.105,3354,3.105]],["title/components/SortComponent.html",[114,0.121,333,0.896]],["body/components/SortComponent.html",[0,1.764,3,0.164,4,0.138,5,0.076,10,0.316,22,0.659,35,2.131,36,0.536,39,0.01,40,0.41,41,0.431,44,0.656,45,0.943,48,0.474,57,1,58,0.802,60,0.949,79,0.446,80,1.395,81,0.469,88,1.909,89,3.138,90,2.439,92,2.63,94,0.696,95,0.675,96,0.212,97,0.086,105,0.424,111,0.006,112,0.007,113,0.006,114,0.199,115,1.021,116,1.291,117,1.104,118,1.396,122,1.325,123,1.676,124,1.076,126,0.824,127,1.289,145,1.471,154,0.943,156,0.824,158,0.716,159,0.824,171,0.943,208,1.593,209,2.275,238,0.78,239,1.396,240,1.258,241,1.104,242,1.165,243,1.104,244,1.789,245,0.969,246,1.048,247,1.048,248,1.076,249,1.591,250,1.021,251,1.104,252,1.104,253,0.969,254,1.104,255,0.969,256,0.969,257,1.048,258,1.641,259,1.433,260,1.048,261,1.104,262,1.048,263,1.221,264,1.255,265,0.969,266,1.021,267,1.104,268,1.021,269,1.36,270,1.684,271,1.048,272,1.433,273,0.969,274,1.104,275,1.021,276,1.021,277,1.104,278,0.969,279,1.048,280,0.969,281,1.104,282,0.969,283,1.076,284,1.104,285,1.021,286,1.021,287,1.104,288,1.021,289,1.433,290,1.104,291,1.048,292,1.104,293,1.021,294,1.104,295,1.021,296,1.076,297,1.255,298,1.433,299,0.969,300,1.021,301,1.433,302,1.021,303,1.104,304,1.433,305,1.021,306,1.325,307,1.104,308,1.021,309,1.021,310,1.048,311,1.104,312,1.021,313,0.969,314,1.104,315,1.021,316,1.104,317,1.021,318,1.104,319,0.995,320,1.599,321,1.021,322,1.104,323,1.021,324,1.433,325,0.969,326,1.433,327,1.048,328,1.104,329,0.969,330,0.995,331,0.969,332,1.104,333,1.558,334,1.104,335,0.969,336,1.104,337,0.969,338,1.048,339,1.048,340,0.969,341,1.104,342,1.021,343,0.871,344,1.104,345,1.021,346,0.969,347,1.104,348,1.048,349,1.076,350,1.104,351,1.021,352,0.995,353,1.104,354,1.048,355,0.758,356,1.104,357,0.969,358,1.048,359,1.104,360,1.021,361,1.104,362,1.048,363,1.511,364,1.021,365,1.104,366,1.048,367,1.104,368,1.104,378,1.657,381,1.224,396,1.731,397,0.824,398,1.29,631,2.065,639,3.286,670,2.065,862,1.683,921,2.065,936,2.201,943,2.531,947,3.309,970,7.028,1019,3.369,1238,4.074,1255,3.394,1257,3.415,1500,3.309,1527,3.138,1563,3.746,1564,3.746,1565,4.045,2114,3.138,2116,4.045,2117,3.138,2125,4.045,2220,4.445,3355,5.053,3356,6.559,3357,7.709,3358,6.408,3359,6.408,3360,7.283,3361,5.053,3362,5.053,3363,5.053,3364,5.053,3365,5.053,3366,5.053,3367,6.559,3368,5.053,3369,5.053,3370,7.989,3371,7.283,3372,5.053,3373,5.053,3374,5.053,3375,5.053,3376,5.053]],["title/components/SpacerComponent.html",[114,0.121,335,0.851]],["body/components/SpacerComponent.html",[3,0.091,4,0.144,5,0.042,8,1.242,10,0.421,11,0.363,13,1.151,22,0.435,24,1.062,36,0.538,38,0.566,39,0.01,40,0.51,41,0.44,42,0.686,44,0.628,45,0.525,48,0.734,50,1.524,52,0.343,57,0.767,58,0.701,60,0.857,79,0.359,81,0.201,85,1.258,86,0.887,94,0.387,95,0.376,96,0.27,97,0.144,105,0.732,111,0.003,112,0.005,113,0.003,114,0.231,115,0.568,116,1.037,117,0.614,118,0.92,121,1.811,122,0.874,123,1.647,124,0.599,125,2.626,126,1.32,127,1.129,130,2.552,132,1.422,133,1.276,134,1.657,135,1.468,136,1.468,138,1.05,139,1.048,140,1.048,141,1.048,142,1.511,143,1.276,144,1.433,145,0.969,146,1.181,147,1.209,148,1.212,149,1.064,150,0.756,151,1.212,152,0.756,153,1.048,154,0.983,155,0.756,156,0.964,157,0.756,158,0.995,159,1.259,160,0.756,161,0.756,166,1.048,167,1.276,168,1.075,169,0.699,170,1.292,171,1.258,172,1.048,173,1.048,174,0.681,175,0.699,176,1.396,177,0.92,178,0.63,179,0.699,180,1.021,181,0.969,182,0.699,183,1.468,184,0.699,185,1.434,186,1.092,187,0.643,188,0.725,189,0.725,190,0.699,191,1.021,192,1.212,193,1.546,194,1.546,195,0.92,198,0.699,199,1.048,200,1.212,201,0.699,202,0.699,203,1.326,204,0.699,206,0.897,207,1.713,208,0.887,226,1.075,238,0.434,239,0.92,240,0.829,241,0.614,242,1.084,243,0.614,244,1.472,245,0.829,246,0.897,247,0.583,248,0.599,249,1.151,250,0.568,251,0.614,252,0.614,253,0.829,254,0.614,255,0.829,256,1.01,257,0.583,258,1.381,259,0.945,260,0.583,261,0.614,262,0.583,263,0.883,264,1.019,265,0.829,266,0.874,267,0.614,268,0.568,269,0.897,270,1.292,271,0.583,272,0.945,273,1.01,274,0.614,275,0.568,276,0.568,277,0.614,278,0.829,279,0.897,280,0.829,281,0.614,282,0.829,283,0.599,284,0.614,285,0.568,286,0.568,287,0.614,288,0.568,289,0.945,290,0.614,291,0.583,292,0.614,293,0.568,294,0.614,295,0.568,296,0.599,297,1.161,298,0.945,299,0.829,300,0.874,301,0.945,302,0.568,303,0.614,304,0.945,305,0.568,306,0.874,307,0.614,308,0.568,309,0.568,310,0.583,311,0.614,312,0.568,313,0.539,314,0.614,315,0.568,316,0.614,317,0.568,318,0.614,319,0.553,320,1.226,321,0.568,322,0.614,323,0.568,324,0.945,325,0.539,326,0.945,327,0.583,328,0.614,329,0.829,330,1.326,331,1.01,332,0.614,333,0.568,334,0.614,335,1.133,336,0.614,337,0.829,338,1.397,339,0.897,340,0.829,341,0.614,342,0.568,343,0.907,344,0.614,345,0.568,346,0.829,347,0.614,348,0.583,349,0.599,350,0.614,351,0.568,352,0.553,353,0.614,354,0.583,355,0.422,356,0.614,357,0.539,358,0.583,359,0.614,360,0.568,361,0.614,362,0.583,363,1.092,364,0.568,365,0.614,366,0.583,367,0.614,368,0.614,369,0.995,370,1.149,371,2.013,372,1.149,375,1.767,378,1.455,379,0.84,380,0.911,381,0.681,382,1.767,383,1.149,384,1.91,385,2.152,386,2.152,387,1.661,388,2.143,389,2.152,390,2.416,391,1.149,392,1.767,393,2.416,394,1.114,395,1.114,396,0.963,397,0.459,398,1.103,399,0.614,400,1.114,401,2.207,402,1.149,403,2.753,404,1.767,405,1.019,406,1.713,407,1.523,408,0.963,409,1.149,410,1.149,411,1.149,412,1.149,413,1.149,414,1.767,415,1.149,416,0.937,417,1.149,418,1.149,419,1.149,420,1.05,421,1.05,422,1.05,423,0.963,424,1.149,425,1.149,426,1.149,427,1.149,428,1.767,429,1.149,430,1.149,431,1.149,432,1.149,433,2.087,434,1.713,435,1.149,436,1.192,437,2.087,438,1.149,439,2.025,440,0.937,441,2.343,442,1.149,443,1.754,444,2.152,445,1.149,446,1.617,447,1.149,448,1.149,449,1.149,450,1.149,451,1.149,452,1.966,453,1.767,454,1.149,455,1.149,456,1.149,457,1.149,458,1.149,459,1.149,460,1.149,461,1.103,462,1.149,463,1.767,464,1.767,465,1.149,466,1.149,467,1.149,468,1.149,469,1.149,470,1.149,471,1.114,472,1.481,473,1.149,474,1.149,475,1.149,476,1.767,477,1.149,478,1.149,479,1.149,480,1.523,481,1.713,482,1.401,483,2.343,484,2.152,485,1.149,486,1.149,487,1.767,488,1.767,489,1.149,490,2.781,491,1.767,492,1.149,493,1.149,494,1.149,495,1.149,496,2.152,497,1.149,498,1.149,499,1.149,500,1.149,501,1.149,502,1.149,503,0.991,504,0.991,505,1.149,506,1.019,507,1.149,508,1.114,509,1.149,510,1.114,511,1.149,512,1.05,513,1.05,514,1.114,515,1.114,516,0.911,517,1.114,518,2.152,519,1.767,520,1.149,521,0.963,522,0.459,523,0.991,524,1.114,525,0.911,526,1.149,527,1.149,528,0.818,529,1.081,530,1.767,531,1.149,532,1.149,533,1.149,534,1.149,535,1.149,536,1.149,537,1.149,538,2.152,539,1.149,540,1.149,541,1.149,542,1.149,543,1.767,544,1.149,545,1.149,546,1.44,547,1.149,548,1.114,549,1.149,550,1.149,551,1.114,552,1.149,553,1.149,554,1.149,555,1.767,556,1.767,557,0.776,558,1.149,559,1.114,560,1.114,561,1.05,562,1.114,563,1.149,564,1.114,565,1.149,566,1.149,567,1.149,568,1.149,569,1.149,570,1.149,571,1.149,572,1.149,573,1.767,574,1.767,575,1.767,576,1.767,577,1.767,578,1.713,579,1.162,580,1.149,581,1.05,582,1.149,583,1.149,584,0.937,585,1.05,586,1.767,587,1.149,588,1.149,589,1.149,590,2.152,591,1.149,592,1.149,593,1.149,594,1.149,595,1.149,596,1.149,597,1.149,598,1.149,599,1.114,600,1.149,601,1.149,602,1.149,603,1.081,604,1.149,605,1.149,606,1.114,607,1.149,608,1.149,609,0.991,610,1.149,611,1.149,612,1.149,613,1.149,614,1.149,615,1.149,616,1.114,617,0.797,618,1.149,619,1.149,620,1.149,621,1.149,622,1.149,623,1.44,3377,2.812]],["title/pipes/StringTemplatePipe.html",[2593,3.289,3291,3.289]],["body/pipes/StringTemplatePipe.html",[3,0.201,4,0.17,5,0.093,11,0.521,22,0.625,24,1.013,36,0.489,38,0.668,39,0.01,40,0.5,41,0.335,42,0.668,44,0.659,48,0.582,57,0.806,58,0.646,60,0.69,79,0.318,80,1.715,81,0.444,96,0.201,97,0.106,105,0.747,111,0.007,112,0.008,113,0.007,122,1.255,126,1.305,242,1.272,512,3.098,523,2.189,617,1.76,2243,5.533,2593,5.533,2595,4.973,2598,5.465,2600,5.975,2603,6.566,2605,5.465,3291,5.533,3378,6.212,3379,7.463,3380,6.212,3381,6.212,3382,7.463,3383,7.463,3384,6.566,3385,7.463,3386,8.792,3387,7.463,3388,8.3,3389,7.463,3390,8.3,3391,8.3,3392,8.3,3393,7.463,3394,7.463,3395,7.463,3396,7.463,3397,6.566,3398,7.463,3399,7.463,3400,7.463,3401,7.463,3402,7.463,3403,6.212,3404,6.212,3405,6.212,3406,6.212,3407,6.212]],["title/components/TabNavButtonComponent.html",[114,0.121,337,0.851]],["body/components/TabNavButtonComponent.html",[3,0.089,4,0.142,5,0.041,8,1.237,10,0.417,11,0.356,13,1.133,22,0.427,24,1.068,32,0.843,36,0.552,38,0.717,39,0.01,40,0.519,41,0.447,42,0.773,44,0.636,45,0.512,48,0.762,50,1.517,52,0.713,57,0.757,58,0.694,60,0.852,79,0.356,81,0.196,85,1.235,86,0.866,94,0.378,95,0.367,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.555,116,1.021,117,0.6,118,0.903,121,1.807,122,0.857,123,1.645,124,0.584,125,2.674,126,1.314,127,1.117,130,2.532,132,1.418,133,1.257,134,1.646,135,1.452,136,1.452,138,1.025,139,1.028,140,1.028,141,1.028,142,1.496,143,1.257,144,1.415,145,0.952,146,1.163,147,1.199,148,1.194,149,1.048,150,0.738,151,1.194,152,0.738,153,1.028,154,0.969,155,0.738,156,0.952,157,0.738,158,0.986,159,1.251,160,0.738,161,0.738,166,1.028,167,1.257,168,1.213,169,0.683,170,1.279,171,1.246,172,1.028,173,1.028,174,0.665,175,0.683,176,1.378,177,0.903,178,0.615,179,0.683,180,1.002,181,0.952,182,0.683,183,1.452,184,0.683,185,1.42,186,1.076,187,0.633,188,0.714,189,0.714,190,0.683,191,1.002,192,1.194,193,1.529,194,1.529,195,0.903,198,0.683,199,1.028,200,1.194,201,0.683,202,0.683,203,1.309,204,0.683,206,0.88,207,1.682,208,0.866,226,1.061,238,0.424,239,0.903,240,0.814,241,0.6,242,1.076,243,0.6,244,1.458,245,0.814,246,0.88,247,0.569,248,0.584,249,1.133,250,0.555,251,0.6,252,0.6,253,0.814,254,0.6,255,0.814,256,0.995,257,0.569,258,1.369,259,0.927,260,0.569,261,0.6,262,0.569,263,0.87,264,1.006,265,0.814,266,0.857,267,0.6,268,0.555,269,0.88,270,1.275,271,0.569,272,0.927,273,0.995,274,0.6,275,0.555,276,0.555,277,0.6,278,0.814,279,0.88,280,0.814,281,0.6,282,0.814,283,0.584,284,0.6,285,0.555,286,0.555,287,0.6,288,0.555,289,0.927,290,0.6,291,0.569,292,0.6,293,0.555,294,0.6,295,0.555,296,0.584,297,1.15,298,0.927,299,0.814,300,0.857,301,0.927,302,0.555,303,0.6,304,0.927,305,0.555,306,0.857,307,0.6,308,0.555,309,0.555,310,0.569,311,0.6,312,0.555,313,0.526,314,0.6,315,0.555,316,0.6,317,0.555,318,0.6,319,0.54,320,1.211,321,0.555,322,0.6,323,0.555,324,0.927,325,0.526,326,0.927,327,0.569,328,0.6,329,0.814,330,1.313,331,0.995,332,0.6,333,0.555,334,0.6,335,0.814,336,0.6,337,1.119,338,1.443,339,1.076,340,0.814,341,0.6,342,0.555,343,0.894,344,0.6,345,0.555,346,0.814,347,0.6,348,0.569,349,0.584,350,0.6,351,0.555,352,0.54,353,0.6,354,0.569,355,0.412,356,0.6,357,0.526,358,0.569,359,0.6,360,0.555,361,0.6,362,0.569,363,1.076,364,0.555,365,0.6,366,0.569,367,0.6,368,0.6,369,1.601,370,1.122,371,2.003,372,1.122,375,1.734,378,1.443,379,0.82,380,0.89,381,0.665,382,1.734,383,1.122,384,2.288,385,2.12,386,2.12,387,1.636,388,2.116,389,2.12,390,2.385,391,1.122,392,2.12,393,1.734,394,1.088,395,1.088,396,0.94,397,0.448,398,1.083,399,0.6,400,1.088,401,2.356,402,1.122,403,2.727,404,1.734,405,0.995,406,1.682,407,1.495,408,0.94,409,1.122,410,1.122,411,1.122,412,1.122,413,1.122,414,1.734,415,1.122,416,0.914,417,1.122,418,1.122,419,1.122,420,1.025,421,1.025,422,1.025,423,0.94,424,1.122,425,1.122,426,1.122,427,1.122,428,1.734,429,1.122,430,1.122,431,1.122,432,1.122,433,2.056,434,1.682,435,1.122,436,1.181,437,2.056,438,1.122,439,1.995,440,0.914,441,2.313,442,1.122,443,1.728,444,2.12,445,1.122,446,1.592,447,1.122,448,1.122,449,1.122,450,1.122,451,1.122,452,1.936,453,1.734,454,1.122,455,1.122,456,1.122,457,1.122,458,1.122,459,1.122,460,1.122,461,1.083,462,1.122,463,1.734,464,1.734,465,1.122,466,1.122,467,1.122,468,1.122,469,1.122,470,1.122,471,1.088,472,1.454,473,1.122,474,1.122,475,1.122,476,1.734,477,1.122,478,1.122,479,1.122,480,1.495,481,2.056,482,1.375,483,2.757,484,2.12,485,1.122,486,1.122,487,1.734,488,1.734,489,1.122,490,2.757,491,1.734,492,1.122,493,1.122,494,1.122,495,1.122,496,2.12,497,1.122,498,1.122,499,1.122,500,1.122,501,1.122,502,1.122,503,0.967,504,0.967,505,1.122,506,0.995,507,1.122,508,1.088,509,1.122,510,1.088,511,1.122,512,1.025,513,1.025,514,1.088,515,1.088,516,0.89,517,1.088,518,2.12,519,1.734,520,1.122,521,0.94,522,0.448,523,0.967,524,1.088,525,0.89,526,1.122,527,1.122,528,0.799,529,1.055,530,1.734,531,1.122,532,1.122,533,1.122,534,1.122,535,1.122,536,1.122,537,1.122,538,2.12,539,1.122,540,1.122,541,1.122,542,1.122,543,1.734,544,1.122,545,1.122,546,1.414,547,1.122,548,1.088,549,1.122,550,1.122,551,1.088,552,1.122,553,1.122,554,1.122,555,2.385,556,2.385,557,1.611,558,1.122,559,1.088,560,1.088,561,1.025,562,1.088,563,1.122,564,1.088,565,1.122,566,1.122,567,1.122,568,1.122,569,1.734,570,1.122,571,1.122,572,1.122,573,1.734,574,1.734,575,1.734,576,1.734,577,1.734,578,1.682,579,1.141,580,1.122,581,1.025,582,1.122,583,1.122,584,0.914,585,1.025,586,1.734,587,1.122,588,1.122,589,1.122,590,2.12,591,1.122,592,1.122,593,1.122,594,1.122,595,1.122,596,1.122,597,1.122,598,1.122,599,1.088,600,1.122,601,1.122,602,1.122,603,1.055,604,1.122,605,1.122,606,1.088,607,1.122,608,1.122,609,0.967,610,1.122,611,1.122,612,1.122,613,1.122,614,1.122,615,1.122,616,1.088,617,0.778,618,1.122,619,1.122,620,1.122,621,1.122,622,1.122,623,0.914,649,2.197,2675,3.733,2676,2.415,3358,2.415,3408,4.243,3409,4.243,3410,2.745,3411,2.745,3412,2.745,3413,2.745,3414,2.745]],["title/components/TabOrAccordionContainerComponent.html",[114,0.121,340,0.851]],["body/components/TabOrAccordionContainerComponent.html",[3,0.09,4,0.142,5,0.042,8,1.239,10,0.419,11,0.358,13,1.139,22,0.429,24,1.06,32,0.849,36,0.547,38,0.63,39,0.01,40,0.513,41,0.442,42,0.72,44,0.626,45,0.516,48,0.749,50,1.519,52,0.521,57,0.761,58,0.696,60,0.854,79,0.357,81,0.198,85,1.242,86,0.872,94,0.381,95,0.37,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.559,116,1.154,117,0.604,118,0.909,121,1.808,122,0.863,123,1.646,124,0.589,125,2.612,126,1.316,127,1.121,130,2.538,132,1.419,133,1.263,134,1.65,135,1.457,136,1.457,138,1.032,139,1.034,140,1.034,141,1.034,142,1.501,143,1.263,144,1.42,145,0.957,146,1.169,147,1.202,148,1.2,149,1.053,150,0.744,151,1.2,152,0.744,153,1.034,154,0.973,155,0.744,156,0.956,157,0.744,158,1.021,159,1.254,160,0.744,161,0.744,166,1.034,167,1.263,168,1.065,169,0.688,170,1.283,171,1.25,172,1.034,173,1.034,174,0.67,175,0.688,176,1.384,177,0.909,178,0.62,179,0.688,180,1.008,181,0.957,182,0.688,183,1.457,184,0.688,185,1.425,186,1.081,187,0.637,188,0.718,189,0.718,190,0.688,191,1.008,192,1.2,193,1.535,194,1.535,195,0.909,198,0.688,199,1.034,200,1.2,201,0.688,202,0.688,203,1.314,204,0.688,206,0.885,207,1.691,208,0.872,226,1.065,238,0.427,239,0.909,240,0.818,241,0.604,242,1.078,243,0.604,244,1.462,245,0.818,246,0.885,247,0.574,248,0.589,249,1.139,250,0.559,251,0.604,252,0.604,253,0.818,254,0.604,255,0.818,256,0.999,257,0.574,258,1.373,259,0.933,260,0.574,261,0.604,262,0.574,263,0.874,264,1.01,265,0.818,266,0.863,267,0.604,268,0.559,269,0.885,270,1.281,271,0.574,272,0.933,273,0.999,274,0.604,275,0.559,276,0.559,277,0.604,278,0.818,279,0.885,280,0.818,281,0.604,282,0.818,283,0.589,284,0.604,285,0.559,286,0.559,287,0.604,288,0.559,289,0.933,290,0.604,291,0.574,292,0.604,293,0.559,294,0.604,295,0.559,296,0.589,297,1.153,298,0.933,299,0.818,300,0.863,301,0.933,302,0.559,303,0.604,304,0.933,305,0.559,306,0.863,307,0.604,308,0.559,309,0.559,310,0.574,311,0.604,312,0.559,313,0.53,314,0.604,315,0.559,316,0.604,317,0.559,318,0.604,319,0.544,320,1.216,321,0.559,322,0.604,323,0.559,324,0.933,325,0.53,326,0.933,327,0.574,328,0.604,329,0.818,330,1.317,331,0.999,332,0.604,333,0.559,334,0.604,335,0.818,336,0.604,337,0.818,338,1.388,339,0.885,340,1.124,341,0.604,342,0.559,343,0.898,344,0.604,345,0.559,346,0.818,347,0.604,348,0.574,349,0.589,350,0.604,351,0.559,352,0.544,353,0.604,354,0.574,355,0.415,356,0.604,357,0.53,358,0.574,359,0.604,360,0.559,361,0.604,362,0.574,363,1.081,364,0.559,365,0.604,366,0.574,367,0.604,368,0.604,369,1.457,370,1.13,371,2.006,372,1.13,375,1.744,378,1.447,379,0.827,380,0.896,381,0.67,382,1.744,383,1.13,384,2.296,385,2.13,386,2.13,387,1.848,388,2.125,389,2.13,390,2.395,391,1.13,392,1.744,393,1.744,394,1.096,395,1.096,396,0.947,397,0.451,398,1.09,399,0.604,400,1.096,401,2.188,402,1.13,403,2.735,404,1.744,405,1.003,406,1.691,407,1.504,408,0.947,409,1.13,410,1.13,411,1.13,412,1.13,413,1.13,414,1.744,415,1.13,416,0.921,417,1.13,418,1.13,419,1.13,420,1.032,421,1.032,422,1.032,423,0.947,424,1.13,425,1.13,426,1.13,427,1.13,428,1.744,429,1.13,430,1.13,431,1.13,432,1.13,433,2.066,434,1.691,435,1.13,436,1.185,437,2.066,438,1.13,439,2.004,440,0.921,441,2.322,442,1.13,443,1.736,444,2.13,445,1.13,446,1.6,447,1.13,448,1.13,449,1.13,450,1.13,451,1.13,452,1.946,453,1.744,454,1.13,455,1.13,456,1.13,457,1.13,458,1.13,459,1.13,460,1.13,461,1.09,462,1.13,463,1.744,464,1.744,465,1.13,466,1.13,467,1.13,468,1.13,469,1.13,470,1.13,471,1.096,472,1.462,473,1.13,474,1.13,475,1.744,476,2.735,477,2.13,478,2.13,479,1.744,480,1.504,481,2.066,482,1.383,483,2.764,484,2.13,485,1.13,486,1.13,487,1.744,488,1.744,489,1.13,490,2.764,491,1.744,492,1.13,493,1.13,494,1.13,495,1.13,496,2.13,497,1.13,498,2.395,499,1.13,500,1.13,501,1.13,502,1.13,503,0.975,504,0.975,505,1.13,506,1.003,507,1.13,508,1.096,509,1.13,510,1.096,511,1.13,512,1.032,513,1.032,514,1.096,515,1.096,516,0.896,517,1.096,518,2.13,519,1.744,520,1.13,521,0.947,522,0.696,523,0.975,524,1.096,525,0.896,526,1.13,527,1.13,528,0.805,529,1.063,530,1.744,531,1.13,532,1.13,533,1.13,534,1.13,535,1.13,536,1.13,537,1.13,538,2.13,539,1.13,540,1.13,541,1.13,542,1.13,543,1.744,544,1.13,545,1.13,546,1.422,547,1.13,548,1.096,549,1.13,550,1.13,551,1.096,552,1.13,553,1.13,554,1.13,555,1.744,556,1.744,557,0.763,558,1.13,559,1.096,560,1.096,561,1.032,562,1.096,563,1.13,564,1.096,565,1.13,566,1.13,567,1.13,568,1.13,569,1.13,570,1.13,571,1.13,572,1.13,573,1.744,574,1.744,575,1.744,576,1.744,577,1.744,578,1.691,579,1.148,580,1.13,581,1.032,582,1.13,583,1.13,584,0.921,585,1.032,586,1.744,587,1.13,588,1.13,589,1.13,590,2.13,591,1.13,592,1.13,593,1.13,594,1.13,595,1.13,596,1.13,597,1.13,598,1.13,599,1.096,600,1.13,601,1.13,602,1.13,603,1.063,604,1.13,605,1.13,606,1.096,607,1.13,608,1.13,609,0.975,610,1.13,611,1.13,612,1.13,613,1.13,614,1.13,615,1.13,616,1.096,617,0.784,618,1.13,619,1.13,620,1.13,621,1.13,622,1.13,623,0.921,649,2.214,3415,4.269,3416,2.766,3417,2.766]],["title/components/TextAreaComponent.html",[114,0.121,342,0.896]],["body/components/TextAreaComponent.html",[3,0.124,4,0.104,5,0.057,8,1.188,10,0.471,11,0.455,13,0.835,22,0.545,24,1.019,36,0.579,38,0.779,39,0.01,40,0.517,41,0.473,42,0.81,44,0.662,45,0.713,48,0.782,50,1.642,52,0.77,57,1.005,58,0.823,60,0.86,79,0.351,81,0.273,94,0.526,95,0.511,96,0.256,97,0.135,105,0.321,111,0.004,112,0.006,113,0.004,114,0.22,115,0.772,116,1.067,117,0.835,118,1.154,121,1.778,122,1.096,123,1.661,124,0.813,126,1.183,127,1.116,130,2.729,132,1.382,133,1.314,134,1.805,135,1.451,136,1.451,139,1.314,140,1.314,141,1.663,142,1.806,143,1.528,144,1.528,145,1.216,146,1.216,147,1.297,148,1.248,149,1.465,150,1.027,151,1.248,152,1.027,153,0.926,154,0.713,155,1.027,156,0.885,157,1.027,158,1.027,159,0.885,160,1.027,161,1.027,164,1.514,166,0.926,167,1.314,168,1.439,169,0.95,170,1.209,171,1.013,172,0.926,173,0.926,174,0.926,175,0.95,176,1.281,177,0.813,178,1.216,179,0.95,180,0.902,181,1.216,182,0.95,183,0.879,184,0.95,185,1.649,186,0.792,187,0.838,188,0.945,189,0.945,190,0.95,191,0.902,192,0.879,193,0.926,194,1.314,195,0.813,198,0.95,199,0.926,200,0.879,201,0.95,202,0.95,203,0.856,204,0.95,206,0.792,214,2.424,216,2.424,221,2.872,238,0.59,239,1.154,240,1.04,241,0.835,242,1.057,243,0.835,244,1.645,245,0.732,246,0.792,247,0.792,248,0.813,249,1.378,250,0.772,251,0.835,252,0.835,253,0.732,254,0.835,255,0.732,256,0.732,257,0.792,258,1.525,259,1.185,260,0.792,261,0.835,262,0.792,263,1.057,264,1.086,265,0.732,266,0.772,267,0.835,268,0.772,269,1.125,270,1.5,271,0.792,272,1.185,273,0.732,274,0.835,275,0.772,276,0.772,277,0.835,278,0.732,279,0.792,280,0.732,281,0.835,282,0.732,283,0.813,284,0.835,285,0.772,286,0.772,287,0.835,288,0.772,289,1.185,290,0.835,291,0.792,292,0.835,293,0.772,294,0.835,295,1.096,296,1.154,297,1.364,298,1.185,299,0.732,300,0.772,301,1.185,302,0.772,303,0.835,304,1.185,305,0.772,306,1.096,307,0.835,308,0.772,309,0.772,310,0.792,311,0.835,312,0.772,313,0.732,314,0.835,315,0.772,316,0.835,317,0.772,318,0.835,319,0.752,320,1.504,321,0.772,322,0.835,323,1.274,324,1.185,325,0.732,326,1.185,327,0.792,328,0.835,329,0.732,330,0.752,331,0.732,332,0.835,333,0.772,334,0.835,335,0.732,336,0.835,337,0.732,338,0.792,339,0.792,340,0.732,341,0.835,342,1.387,343,0.658,344,0.835,345,1.096,346,0.732,347,0.835,348,0.792,349,0.813,350,0.835,351,0.772,352,0.752,353,0.835,354,0.792,355,0.573,356,0.835,357,0.732,358,0.792,359,0.835,360,0.772,361,0.835,362,0.792,363,1.308,364,0.772,365,0.835,366,0.792,367,0.835,368,0.835,369,1.451,371,2.152,378,0.792,379,1.141,380,1.238,381,1.663,398,0.975,399,0.835,436,0.676,443,2.509,446,1.172,461,1.609,522,0.623,557,2.079,609,1.911,617,1.787,978,3.551,991,1.346,1232,4.935,1234,3.765,1235,3.209,1236,3.209,1237,3.417,1238,3.369,1239,3.209,1241,2.07,1245,3.72,1246,2.717,1247,2.07,1248,1.988,1249,1.913,1250,2.07,1251,2.373,1252,1.913,1255,1.78,1371,2.373,1421,2.939,1422,2.26,1423,2.373,1424,2.26,1425,2.373,1434,2.16,1435,2.16,1436,2.16,1437,2.16,1657,3.731,1658,2.373,2034,4.129,2047,2.832,2048,2.832,2049,2.832,2050,2.832,2051,2.832,2052,2.832,2053,2.832,2055,2.373,2524,2.26,2557,2.832,2558,4.377,2559,2.832,2561,4.021,2563,2.373,2564,2.832,2565,5.583,2566,4.675,2567,2.832,2568,4.021,2569,4.021,2570,4.021,2571,4.021,2572,4.021,2573,3.765,2574,4.021,2575,4.021,2576,5.374,2577,2.832,2578,4.021,2579,4.021,2580,4.021,2581,4.377,2582,4.021,3418,3.82,3419,3.82]],["title/components/TextBlockComponent.html",[114,0.121,343,0.764]],["body/components/TextBlockComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.42,11,0.36,13,1.388,22,0.431,24,1.061,36,0.541,38,0.563,39,0.01,40,0.51,41,0.443,42,0.683,44,0.632,45,0.52,48,0.733,50,1.521,52,0.34,57,0.824,58,0.727,60,0.855,79,0.358,81,0.199,85,1.249,86,0.878,94,0.383,95,0.372,96,0.269,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.231,115,0.563,116,1.031,117,0.609,118,0.914,121,1.809,122,0.867,123,1.646,124,0.593,125,2.618,126,1.318,127,1.125,130,2.975,132,1.42,133,1.269,134,1.653,135,1.462,136,1.462,138,1.04,139,1.04,140,1.04,141,1.04,142,1.505,143,1.269,144,1.426,145,0.962,146,1.174,147,1.205,148,1.205,149,1.058,150,0.749,151,1.205,152,0.749,153,1.04,154,0.978,155,0.749,156,0.96,157,0.749,158,0.991,159,1.256,160,0.749,161,0.749,166,1.04,167,1.269,168,1.069,169,0.693,170,1.287,171,1.253,172,1.04,173,1.04,174,0.675,175,0.693,176,1.389,177,0.914,178,0.625,179,0.693,180,1.014,181,0.962,182,0.693,183,1.462,184,0.693,185,1.429,186,1.086,187,0.639,188,0.721,189,0.721,190,0.693,191,1.014,192,1.205,193,1.54,194,1.54,195,0.914,198,0.693,199,1.04,200,1.205,201,0.693,202,0.693,203,1.319,204,0.693,206,0.89,207,1.701,208,0.878,226,1.069,238,0.43,239,0.914,240,0.823,241,0.609,242,1.081,243,0.609,244,1.466,245,0.823,246,0.89,247,0.578,248,0.593,249,1.144,250,0.563,251,0.609,252,0.609,253,0.823,254,0.609,255,0.823,256,1.004,257,0.578,258,1.377,259,0.938,260,0.578,261,0.609,262,0.578,263,0.878,264,1.013,265,0.823,266,0.867,267,0.609,268,0.563,269,0.89,270,1.285,271,0.578,272,0.938,273,1.004,274,0.609,275,0.563,276,0.563,277,0.609,278,0.823,279,0.89,280,0.823,281,0.609,282,0.823,283,0.593,284,0.609,285,0.563,286,0.563,287,0.609,288,0.563,289,0.938,290,0.609,291,0.578,292,0.609,293,0.563,294,0.609,295,0.563,296,0.593,297,1.205,298,0.938,299,0.823,300,0.867,301,0.938,302,0.563,303,0.609,304,0.938,305,0.563,306,0.867,307,0.609,308,0.563,309,0.563,310,0.578,311,0.609,312,0.563,313,0.534,314,0.609,315,0.563,316,0.609,317,0.563,318,0.609,319,0.548,320,1.22,321,0.563,322,0.609,323,0.563,324,0.938,325,0.534,326,0.938,327,0.578,328,0.609,329,0.823,330,1.321,331,1.004,332,0.609,333,0.563,334,0.609,335,0.823,336,0.609,337,0.823,338,1.392,339,0.89,340,0.823,341,0.609,342,0.563,343,1.156,344,0.609,345,0.563,346,0.823,347,0.609,348,0.578,349,0.593,350,0.609,351,0.563,352,0.548,353,0.609,354,0.578,355,0.418,356,0.609,357,0.534,358,0.578,359,0.609,360,0.563,361,0.609,362,0.578,363,1.086,364,0.563,365,0.609,366,0.578,367,0.609,368,0.609,369,1.205,370,1.138,371,2.009,372,1.138,375,1.754,378,1.451,379,0.832,380,0.903,381,0.675,382,1.754,383,1.138,384,1.898,385,2.14,386,2.14,387,1.855,388,2.133,389,2.14,390,2.404,391,1.138,392,1.754,393,1.754,394,1.104,395,1.104,396,0.954,397,0.454,398,1.095,399,0.609,400,1.104,401,2.196,402,1.138,403,2.743,404,1.754,405,1.01,406,1.701,407,1.512,408,0.954,409,1.138,410,1.138,411,1.138,412,1.138,413,1.138,414,1.754,415,1.138,416,0.928,417,1.138,418,1.138,419,1.138,420,1.04,421,1.04,422,1.04,423,0.954,424,1.138,425,1.138,426,1.138,427,1.138,428,1.754,429,1.138,430,1.138,431,1.138,432,1.138,433,2.075,434,1.701,435,1.138,436,1.188,437,2.075,438,1.138,439,2.013,440,0.928,441,2.331,442,1.138,443,1.744,444,2.14,445,1.138,446,1.95,447,1.138,448,1.138,449,1.138,450,1.138,451,1.138,452,1.954,453,1.754,454,1.138,455,1.138,456,1.138,457,1.138,458,1.138,459,1.138,460,1.138,461,1.095,462,1.138,463,1.754,464,1.754,465,1.138,466,1.138,467,1.138,468,1.138,469,1.138,470,1.138,471,1.104,472,1.47,473,1.138,474,1.138,475,1.138,476,1.754,477,1.138,478,1.138,479,1.138,480,1.512,481,1.701,482,1.391,483,2.331,484,2.14,485,1.138,486,1.138,487,1.754,488,1.754,489,1.138,490,2.771,491,1.754,492,1.138,493,1.138,494,1.138,495,1.138,496,2.14,497,1.138,498,1.138,499,1.138,500,1.138,501,1.138,502,1.138,503,0.981,504,0.981,505,1.138,506,1.01,507,1.138,508,1.104,509,1.754,510,1.104,511,1.138,512,1.04,513,1.04,514,1.104,515,1.104,516,0.903,517,1.104,518,2.14,519,1.754,520,1.138,521,0.954,522,0.454,523,0.981,524,1.104,525,0.903,526,1.138,527,1.138,528,0.81,529,1.071,530,1.754,531,1.138,532,1.138,533,1.138,534,1.138,535,1.138,536,1.138,537,1.138,538,2.14,539,1.138,540,1.138,541,1.138,542,1.138,543,1.754,544,1.138,545,1.138,546,1.43,547,1.138,548,1.104,549,1.138,550,1.138,551,1.104,552,1.138,553,1.138,554,1.138,555,1.754,556,1.754,557,0.769,558,1.138,559,1.104,560,1.104,561,1.04,562,1.104,563,1.138,564,1.104,565,1.138,566,1.138,567,1.138,568,1.138,569,1.138,570,1.138,571,1.138,572,1.138,573,1.754,574,1.754,575,1.754,576,1.754,577,1.754,578,1.701,579,1.154,580,1.138,581,1.04,582,1.138,583,1.138,584,0.928,585,1.04,586,1.754,587,1.138,588,1.138,589,1.138,590,2.14,591,1.138,592,1.138,593,1.138,594,1.138,595,1.138,596,1.138,597,1.138,598,1.138,599,1.104,600,1.138,601,1.138,602,1.138,603,1.071,604,1.138,605,1.138,606,1.104,607,1.138,608,1.138,609,0.981,610,1.138,611,1.138,612,1.138,613,1.138,614,1.138,615,1.138,616,1.104,617,0.789,618,1.138,619,1.138,620,1.138,621,1.138,622,1.138,623,0.928,3420,2.785,3421,2.785]],["title/components/TextFieldComponent.html",[114,0.121,345,0.896]],["body/components/TextFieldComponent.html",[3,0.125,4,0.106,5,0.058,8,1.192,10,0.473,11,0.459,13,0.845,22,0.55,24,1.021,36,0.577,38,0.783,39,0.01,40,0.518,41,0.472,42,0.813,44,0.663,45,0.722,48,0.776,50,1.644,52,0.668,57,1.009,58,0.826,60,0.863,79,0.353,81,0.276,94,0.532,95,0.517,96,0.257,97,0.135,105,0.325,111,0.004,112,0.006,113,0.004,114,0.217,115,0.781,116,1.077,117,0.845,118,1.164,121,1.781,122,1.105,123,1.662,124,0.823,126,1.188,127,1.123,130,2.566,132,1.364,133,1.326,134,1.809,135,1.461,136,1.461,139,1.326,140,1.326,141,1.672,142,1.811,143,1.538,144,1.538,145,1.226,146,1.226,147,1.303,148,1.259,149,1.471,150,1.039,151,1.259,152,1.039,153,0.937,154,0.722,155,1.039,156,0.892,157,1.039,158,1.032,159,0.892,160,1.039,161,1.039,164,1.532,166,0.937,167,1.326,168,1.443,169,0.961,170,1.217,171,1.021,172,0.937,173,0.937,174,0.937,175,0.961,176,1.292,177,0.823,178,1.226,179,0.961,180,0.913,181,1.226,182,0.961,183,0.89,184,0.961,185,1.655,186,0.802,187,0.775,188,0.874,189,0.874,190,0.961,191,0.913,192,0.89,193,0.937,194,1.326,195,0.823,198,0.961,199,0.937,200,0.89,201,0.961,202,0.961,203,0.867,204,0.961,206,0.802,214,2.44,216,2.44,221,2.886,238,0.597,239,1.164,240,1.049,241,0.845,242,1.062,243,0.845,244,1.652,245,0.741,246,0.802,247,0.802,248,0.823,249,1.387,250,0.781,251,0.845,252,0.845,253,0.741,254,0.845,255,0.741,256,0.741,257,0.802,258,1.53,259,1.195,260,0.802,261,0.845,262,0.802,263,1.064,264,1.094,265,0.741,266,0.781,267,0.845,268,0.781,269,1.134,270,1.508,271,0.802,272,1.195,273,0.741,274,0.845,275,0.781,276,0.781,277,0.845,278,0.741,279,0.802,280,0.741,281,0.845,282,0.741,283,0.823,284,0.845,285,0.781,286,0.781,287,0.845,288,0.781,289,1.195,290,0.845,291,0.802,292,0.845,293,0.781,294,0.845,295,1.105,296,1.164,297,1.339,298,1.195,299,0.741,300,0.781,301,1.195,302,0.781,303,0.845,304,1.195,305,0.781,306,1.105,307,0.845,308,0.781,309,0.781,310,0.802,311,0.845,312,0.781,313,0.741,314,0.845,315,0.781,316,0.845,317,0.781,318,0.845,319,0.761,320,1.51,321,0.781,322,0.845,323,1.283,324,1.195,325,0.741,326,1.195,327,0.802,328,0.845,329,0.741,330,0.761,331,0.741,332,0.845,333,0.781,334,0.845,335,0.741,336,0.845,337,0.741,338,0.802,339,0.802,340,0.741,341,0.845,342,1.105,343,0.666,344,0.845,345,1.394,346,0.741,347,0.845,348,0.802,349,0.823,350,0.845,351,0.781,352,0.761,353,0.845,354,0.802,355,0.58,356,0.845,357,0.741,358,0.802,359,0.845,360,0.781,361,0.845,362,0.802,363,1.316,364,0.781,365,0.845,366,0.802,367,0.845,368,0.845,369,0.89,371,2.155,378,0.802,379,1.155,380,1.253,381,1.538,398,0.987,399,0.845,436,0.684,443,2.518,446,1.187,461,1.62,557,1.752,609,1.927,617,1.55,978,3.582,991,1.362,1232,4.946,1234,3.797,1235,3.236,1236,3.236,1237,3.947,1238,3.397,1239,3.236,1241,2.095,1245,3.74,1246,2.74,1247,2.095,1248,2.012,1249,1.937,1250,2.095,1251,2.401,1252,1.937,1255,1.801,1371,2.401,1421,2.964,1422,2.287,1423,2.401,1424,2.287,1425,2.401,1434,2.186,1435,2.186,1436,2.186,1437,2.186,1657,3.756,1658,2.401,2034,4.519,2047,2.866,2048,2.866,2049,2.866,2050,2.866,2051,2.866,2052,2.866,2053,2.866,2055,2.401,2524,2.287,2557,2.866,2558,3.797,2559,2.866,2561,4.055,2563,2.401,2564,2.866,2565,5.605,2566,4.706,2567,2.866,2568,4.055,2569,4.055,2570,4.055,2571,4.055,2572,4.055,2573,3.797,2574,4.055,2575,4.055,2576,5.116,2577,2.866,2578,4.055,2579,4.055,2580,4.055,2581,2.684,2582,4.055]],["title/components/ToggleComponent.html",[114,0.121,346,0.851]],["body/components/ToggleComponent.html",[3,0.091,4,0.144,5,0.042,8,1.242,10,0.421,11,0.362,13,1.149,22,0.434,24,1.062,36,0.538,38,0.566,39,0.01,40,0.51,41,0.44,42,0.685,44,0.628,45,0.524,48,0.734,50,1.523,52,0.343,57,0.766,58,0.7,60,0.857,79,0.359,81,0.201,85,1.256,86,0.885,94,0.386,95,0.375,96,0.27,97,0.144,105,0.731,111,0.003,112,0.005,113,0.003,114,0.231,115,0.567,116,1.036,117,0.613,118,0.919,121,1.811,122,0.872,123,1.647,124,0.598,125,2.625,126,1.32,127,1.129,130,2.551,132,1.421,133,1.275,134,1.656,135,1.467,136,1.467,138,1.048,139,1.046,140,1.046,141,1.046,142,1.51,143,1.275,144,1.431,145,0.968,146,1.18,147,1.208,148,1.211,149,1.063,150,0.755,151,1.211,152,0.755,153,1.046,154,0.982,155,0.755,156,0.964,157,0.755,158,0.994,159,1.258,160,0.755,161,0.755,166,1.046,167,1.275,168,1.074,169,0.698,170,1.291,171,1.257,172,1.046,173,1.046,174,0.68,175,0.698,176,1.395,177,0.919,178,0.629,179,0.698,180,1.02,181,0.968,182,0.698,183,1.467,184,0.698,185,1.433,186,1.091,187,0.642,188,0.724,189,0.724,190,0.698,191,1.02,192,1.211,193,1.7,194,1.545,195,0.919,198,0.698,199,1.046,200,1.211,201,0.698,202,0.698,203,1.324,204,0.698,206,0.895,207,1.711,208,0.885,226,1.074,238,0.433,239,0.919,240,0.828,241,0.613,242,1.083,243,0.613,244,1.471,245,0.828,246,0.895,247,0.582,248,0.598,249,1.149,250,0.567,251,0.613,252,0.613,253,0.828,254,0.613,255,0.828,256,1.009,257,0.582,258,1.38,259,0.943,260,0.582,261,0.613,262,0.582,263,0.882,264,1.018,265,0.828,266,0.872,267,0.613,268,0.567,269,0.895,270,1.291,271,0.582,272,0.943,273,1.009,274,0.613,275,0.567,276,0.567,277,0.613,278,0.828,279,0.895,280,0.828,281,0.613,282,0.828,283,0.598,284,0.613,285,0.567,286,0.567,287,0.613,288,0.567,289,0.943,290,0.613,291,0.582,292,0.613,293,0.567,294,0.613,295,0.567,296,0.598,297,1.16,298,0.943,299,0.828,300,0.872,301,0.943,302,0.567,303,0.613,304,0.943,305,0.567,306,0.872,307,0.613,308,0.567,309,0.567,310,0.582,311,0.613,312,0.567,313,0.538,314,0.613,315,0.567,316,0.613,317,0.567,318,0.613,319,0.553,320,1.225,321,0.567,322,0.613,323,0.567,324,0.943,325,0.538,326,0.943,327,0.582,328,0.613,329,0.828,330,1.325,331,1.009,332,0.613,333,0.567,334,0.613,335,0.828,336,0.613,337,0.828,338,1.396,339,0.895,340,0.828,341,0.613,342,0.567,343,0.906,344,0.613,345,0.567,346,1.132,347,0.613,348,0.582,349,0.598,350,0.613,351,0.567,352,0.553,353,0.613,354,0.582,355,0.421,356,0.613,357,0.538,358,0.582,359,0.613,360,0.567,361,0.613,362,0.582,363,1.091,364,0.567,365,0.613,366,0.582,367,0.613,368,0.613,369,0.994,370,1.147,371,2.044,372,1.147,375,1.764,378,1.455,379,0.839,380,0.91,381,0.68,382,1.764,383,1.147,384,1.908,385,2.15,386,2.15,387,1.659,388,2.142,389,2.15,390,2.414,391,1.147,392,1.764,393,1.764,394,1.112,395,1.112,396,0.961,397,0.458,398,1.102,399,0.613,400,1.112,401,2.205,402,1.147,403,2.751,404,1.764,405,1.018,406,1.711,407,1.521,408,0.961,409,1.147,410,1.147,411,1.147,412,1.147,413,1.147,414,1.764,415,1.147,416,0.935,417,1.147,418,1.147,419,1.147,420,1.048,421,1.048,422,1.048,423,0.961,424,1.147,425,1.147,426,1.147,427,1.147,428,1.764,429,1.147,430,1.147,431,1.147,432,1.147,433,2.085,434,1.711,435,1.147,436,1.192,437,2.085,438,1.147,439,2.023,440,0.935,441,2.341,442,1.147,443,1.753,444,2.15,445,1.147,446,1.615,447,1.147,448,1.147,449,1.147,450,1.147,451,1.147,452,1.964,453,1.764,454,1.147,455,1.147,456,1.147,457,1.147,458,1.147,459,1.147,460,1.147,461,1.102,462,1.147,463,1.764,464,1.764,465,1.147,466,1.147,467,1.147,468,1.147,469,1.147,470,1.147,471,1.112,472,1.479,473,1.147,474,1.147,475,1.147,476,1.764,477,1.147,478,1.147,479,1.147,480,1.521,481,1.711,482,1.399,483,2.341,484,2.15,485,1.147,486,1.147,487,1.764,488,1.764,489,1.147,490,2.779,491,1.764,492,1.147,493,1.147,494,1.147,495,1.147,496,2.15,497,1.147,498,1.147,499,1.147,500,1.147,501,1.147,502,1.147,503,0.989,504,0.989,505,1.147,506,1.018,507,1.147,508,1.112,509,1.147,510,1.112,511,1.147,512,1.048,513,1.048,514,1.112,515,1.112,516,0.91,517,1.112,518,2.15,519,1.764,520,1.147,521,0.961,522,0.458,523,0.989,524,1.112,525,0.91,526,1.147,527,1.147,528,0.817,529,1.079,530,1.764,531,1.147,532,1.147,533,1.147,534,1.147,535,1.147,536,1.147,537,1.147,538,2.15,539,1.147,540,1.147,541,1.147,542,1.147,543,1.764,544,1.147,545,1.147,546,1.438,547,1.147,548,1.112,549,1.147,550,1.147,551,1.112,552,1.147,553,1.147,554,1.147,555,1.764,556,1.764,557,0.775,558,1.147,559,1.112,560,1.112,561,1.048,562,1.112,563,1.147,564,1.112,565,1.147,566,1.147,567,1.147,568,1.147,569,1.147,570,1.147,571,1.147,572,1.147,573,1.764,574,1.764,575,1.764,576,1.764,577,1.764,578,1.711,579,1.161,580,1.147,581,1.048,582,1.147,583,1.147,584,0.935,585,1.048,586,1.764,587,1.147,588,1.147,589,1.147,590,2.15,591,1.147,592,1.147,593,1.147,594,1.147,595,1.147,596,1.147,597,1.147,598,1.147,599,1.112,600,1.147,601,1.147,602,1.147,603,1.079,604,1.147,605,1.147,606,1.112,607,1.147,608,1.147,609,0.989,610,1.147,611,1.147,612,1.147,613,1.147,614,1.147,615,1.147,616,1.112,617,0.795,618,1.147,619,1.147,620,1.147,621,1.147,622,1.147,623,0.935,3422,2.807]],["title/modules/TransferOwnerModule.html",[916,1.478,3423,3.289]],["body/modules/TransferOwnerModule.html",[3,0.212,4,0.179,5,0.098,39,0.01,79,0.45,81,0.467,82,2.062,96,0.212,97,0.111,111,0.007,112,0.009,113,0.007,238,1.009,348,1.872,397,1.067,399,1.429,631,2.672,916,2.178,918,2.945,919,2.848,920,3.948,921,3.341,922,3.586,923,3.157,928,3.928,929,3.586,930,2.945,931,2.848,933,3.465,934,3.855,935,3.855,936,2.848,937,3.855,938,4.006,939,4.006,944,3.404,3423,6.614,3424,5.753,3425,5.753,3426,6.539,3427,5.753,3428,6.539,3429,6.539]],["title/injectables/TranslationService.html",[0,1.193,35,1.871]],["body/injectables/TranslationService.html",[0,1.887,2,2.711,3,0.182,4,0.153,5,0.084,7,3.044,10,0.351,11,0.589,12,3.019,17,2.598,18,3.187,22,0.705,32,2.154,35,2.959,36,0.565,38,0.823,39,0.01,40,0.479,41,0.454,42,0.936,44,0.594,48,0.752,52,0.857,57,0.729,70,2.368,79,0.41,80,1.55,81,0.401,88,2.332,93,3.968,96,0.182,97,0.095,105,0.642,111,0.006,112,0.008,113,0.006,135,1.292,153,1.361,158,0.994,159,0.916,187,0.857,188,0.966,189,0.966,226,1.391,300,1.418,355,0.843,436,1.242,522,0.916,584,1.871,642,4.941,673,3.803,674,3.488,833,4.941,839,5.202,862,2.337,871,5.202,886,2.923,893,6.126,897,4.496,901,4.941,911,3.898,943,2.813,1084,2.446,1190,3.323,1515,5.312,1522,5.564,1525,5.564,1738,4.164,2078,6.172,2155,3.898,2334,4.164,2823,3.898,2871,3.898,3296,4.941,3314,5.202,3430,8.704,3431,7.016,3432,7.016,3433,5.616,3434,8.415,3435,7.016,3436,7.016,3437,5.616,3438,5.616,3439,5.616,3440,4.941,3441,5.616,3442,5.616,3443,5.616,3444,5.616,3445,5.616,3446,5.616,3447,4.164,3448,5.616,3449,5.616,3450,5.616,3451,5.616,3452,5.616,3453,5.616,3454,4.164,3455,5.202,3456,7.016,3457,5.617,3458,5.616,3459,4.941,3460,3.898,3461,7.652,3462,7.016,3463,8.537,3464,8.015,3465,4.496,3466,6.126,3467,5.616,3468,5.616,3469,5.616,3470,5.616,3471,5.616,3472,5.616,3473,6.172,3474,5.616,3475,7.016,3476,5.616,3477,5.616,3478,5.616,3479,5.616,3480,7.016,3481,5.616,3482,5.616,3483,5.616]],["title/components/TreeNodeCheckboxComponent.html",[114,0.121,351,0.896]],["body/components/TreeNodeCheckboxComponent.html",[3,0.18,4,0.152,5,0.084,10,0.348,36,0.457,39,0.01,40,0.436,41,0.376,44,0.541,45,1.039,79,0.357,81,0.398,96,0.226,97,0.095,111,0.006,112,0.008,113,0.006,114,0.218,115,1.124,116,1.373,117,1.216,118,1.752,122,1.409,123,1.68,124,1.184,126,1.138,127,1.349,145,1.564,156,0.908,238,0.859,239,1.485,240,1.337,241,1.216,242,1.165,243,1.216,244,1.834,245,1.067,246,1.154,247,1.154,248,1.184,249,1.665,250,1.124,251,1.216,252,1.216,253,1.067,254,1.216,255,1.067,256,1.067,257,1.154,258,1.71,259,1.524,260,1.154,261,1.216,262,1.154,263,1.278,264,1.313,265,1.067,266,1.124,267,1.216,268,1.124,269,1.447,270,1.745,271,1.154,272,1.524,273,1.067,274,1.216,275,1.124,276,1.124,277,1.216,278,1.067,279,1.154,280,1.067,281,1.216,282,1.067,283,1.184,284,1.216,285,1.124,286,1.124,287,1.216,288,1.124,289,1.524,290,1.216,291,1.154,292,1.216,293,1.124,294,1.216,295,1.124,296,1.184,297,1.313,298,1.524,299,1.067,300,1.124,301,1.524,302,1.124,303,1.216,304,1.524,305,1.124,306,1.409,307,1.216,308,1.124,309,1.124,310,1.154,311,1.216,312,1.124,313,1.067,314,1.216,315,1.124,316,1.216,317,1.124,318,1.216,319,1.095,320,1.657,321,1.124,322,1.216,323,1.124,324,1.524,325,1.067,326,1.524,327,1.154,328,1.216,329,1.067,330,1.095,331,1.067,332,1.216,333,1.124,334,1.216,335,1.067,336,1.216,337,1.067,338,1.154,339,1.154,340,1.067,341,1.216,342,1.124,343,0.958,344,1.216,345,1.124,346,1.067,347,1.216,348,1.154,349,1.184,350,1.216,351,1.614,352,1.71,353,1.216,354,1.154,355,0.835,356,1.216,357,1.067,358,1.154,359,1.216,360,1.124,361,1.216,362,1.154,363,1.58,364,1.124,365,1.216,366,1.154,367,1.216,368,1.216,378,1.58,3325,4.894,3484,7.619,3485,5.563,3486,6.975,3487,6.975,3488,6.136,3489,7.619,3490,5.563,3491,7.619,3492,5.563,3493,5.563,3494,5.563]],["title/classes/User.html",[97,0.075,355,0.666]],["body/classes/User.html",[3,0.209,4,0.176,5,0.097,10,0.403,11,0.64,36,0.579,39,0.01,40,0.525,41,0.484,44,0.71,96,0.272,97,0.143,111,0.007,112,0.009,113,0.007,158,0.913,177,1.73,355,1.287,546,2.146,625,2.088,722,4.513,984,2.336,2126,3.644,2134,4.071,2135,4.595,2166,6.599,2167,3.812,2168,6.357,2173,3.787,2174,4.595,2175,3.923,2176,4.002,2177,3.812,3495,6.443,3496,6.443,3497,6.443,3498,6.443,3499,6.443,3500,6.443,3501,6.443,3502,6.443]],["title/interfaces/UserForm.html",[3503,2.905,3504,3.289]],["body/interfaces/UserForm.html",[3,0.196,4,0.165,5,0.091,10,0.378,11,0.617,39,0.01,40,0.514,41,0.472,44,0.706,48,0.567,58,0.629,60,0.672,79,0.421,92,3.149,94,0.833,95,0.809,96,0.266,105,0.708,111,0.009,112,0.008,113,0.007,154,1.477,156,1.198,171,1.371,186,1.255,226,1.438,242,0.882,397,0.987,436,1.071,512,2.952,579,1.627,698,2.819,1084,3.445,1316,3.961,2127,4.485,2134,4.121,2135,4.473,2173,3.833,2174,4.652,2175,2.921,2212,5.445,2353,4.485,2366,4.843,2830,4.485,3266,6.099,3503,3.961,3504,5.445,3505,4.485,3506,5.322,3507,7.237,3508,7.345,3509,6.049,3510,4.485,3511,5.322,3512,4.843,3513,4.843,3514,5.322,3515,5.322,3516,5.322,3517,5.322,3518,5.322,3519,5.322,3520,5.322,3521,5.322,3522,5.322,3523,5.322,3524,4.843,3525,5.322,3526,7.629,3527,5.322,3528,6.462,3529,6.462,3530,5.322,3531,5.322,3532,5.322,3533,5.322,3534,5.322,3535,5.322,3536,6.049,3537,6.049,3538,6.049,3539,6.049,3540,6.049,3541,6.049]],["title/interfaces/UserForm-1.html",[991,1.312,3503,2.438,3504,2.76]],["body/interfaces/UserForm-1.html",[3,0.203,4,0.171,5,0.094,10,0.392,11,0.63,39,0.01,40,0.521,41,0.475,44,0.706,48,0.588,58,0.652,60,0.696,79,0.384,92,3.263,96,0.26,105,0.674,111,0.007,112,0.008,113,0.007,154,1.401,156,1.023,171,1.401,186,1.3,226,1.364,242,0.914,397,1.023,512,2.801,1084,3.269,1316,4.105,2127,4.647,2134,4.17,2135,3.545,2173,3.879,2174,4.708,2175,3.026,2212,5.563,2353,4.647,2366,5.018,2830,4.647,3266,6.172,3503,4.105,3504,5.563,3505,4.647,3507,7.324,3511,5.514,3512,5.018,3513,5.018,3514,5.514,3515,5.514,3516,5.514,3517,5.514,3518,5.514,3519,5.514,3520,5.514,3521,5.514,3522,5.514,3523,5.514,3524,5.018,3525,5.514,3526,7.684,3527,5.514,3528,6.602,3529,6.602,3530,5.514,3531,5.514,3532,5.514,3533,5.514,3534,5.514,3542,5.514]],["title/modules/UserProfileModule.html",[916,1.478,3543,3.289]],["body/modules/UserProfileModule.html",[3,0.211,4,0.178,5,0.098,39,0.01,79,0.453,81,0.466,82,2.054,96,0.211,97,0.111,111,0.007,112,0.009,113,0.007,238,1.005,354,1.871,397,1.063,399,1.423,631,2.662,916,2.17,918,2.933,919,2.837,920,3.941,921,3.445,922,3.578,923,3.145,928,3.924,929,3.578,930,2.933,931,2.837,933,3.457,934,3.846,935,3.846,936,2.837,937,3.846,938,3.996,939,3.996,943,3.263,944,3.391,2330,5.73,2332,5.73,3543,6.61,3544,5.73,3545,5.73,3546,6.514,3547,5.73,3548,6.514,3549,6.514]],["title/injectables/UserSimpleService.html",[0,1.193,2114,2.756]],["body/injectables/UserSimpleService.html",[0,1.685,2,2.275,3,0.153,4,0.129,5,0.071,8,0.94,9,3.86,10,0.295,11,0.526,12,3.106,13,1.369,14,3.543,15,4.233,16,3.543,17,2.531,18,3.177,19,3.2,20,3.543,21,3.138,22,0.63,24,0.981,25,3.981,26,3.396,27,3.815,28,3.981,29,3.543,30,3.543,31,3.025,32,1.923,33,2.554,36,0.592,38,0.922,39,0.01,40,0.537,41,0.482,42,0.922,44,0.646,48,0.828,49,4.752,50,1.638,51,2.788,52,0.575,53,2.554,54,3.664,55,3.396,56,2.788,57,0.813,58,0.652,59,2.554,60,0.523,61,2.788,62,2.788,63,2.665,64,2.788,65,3.543,66,2.665,67,2.788,68,2.665,69,2.788,70,1.987,71,2.788,72,2.788,73,2.788,74,2.788,75,2.788,76,2.788,77,2.788,78,2.788,79,0.419,80,1.301,81,0.337,82,1.486,83,2.554,84,2.275,87,2.927,88,2.183,92,2.453,96,0.153,97,0.08,98,2.36,99,2.122,102,2.196,105,0.714,107,3.879,108,4.612,110,4.221,111,0.005,112,0.007,113,0.005,187,0.765,188,0.863,189,0.863,355,1.23,522,0.769,852,3.493,853,5.562,869,3.085,1024,5.234,1192,5.689,1220,3.261,1224,4.145,1231,4.145,2114,3.892,2126,2.665,2134,4.023,2135,3.981,2177,4.925,3266,6.247,3460,3.271,3550,8.771,3551,4.712,3552,6.265,3553,6.265,3554,7.502,3555,7.502,3556,7.502,3557,6.265,3558,6.265,3559,7.502,3560,6.265,3561,6.265,3562,6.265,3563,6.265,3564,4.712,3565,6.265,3566,4.712,3567,4.712,3568,4.712,3569,4.712,3570,6.265,3571,4.712,3572,6.265,3573,4.712,3574,4.712,3575,6.265,3576,4.712,3577,6.265,3578,4.712,3579,4.712,3580,4.712,3581,4.712,3582,4.712,3583,4.712,3584,4.145,3585,4.712,3586,3.892,3587,6.265,3588,4.712,3589,4.712,3590,4.712,3591,4.712,3592,4.712,3593,7.039,3594,4.712,3595,4.712,3596,4.712,3597,4.712,3598,4.712,3599,4.712]],["title/injectables/UtilityService.html",[0,1.193,1358,2.509]],["body/injectables/UtilityService.html",[0,1.511,2,1.94,3,0.13,4,0.11,5,0.06,7,2.177,10,0.251,17,2.942,22,0.565,24,1.097,36,0.546,38,0.897,39,0.01,40,0.522,41,0.45,42,0.897,44,0.678,48,0.829,57,0.911,58,0.905,60,0.891,79,0.331,81,0.287,85,2.042,86,1.267,88,1.635,94,0.553,95,0.537,96,0.13,97,0.068,105,0.736,111,0.008,112,0.006,113,0.005,126,0.917,132,1.42,153,1.855,158,0.569,187,1.07,188,1.136,189,1.136,226,1.022,263,1.491,401,3.222,436,1.49,440,2.338,521,2.404,522,1.249,603,2.161,698,2.619,840,3.216,844,3.534,862,1.872,933,2.918,958,3.161,991,1.98,1084,2.448,1333,5.128,1358,3.178,1737,5.204,1761,3.49,1763,5.652,1772,2.978,1773,2.978,1782,5.675,1801,3.49,1824,5.477,2243,4.166,2359,3.68,2394,6.175,2395,6.175,2602,6.128,2746,4.944,2785,3.534,2836,2.978,3100,4.498,3447,5.675,3600,8.416,3601,5.619,3602,5.619,3603,5.619,3604,5.619,3605,5.619,3606,5.619,3607,5.619,3608,5.619,3609,5.619,3610,5.619,3611,5.619,3612,5.619,3613,7.019,3614,5.619,3615,4.017,3616,7.654,3617,8.416,3618,7.019,3619,7.019,3620,7.019,3621,5.619,3622,4.017,3623,4.872,3624,5.619,3625,5.619,3626,5.619,3627,5.619,3628,4.017,3629,7.654,3630,5.619,3631,6.481,3632,5.619,3633,4.017,3634,4.944,3635,5.619,3636,5.619,3637,4.017,3638,5.619,3639,7.387,3640,4.017,3641,5.619,3642,4.017,3643,5.619,3644,4.017,3645,5.619,3646,4.017,3647,4.017,3648,4.017,3649,5.619,3650,4.017,3651,3.534,3652,7.019,3653,4.017,3654,4.017,3655,4.017,3656,4.017,3657,5.619,3658,4.017,3659,4.017,3660,7.019,3661,7.654,3662,4.017,3663,4.017,3664,5.619,3665,4.017,3666,4.017,3667,4.017,3668,4.017,3669,4.017,3670,4.017,3671,4.017,3672,4.017,3673,5.619,3674,5.619,3675,4.017,3676,4.017,3677,4.017,3678,5.619,3679,4.017,3680,4.944,3681,4.017,3682,4.017,3683,4.017,3684,4.017,3685,5.619,3686,4.017,3687,4.017,3688,4.017,3689,6.481,3690,4.017,3691,4.017,3692,4.017,3693,4.017,3694,4.017,3695,4.017,3696,4.017,3697,5.619,3698,4.017]],["title/components/WorkspaceFieldComponent.html",[114,0.121,360,0.896]],["body/components/WorkspaceFieldComponent.html",[3,0.129,4,0.108,5,0.06,8,0.596,10,0.248,11,0.468,12,1.361,22,0.561,24,0.787,32,1.219,36,0.554,38,0.427,39,0.01,40,0.403,41,0.438,42,0.427,44,0.639,45,0.742,48,0.523,52,0.485,58,0.815,60,0.776,70,2.352,79,0.39,80,1.097,81,0.284,88,1.156,94,0.547,95,0.531,96,0.209,97,0.095,105,0.711,107,1.851,111,0.004,112,0.006,113,0.006,114,0.218,115,0.803,116,1.098,117,1.408,118,1.187,121,0.824,122,1.127,123,1.662,124,0.846,126,0.91,127,1.236,132,1.433,134,1.218,136,1.693,138,2.847,145,1.25,146,1.445,147,1.377,149,1.411,151,1.693,154,1.203,156,1.051,159,0.91,171,0.742,187,0.681,205,1.574,206,1.336,214,1.528,216,1.528,226,1.014,238,0.613,239,1.187,240,1.069,241,0.868,242,1.214,243,0.868,244,1.667,245,0.762,246,0.824,247,0.824,248,0.846,249,1.408,250,0.803,251,0.868,252,0.868,253,0.762,254,0.868,255,0.762,256,0.762,257,0.824,258,1.542,259,1.218,260,0.824,261,0.868,262,0.824,263,1.08,264,1.11,265,0.762,266,0.803,267,0.868,268,0.803,269,1.157,270,1.526,271,0.824,272,1.218,273,0.762,274,0.868,275,0.803,276,0.803,277,0.868,278,0.762,279,0.824,280,0.762,281,0.868,282,0.762,283,0.846,284,0.868,285,0.803,286,0.803,287,0.868,288,0.803,289,1.218,290,0.868,291,0.824,292,0.868,293,0.803,294,0.868,295,0.803,296,0.846,297,1.11,298,1.218,299,0.762,300,0.803,301,1.218,302,0.803,303,0.868,304,1.218,305,0.803,306,1.127,307,0.868,308,0.803,309,0.803,310,0.824,311,0.868,312,0.803,313,0.762,314,0.868,315,0.803,316,0.868,317,0.803,318,0.868,319,0.782,320,1.449,321,0.803,322,0.868,323,0.803,324,1.218,325,0.762,326,1.218,327,0.824,328,0.868,329,0.762,330,0.782,331,0.762,332,0.868,333,0.803,334,0.868,335,0.762,336,0.868,337,0.762,338,0.824,339,0.824,340,0.762,341,0.868,342,0.803,343,0.685,344,0.868,345,0.803,346,0.762,347,0.868,348,0.824,349,0.846,350,0.868,351,0.803,352,1.268,353,0.868,354,0.824,355,0.596,356,0.868,357,0.762,358,0.824,359,0.868,360,1.411,361,1.408,362,0.824,363,1.582,364,0.803,365,0.868,366,0.824,367,0.868,368,0.868,378,1.582,379,1.187,380,2.384,396,1.361,397,0.648,398,1.423,399,0.868,407,1.4,408,1.91,436,1.236,439,1.528,440,1.323,471,1.574,522,0.648,584,1.857,698,3.002,830,4.464,862,2.146,933,1.789,1027,4.464,1031,3.495,1032,7.243,1033,4.133,1034,5.668,1035,6.145,1036,5.668,1037,5.668,1038,6.145,1039,5.668,1040,3.495,1041,6.71,1042,4.002,1043,4.339,1044,3.495,1045,4.905,1046,3.495,1048,4.134,1049,3.495,1050,3.495,1054,3.495,1057,4.905,1059,5.157,1060,5.157,1061,3.871,1062,4.905,1063,4.905,1065,6.145,1066,4.134,1067,4.905,1069,3.495,1071,3.464,1072,3.495,1074,3.495,1075,4.905,1076,4.464,1077,3.495,1078,3.495,1079,3.495,1080,3.495,1081,3.495,1082,3.651,1087,3.495,1088,3.495,1089,3.495,1090,3.495,1091,3.495,1093,3.181,1094,3.181,1095,3.495,1096,2.602,1097,4.464,1098,3.181,1099,3.495,1100,3.181,1101,3.495,1102,3.495,1103,4.905,1113,3.495,1114,3.495,1115,3.495,1116,3.495,1117,3.495,1118,3.495,1119,3.495,1120,4.464,1121,3.495,1122,3.495,1123,3.495,1124,3.495,1125,3.495,1126,3.495,1141,3.495,1142,3.495,1177,3.871,1306,4.134,1381,2.758,1527,2.468,1657,2.351,1703,2.758,2086,3.495,2489,2.758,2638,3.181,2641,3.495,3100,4.464,3292,4.472,3488,3.495,3699,7.498,3700,4.905,3701,3.973,3702,3.973,3703,3.973,3704,3.973,3705,3.973,3706,3.973,3707,3.973,3708,3.973,3709,3.973,3710,3.973,3711,3.973,3712,3.973,3713,3.973,3714,3.495,3715,5.576,3716,3.495,3717,3.973,3718,3.973,3719,3.973,3720,3.973,3721,3.973,3722,3.973,3723,3.973,3724,3.973,3725,3.973,3726,3.973,3727,3.973,3728,6.442,3729,3.973,3730,5.576,3731,3.973,3732,5.576,3733,3.973,3734,3.973,3735,3.973,3736,3.973,3737,3.973,3738,3.973,3739,3.495,3740,5.576,3741,3.973,3742,3.973,3743,3.973,3744,3.495,3745,3.973,3746,3.973,3747,3.973,3748,3.973,3749,3.973,3750,3.973,3751,3.973,3752,3.973,3753,3.973,3754,5.576,3755,3.973,3756,3.973,3757,3.973,3758,3.973,3759,3.973,3760,3.973,3761,3.973,3762,3.973,3763,3.973,3764,5.576,3765,5.576,3766,3.973,3767,3.973]],["title/modules/WorkspaceListModule.html",[916,1.478,3768,3.289]],["body/modules/WorkspaceListModule.html",[3,0.204,4,0.172,5,0.095,39,0.01,41,0.459,79,0.45,81,0.449,82,1.983,96,0.204,97,0.107,105,0.528,111,0.007,112,0.008,113,0.007,187,0.918,188,1.035,189,1.035,238,0.97,362,1.863,363,1.559,397,1.026,399,1.374,401,3.18,522,1.026,631,2.569,916,2.679,918,2.831,919,2.739,920,3.883,921,3.405,922,3.503,923,3.035,928,3.893,929,3.503,930,2.831,931,2.739,933,3.621,934,3.766,935,4.029,936,2.739,937,4.029,938,4.186,939,4.186,942,5.033,943,3.149,944,3.273,945,6.018,946,5.033,1209,4.661,2611,5.573,3768,6.574,3769,5.531,3770,5.531,3771,6.287,3772,5.531,3773,6.287,3774,6.287]],["title/components/WorkspaceSelectorComponent.html",[114,0.121,364,0.896]],["body/components/WorkspaceSelectorComponent.html",[3,0.147,4,0.124,5,0.068,8,1.036,10,0.462,11,0.513,13,1.614,22,0.614,24,1.032,36,0.578,38,0.794,39,0.01,40,0.529,41,0.471,42,0.829,44,0.656,45,0.847,48,0.792,50,1.637,52,0.554,57,0.959,58,0.768,60,0.767,79,0.394,81,0.324,94,0.625,95,0.607,96,0.224,97,0.117,105,0.62,111,0.005,112,0.007,113,0.005,114,0.211,115,0.917,116,1.202,117,0.991,118,1.3,121,1.836,122,1.234,123,1.672,124,0.966,126,0.997,127,1.222,132,1.379,133,1.48,134,1.685,135,1.589,136,1.589,139,1.48,140,1.48,141,1.48,142,1.657,143,1.674,144,1.674,145,1.37,146,1.37,147,1.19,148,1.406,149,1.234,150,1.22,151,1.044,152,1.22,153,1.099,154,0.847,155,1.22,156,0.997,157,1.22,158,1.047,159,0.74,160,1.22,161,1.22,166,1.099,167,1.48,168,1.111,169,1.128,170,1.324,171,1.141,172,1.099,173,1.099,174,1.099,175,1.128,176,1.443,177,0.966,178,1.017,179,1.128,180,1.071,181,1.017,182,1.128,183,1.044,184,1.128,185,0.966,186,0.941,187,0.554,188,0.625,189,0.625,190,1.128,191,1.071,192,1.044,193,1.099,194,1.48,195,0.966,198,1.128,199,1.099,200,1.044,201,1.128,202,1.128,203,1.017,204,1.128,205,1.798,206,0.941,238,0.7,239,1.3,240,1.171,241,0.991,242,1.078,243,0.991,244,1.736,245,0.87,246,0.941,247,0.941,248,0.966,249,1.509,250,0.917,251,0.991,252,0.991,253,0.87,254,0.991,255,0.87,256,0.87,257,0.941,258,1.598,259,1.335,260,0.941,261,0.991,262,0.941,263,1.158,264,1.19,265,0.87,266,0.917,267,0.991,268,0.917,269,1.267,270,1.614,271,0.941,272,1.335,273,0.87,274,0.991,275,0.917,276,0.917,277,0.991,278,0.87,279,0.941,280,0.87,281,0.991,282,0.87,283,0.966,284,0.991,285,0.917,286,0.917,287,0.991,288,0.917,289,1.335,290,0.991,291,0.941,292,0.991,293,0.917,294,0.991,295,0.917,296,0.966,297,1.19,298,1.335,299,0.87,300,0.917,301,1.335,302,0.917,303,0.991,304,1.335,305,0.917,306,1.234,307,0.991,308,0.917,309,0.917,310,0.941,311,0.991,312,0.917,313,0.87,314,0.991,315,0.917,316,0.991,317,0.917,318,0.991,319,0.893,320,1.532,321,0.917,322,0.991,323,0.917,324,1.335,325,0.87,326,1.335,327,0.941,328,0.991,329,0.87,330,0.893,331,0.87,332,0.991,333,0.917,334,0.991,335,0.87,336,0.991,337,0.87,338,0.941,339,0.941,340,0.87,341,0.991,342,0.917,343,0.782,344,0.991,345,0.917,346,0.87,347,0.991,348,0.941,349,0.966,350,0.991,351,0.917,352,0.893,353,0.991,354,0.941,355,0.681,356,0.991,357,0.87,358,0.941,359,0.991,360,0.917,361,0.991,362,0.941,363,1.684,364,1.64,365,0.991,366,1.432,367,0.991,368,0.991,371,1.128,434,2.421,436,0.803,437,2.737,439,1.744,440,2.035,441,2.421,446,2.268,548,1.798,557,1.252,1211,4.529,3319,3.991,3699,6.076,3714,5.374,3775,4.537,3776,6.109,3777,4.537,3778,4.537,3779,4.537,3780,4.537,3781,4.537,3782,4.537,3783,4.537,3784,4.537,3785,4.537,3786,4.537,3787,4.537,3788,4.537,3789,4.537,3790,4.537]],["title/injectables/WorkspaceTypeService.html",[0,1.193,3292,3.08]],["body/injectables/WorkspaceTypeService.html",[0,1.859,2,2.649,3,0.178,4,0.15,5,0.083,7,2.973,8,1.038,9,3.918,10,0.343,11,0.58,12,3.107,13,1.511,14,3.91,15,3.747,16,3.91,17,2.453,18,3.26,19,3.303,20,3.91,21,3.463,22,0.695,24,1.022,25,4.282,26,3.747,27,4.103,28,4.282,29,3.91,30,3.91,31,3.338,32,2.122,33,2.973,36,0.59,38,0.899,39,0.01,40,0.537,41,0.48,42,0.899,44,0.636,48,0.819,49,4.703,50,1.667,51,3.246,52,0.67,53,2.973,54,3.599,55,3.747,56,3.246,57,0.897,58,0.719,59,2.973,60,0.609,61,3.246,62,3.246,63,3.103,64,3.246,65,3.91,66,3.103,67,3.246,68,3.103,69,3.246,70,2.314,71,3.246,72,3.246,73,3.246,74,3.246,75,3.246,76,3.246,77,3.246,78,3.246,79,0.428,80,1.514,81,0.392,82,1.73,83,2.973,84,2.649,87,3.408,88,2.313,96,0.178,97,0.093,98,2.748,99,2.47,102,2.557,105,0.636,107,3.222,108,3.747,110,3.463,111,0.006,112,0.008,113,0.006,187,0.844,522,0.895,840,4.392,867,4.826,960,4.826,1024,4.295,1220,3.599,2175,3.338,3292,4.8,3440,4.826,3700,6.083,3791,8.194,3792,7.948,3793,6.914,3794,7.948,3795,6.914,3796,5.486,3797,6.914]],["title/dependencies.html",[919,2.32,3798,3.723]],["body/dependencies.html",[19,2.291,39,0.01,49,3.525,85,2.118,86,2.295,95,0.973,111,0.007,112,0.008,113,0.007,170,1.395,286,1.204,352,1.652,388,2.16,678,5.242,919,2.595,921,2.974,943,2.985,984,2.16,991,2.099,1628,5.395,1630,3.701,1632,4.417,1633,4.417,1634,4.417,1746,3.701,2354,5.826,2378,4.77,2871,5.454,3314,5.395,3384,5.242,3473,5.242,3799,5.958,3800,5.958,3801,5.958,3802,7.857,3803,5.958,3804,5.958,3805,5.958,3806,5.958,3807,5.958,3808,5.958,3809,5.958,3810,7.277,3811,5.958,3812,5.958,3813,7.857,3814,5.958,3815,5.958,3816,5.958,3817,7.277,3818,7.277,3819,5.958,3820,5.958,3821,5.958,3822,5.958,3823,5.958,3824,5.958,3825,7.277,3826,5.242,3827,5.958,3828,5.958,3829,5.958,3830,5.958,3831,7.277,3832,5.958,3833,7.277,3834,7.277,3835,5.958,3836,5.958,3837,5.958,3838,5.958,3839,5.958,3840,5.958,3841,5.242,3842,5.958,3843,5.958,3844,7.277,3845,5.958,3846,7.277,3847,5.958,3848,5.958,3849,5.958,3850,5.958,3851,5.958,3852,5.958,3853,5.958,3854,5.958,3855,8.392,3856,5.958,3857,5.958,3858,7.277,3859,5.958,3860,7.277,3861,5.958,3862,5.958,3863,5.958,3864,5.958,3865,5.958,3866,5.958,3867,5.958,3868,5.958,3869,5.958,3870,5.958,3871,5.958,3872,7.277,3873,5.958,3874,7.511,3875,8.183,3876,5.958,3877,5.958,3878,5.958,3879,5.958,3880,5.958,3881,5.958,3882,5.958,3883,5.958,3884,5.958,3885,5.958,3886,5.958,3887,5.958,3888,5.958,3889,5.958,3890,5.958,3891,5.958,3892,4.77,3893,5.958,3894,7.277,3895,5.958,3896,5.242,3897,5.958,3898,5.242,3899,5.958,3900,5.958,3901,5.958]],["title/miscellaneous/functions.html",[3902,3.276,3903,4.685]],["body/miscellaneous/functions.html",[10,0.425,38,0.935,39,0.01,40,0.544,41,0.424,42,0.935,48,0.738,111,0.008,112,0.009,113,0.008,461,2.008,2212,5.832,3506,5.974,3512,6.297,3513,6.839,3524,6.297,3535,5.974,3542,5.974,3902,5.974,3903,5.974,3904,8.543,3905,8.692,3906,8.543,3907,7.866,3908,8.305]],["title/index.html",[10,0.233,711,2.981,3909,3.276]],["body/index.html",[4,0.18,39,0.009,88,1.916,90,3.18,111,0.007,112,0.009,113,0.007,263,1.497,306,1.331,352,1.296,513,2.458,829,4.091,1135,5.272,1157,5.272,1158,5.272,1159,5.272,1160,4.883,1874,4.313,2276,4.883,2304,4.883,2363,3.725,2371,6.798,2716,4.404,3716,5.794,3910,7.857,3911,6.08,3912,6.586,3913,7.727,3914,6.586,3915,7.727,3916,5.794,3917,6.586,3918,5.794,3919,6.586,3920,4.883,3921,8.46,3922,6.586,3923,5.794,3924,6.586,3925,6.586,3926,5.794,3927,5.794,3928,6.586,3929,6.586,3930,6.586,3931,6.586,3932,6.586,3933,6.186,3934,4.883,3935,6.586,3936,6.586,3937,6.586,3938,6.586,3939,6.586,3940,4.883,3941,6.586,3942,6.586,3943,6.586,3944,6.586,3945,6.586,3946,5.693,3947,6.586,3948,4.883,3949,5.794,3950,5.794,3951,4.883,3952,6.586,3953,6.586,3954,5.794,3955,5.794,3956,6.586,3957,5.272,3958,6.586,3959,5.794]],["title/license.html",[711,2.981,1164,2.76,3909,3.276]],["body/license.html",[4,0.235,5,0.05,21,1.003,22,0.201,24,0.995,36,0.131,39,0.004,40,0.206,41,0.178,52,0.245,79,0.102,88,0.96,97,0.034,105,0.168,111,0.004,112,0.004,113,0.004,114,0.147,128,2.919,147,1.208,151,0.461,164,0.793,168,0.6,185,1.038,187,0.513,195,0.702,200,0.759,263,0.705,266,0.405,283,0.426,286,0.666,306,0.666,349,0.426,355,1.127,400,0.793,452,2.165,461,1.481,504,1.162,508,1.666,516,1.069,521,0.686,546,0.667,551,2.299,561,1.231,584,1.796,603,2.23,606,1.932,673,1.085,796,1.311,862,2.043,874,1.603,886,2.807,931,0.872,958,3.583,963,1.603,990,3.366,991,1.9,1033,1.185,1060,1.603,1066,1.484,1071,3.029,1084,0.872,1093,1.603,1096,2.754,1097,1.603,1098,3.366,1110,1.762,1133,6.516,1135,1.603,1137,2.378,1149,3.349,1154,6.667,1155,4.197,1160,4.301,1162,6.272,1163,6.453,1164,6.689,1165,5.658,1166,3.743,1167,1.603,1169,6.951,1170,6.323,1171,6.588,1172,3.366,1173,4.316,1174,5.307,1175,6.907,1176,6.713,1177,2.919,1178,3.997,1179,1.603,1180,1.603,1181,2.289,1182,4.547,1183,6.012,1184,2.64,1185,3.903,1186,2.64,1187,2.64,1188,5.07,1189,4.316,1190,2.488,1191,4.016,1192,2.289,1193,5.13,1194,5.063,1195,4.316,1197,1.603,1249,1.003,1252,1.003,1257,2.189,1288,1.484,1333,1.39,1406,2.289,1446,3.629,1572,1.484,1596,6.413,1627,3.615,1725,1.484,1740,1.484,1783,1.484,1801,1.244,1886,5.757,1891,1.484,1892,1.484,2027,3.366,2029,2.64,2030,1.484,2042,1.603,2117,2.612,2135,1.132,2155,1.39,2176,4.125,2221,2.64,2222,5.396,2223,2.901,2276,4.547,2304,4.751,2334,3.118,2336,1.244,2344,2.901,2346,4.316,2350,4.316,2351,3.366,2353,3.118,2356,1.762,2363,3.624,2365,1.762,2368,2.445,2373,3.366,2426,1.762,2451,2.901,2488,1.762,2541,2.64,2556,1.762,2558,1.39,2573,1.39,2581,2.289,2611,2.445,2664,2.901,2671,2.901,2715,2.289,2745,5.103,2768,5.491,2823,2.919,2834,1.762,2835,3.7,2836,4.301,2837,1.603,2882,3.615,2883,1.39,2887,1.484,2935,1.39,2989,1.484,3000,3.385,3002,5.491,3135,5.475,3143,4.644,3144,1.762,3397,4.289,3455,2.445,3460,3.385,3465,3.903,3466,1.603,3503,4.016,3505,3.118,3623,5.06,3634,1.762,3651,3.7,3841,5.103,3892,4.316,3896,4.743,3898,1.762,3916,1.762,3918,1.762,3920,6.011,3923,1.762,3926,2.901,3933,4.316,3934,6.255,3940,3.997,3946,1.39,3950,5.638,3951,3.118,3954,1.762,3957,3.903,3960,2.002,3961,4.205,3962,2.002,3963,3.298,3964,4.743,3965,5.391,3966,4.205,3967,7.406,3968,2.002,3969,3.7,3970,2.002,3971,2.002,3972,3.298,3973,7.159,3974,5.801,3975,2.002,3976,2.002,3977,6.408,3978,2.002,3979,2.002,3980,7.406,3981,4.205,3982,3.298,3983,8.999,3984,3.298,3985,6.133,3986,5.391,3987,2.002,3988,2.002,3989,4.876,3990,6.408,3991,3.298,3992,6.408,3993,2.002,3994,3.298,3995,2.002,3996,4.205,3997,7.834,3998,4.316,3999,3.298,4000,4.876,4001,2.002,4002,2.002,4003,3.298,4004,4.876,4005,3.298,4006,3.298,4007,5.899,4008,4.743,4009,3.298,4010,4.876,4011,6.133,4012,5.391,4013,2.002,4014,4.205,4015,6.133,4016,2.002,4017,2.002,4018,2.002,4019,6.408,4020,3.298,4021,7.009,4022,6.838,4023,3.298,4024,2.002,4025,2.002,4026,2.64,4027,2.002,4028,3.298,4029,4.205,4030,2.002,4031,2.002,4032,2.002,4033,2.002,4034,2.002,4035,2.002,4036,2.002,4037,2.002,4038,2.002,4039,2.002,4040,3.298,4041,2.002,4042,2.002,4043,3.298,4044,4.205,4045,3.298,4046,2.002,4047,2.002,4048,3.298,4049,2.901,4050,2.002,4051,3.298,4052,3.298,4053,2.002,4054,2.002,4055,3.298,4056,4.205,4057,3.298,4058,3.298,4059,2.002,4060,2.002,4061,5.801,4062,2.002,4063,1.762,4064,2.002,4065,2.002,4066,2.002,4067,4.876,4068,2.002,4069,3.298,4070,4.205,4071,2.002,4072,5.307,4073,6.64,4074,2.002,4075,7.406,4076,4.876,4077,5.391,4078,5.801,4079,4.205,4080,2.002,4081,4.205,4082,3.298,4083,2.002,4084,2.002,4085,2.002,4086,4.205,4087,2.002,4088,2.002,4089,3.298,4090,3.298,4091,2.002,4092,6.016,4093,2.002,4094,4.876,4095,6.408,4096,4.205,4097,3.298,4098,8.579,4099,4.205,4100,6.64,4101,2.002,4102,3.298,4103,4.205,4104,6.64,4105,6.838,4106,4.876,4107,2.002,4108,3.298,4109,2.901,4110,4.876,4111,4.876,4112,5.316,4113,2.002,4114,4.205,4115,1.603,4116,8.191,4117,3.298,4118,2.002,4119,6.408,4120,2.002,4121,3.7,4122,6.408,4123,7.51,4124,4.876,4125,3.298,4126,6.408,4127,7.009,4128,5.801,4129,2.002,4130,2.002,4131,2.002,4132,6.408,4133,2.002,4134,3.298,4135,1.762,4136,2.002,4137,4.205,4138,2.002,4139,4.205,4140,2.002,4141,2.002,4142,2.002,4143,4.205,4144,3.7,4145,2.002,4146,2.002,4147,2.002,4148,2.901,4149,2.002,4150,2.002,4151,2.002,4152,4.205,4153,4.205,4154,4.205,4155,2.002,4156,2.002,4157,5.391,4158,2.002,4159,2.002,4160,3.298,4161,2.002,4162,4.205,4163,2.002,4164,2.002,4165,2.002,4166,2.002,4167,3.298,4168,2.002,4169,8.061,4170,2.002,4171,2.002,4172,3.298,4173,2.002,4174,3.298,4175,3.615,4176,2.002,4177,2.002,4178,2.002,4179,2.002,4180,3.298,4181,4.205,4182,2.002,4183,3.298,4184,2.002,4185,2.002,4186,5.801,4187,2.002,4188,4.289,4189,2.002,4190,6.838,4191,6.133,4192,2.002,4193,5.391,4194,2.002,4195,3.298,4196,2.002,4197,2.002,4198,3.7,4199,4.205,4200,2.002,4201,2.002,4202,2.002,4203,2.002,4204,4.205,4205,4.205,4206,2.002,4207,2.002,4208,2.901,4209,3.298,4210,3.298,4211,2.002,4212,7.29,4213,3.298,4214,2.002,4215,2.002,4216,2.002,4217,2.002,4218,2.002,4219,2.002,4220,4.205,4221,1.762,4222,2.002,4223,5.213,4224,2.002,4225,2.002,4226,5.391,4227,5.391,4228,2.002,4229,2.002,4230,4.205,4231,2.002,4232,2.002,4233,4.876,4234,2.002,4235,3.298,4236,2.002,4237,2.002,4238,2.002,4239,2.002,4240,2.002,4241,3.298,4242,3.298,4243,2.002,4244,4.205,4245,2.002,4246,2.002,4247,3.298,4248,2.002,4249,2.002,4250,2.002,4251,2.002,4252,3.298,4253,3.298,4254,3.298,4255,3.298,4256,6.64,4257,4.205,4258,5.801,4259,2.002,4260,2.002,4261,3.7,4262,4.205,4263,4.876,4264,4.876,4265,3.7,4266,4.876,4267,3.298,4268,2.002,4269,5.801,4270,1.762,4271,3.298,4272,3.298,4273,5.391,4274,3.298,4275,4.289,4276,4.876,4277,3.298,4278,4.205,4279,4.382,4280,5.391,4281,2.002,4282,2.002,4283,2.002,4284,4.205,4285,3.298,4286,2.002,4287,2.002,4288,2.002,4289,2.002,4290,3.298,4291,2.002,4292,2.002,4293,2.002,4294,4.205,4295,2.002,4296,2.002,4297,3.298,4298,4.205,4299,2.002,4300,3.298,4301,1.603,4302,2.002,4303,2.002,4304,3.298,4305,3.298,4306,7.957,4307,4.205,4308,2.901,4309,3.298,4310,3.298,4311,3.298,4312,4.289,4313,3.298,4314,2.002,4315,2.002,4316,2.002,4317,2.002,4318,5.801,4319,3.298,4320,2.002,4321,2.002,4322,2.002,4323,2.002,4324,3.298,4325,2.002,4326,3.298,4327,2.002,4328,5.391,4329,6.408,4330,4.289,4331,2.002,4332,7.009,4333,2.002,4334,2.002,4335,1.762,4336,2.002,4337,2.002,4338,2.002,4339,2.002,4340,4.205,4341,4.876,4342,3.298,4343,2.002,4344,2.002,4345,2.002,4346,2.002,4347,2.002,4348,3.298,4349,2.002,4350,2.002,4351,4.205,4352,4.876,4353,2.002,4354,3.298,4355,3.298,4356,2.002,4357,2.002,4358,3.7,4359,2.002,4360,2.002,4361,2.002,4362,2.002,4363,2.002,4364,3.298,4365,2.002,4366,2.002,4367,2.002,4368,2.002,4369,2.002,4370,2.002,4371,2.002,4372,2.002,4373,2.002,4374,5.391,4375,2.002,4376,2.002,4377,3.903,4378,2.002,4379,1.762,4380,2.002,4381,2.002,4382,2.002,4383,2.002,4384,2.002,4385,2.002,4386,3.298,4387,6.133,4388,1.762,4389,4.876,4390,2.002,4391,2.002,4392,4.205,4393,2.002,4394,2.002,4395,3.7,4396,2.002,4397,3.298,4398,2.002,4399,2.002,4400,2.002,4401,2.002,4402,2.002,4403,2.002,4404,2.002,4405,2.002,4406,3.298,4407,2.002,4408,2.002,4409,2.002,4410,3.298,4411,3.298,4412,2.002,4413,2.002,4414,4.205,4415,2.002,4416,2.002,4417,3.298,4418,2.002,4419,3.298,4420,2.002,4421,4.205,4422,6.133,4423,2.002,4424,3.298,4425,3.298,4426,2.002,4427,2.002,4428,1.762,4429,2.002,4430,2.002,4431,3.298,4432,2.002,4433,4.876,4434,2.002,4435,5.391,4436,2.002,4437,2.002,4438,2.002,4439,2.002,4440,2.002,4441,3.298,4442,3.298,4443,3.298,4444,4.205,4445,2.002,4446,3.298,4447,2.002,4448,2.64,4449,4.205,4450,2.002,4451,3.298,4452,2.002,4453,3.298,4454,2.002,4455,3.298,4456,2.002,4457,2.002,4458,3.298,4459,8.061,4460,3.298,4461,2.002,4462,5.391,4463,6.838,4464,4.205,4465,2.002,4466,2.002,4467,2.002,4468,4.876,4469,2.002,4470,2.002,4471,4.205,4472,1.762,4473,3.298,4474,2.002,4475,2.002,4476,2.002,4477,2.002,4478,2.002,4479,2.002,4480,2.002,4481,4.876,4482,3.298,4483,2.002,4484,2.002,4485,4.205,4486,2.002,4487,3.298,4488,4.205,4489,2.002,4490,3.298,4491,2.002,4492,2.002,4493,2.002,4494,2.002,4495,3.298,4496,4.205,4497,2.002,4498,3.298,4499,2.002,4500,3.298,4501,2.002,4502,2.002,4503,2.002,4504,4.205,4505,3.298,4506,2.002,4507,4.876,4508,2.002,4509,4.205,4510,2.002,4511,2.002,4512,1.762,4513,3.298,4514,2.002,4515,2.002,4516,2.002,4517,4.205,4518,3.298,4519,3.298,4520,2.002,4521,3.298,4522,4.205,4523,4.876,4524,2.002,4525,2.002,4526,3.298,4527,2.002,4528,4.205,4529,2.002,4530,3.298,4531,2.002,4532,2.002,4533,2.002,4534,1.762,4535,3.7,4536,2.002,4537,3.298,4538,4.205,4539,3.298,4540,2.002,4541,3.298,4542,2.002,4543,2.002,4544,3.298,4545,3.298,4546,2.002,4547,2.002,4548,3.298,4549,2.002,4550,2.002,4551,2.002,4552,2.002,4553,4.205,4554,2.002,4555,2.002,4556,2.002,4557,2.002,4558,2.002,4559,4.876,4560,3.298,4561,4.205,4562,2.002,4563,2.002,4564,2.002,4565,2.002,4566,2.002,4567,3.298,4568,2.002,4569,2.002,4570,2.002,4571,1.762,4572,2.002,4573,2.002,4574,2.002,4575,2.002,4576,2.002,4577,2.002,4578,2.002,4579,2.002,4580,2.002,4581,2.002,4582,2.002,4583,3.298,4584,2.002,4585,2.002,4586,2.002,4587,2.002,4588,2.002,4589,2.002,4590,2.002,4591,2.002,4592,2.002,4593,2.002,4594,4.205,4595,2.002,4596,2.002,4597,2.002,4598,3.298,4599,2.002,4600,2.002,4601,2.002,4602,1.762,4603,2.002,4604,2.002,4605,2.901,4606,3.298,4607,1.762,4608,3.298,4609,1.762,4610,2.002,4611,2.002,4612,4.205,4613,3.298,4614,2.002,4615,3.298,4616,2.002,4617,2.002,4618,2.002,4619,2.002,4620,2.002,4621,2.002,4622,2.901,4623,2.002,4624,2.002,4625,2.002,4626,3.298,4627,2.002,4628,4.205,4629,2.002,4630,2.002,4631,2.002,4632,2.002,4633,2.002,4634,2.002,4635,2.002,4636,2.002,4637,2.002,4638,2.002,4639,2.002,4640,2.002,4641,2.002,4642,2.002,4643,2.002,4644,2.002,4645,2.002,4646,2.002,4647,2.002,4648,2.002,4649,2.002,4650,2.002,4651,2.002,4652,2.002,4653,2.002,4654,2.002,4655,2.002,4656,1.603,4657,1.762,4658,2.002,4659,2.901,4660,2.002,4661,2.002,4662,2.002,4663,2.002,4664,2.002,4665,2.002,4666,2.002,4667,3.298,4668,3.298,4669,2.002,4670,2.002,4671,2.002,4672,2.002,4673,2.002,4674,2.002,4675,2.002,4676,2.002,4677,2.002,4678,2.002,4679,3.298,4680,2.002,4681,2.002,4682,2.002,4683,2.002,4684,2.002,4685,2.002,4686,1.603,4687,2.002,4688,2.002,4689,2.002,4690,2.002,4691,2.002,4692,2.002,4693,1.762,4694,2.002,4695,2.002,4696,2.002,4697,2.002]],["title/modules.html",[918,2.709]],["body/modules.html",[39,0.009,111,0.008,112,0.009,113,0.008,631,3.704,917,5.039,918,3.06,928,3.06,1143,5.039,1599,5.039,2159,5.039,2317,5.039,2324,5.039,3058,5.039,3235,5.039,3423,5.039,3543,5.039,3768,5.039,3951,6.72,4698,9.063,4699,9.063]],["title/overview.html",[4700,5.293]],["body/overview.html",[1,4.778,2,1.919,18,2.405,35,2.718,39,0.01,111,0.004,112,0.006,113,0.004,115,1.583,116,0.782,209,2.902,238,0.614,245,1.502,247,1.625,250,1.583,253,1.502,255,1.235,257,1.625,260,1.625,262,1.625,264,1.268,265,1.502,268,1.583,271,1.727,273,1.502,275,1.682,276,1.583,278,1.502,280,1.502,282,1.502,285,1.583,288,1.583,291,1.625,293,1.583,295,1.583,299,1.502,302,1.583,305,1.583,308,1.583,309,1.583,310,1.727,312,1.302,315,1.302,317,1.583,319,1.542,321,1.583,323,1.583,325,1.502,327,1.625,329,1.235,331,1.502,333,1.302,335,1.502,337,1.502,340,1.502,342,1.583,343,1.35,345,1.583,346,1.502,348,1.625,351,1.583,354,1.625,357,1.502,358,1.625,360,1.583,362,1.625,364,1.583,366,1.625,625,1.288,916,1.324,917,6.025,918,1.79,919,1.731,920,1.919,921,1.624,922,1.852,923,1.919,924,3.497,925,3.497,926,3.497,927,3.497,928,4.175,929,2.599,930,1.79,931,1.731,947,4.22,1143,5.808,1144,3.497,1145,3.497,1146,3.497,1148,3.497,1149,4.571,1150,5.108,1151,5.108,1152,5.108,1166,3.872,1218,4.778,1358,3.644,1599,5.808,1600,3.497,1601,3.497,1604,3.497,1843,4.22,1874,2.603,1908,3.813,1981,4.778,2114,4.003,2159,5.808,2160,3.497,2161,3.497,2163,3.497,2192,4.473,2317,5.808,2318,3.497,2319,3.497,2321,3.497,2324,5.808,2325,3.497,2326,3.497,2328,3.497,2594,4.778,2595,3.182,3058,6.025,3059,3.497,3060,3.497,3063,3.497,3235,6.172,3236,3.497,3237,3.497,3239,3.497,3240,3.497,3241,4.778,3287,3.497,3288,3.497,3289,3.497,3290,3.497,3291,5.808,3292,4.473,3423,5.808,3424,3.497,3425,3.497,3427,3.497,3505,2.947,3543,5.808,3544,3.497,3545,3.497,3547,3.497,3768,5.808,3769,3.497,3770,3.497,3772,3.497,4472,3.497,4700,3.497,4701,3.975,4702,3.975]],["title/additional-documentation/installation-guide.html",[525,1.04,4279,1.898,4377,2.568,4703,2.378]],["body/additional-documentation/installation-guide.html",[5,0.096,19,2.447,39,0.01,40,0.398,88,1.852,111,0.007,112,0.009,113,0.007,226,1.377,264,1.096,330,1.49,352,1.253,452,2.376,513,2.376,796,4.959,891,4.951,919,3.644,991,2.242,1165,4.418,1190,4.481,1194,3.953,1703,4.418,2304,4.718,2363,3.599,2600,5.095,2666,5.599,2716,3.942,3454,5.614,3460,4.418,3586,5.308,3680,5.599,3892,6.062,3946,4.418,3957,6.472,3959,5.599,3998,5.095,4007,4.718,4221,5.599,4223,4.418,4377,6.062,4395,6.662,4535,6.662,4609,5.599,4703,6.203,4704,6.364,4705,7.572,4706,5.614,4707,6.364,4708,6.364,4709,6.364,4710,6.364,4711,7.572,4712,6.364,4713,6.364,4714,6.364,4715,6.364,4716,8.76,4717,6.364,4718,6.364,4719,6.062,4720,7.572,4721,6.364,4722,6.364,4723,6.364,4724,6.364,4725,6.364,4726,5.599,4727,7.572,4728,6.364,4729,6.364,4730,6.364,4731,6.364,4732,6.364,4733,6.364,4734,6.364,4735,6.364,4736,5.599,4737,6.364,4738,5.599,4739,6.364,4740,6.364,4741,6.364,4742,6.364,4743,6.364,4744,6.364,4745,6.364]],["title/additional-documentation/configuration-guide.html",[525,1.04,891,1.898,4279,1.898,4703,2.378]],["body/additional-documentation/configuration-guide.html",[5,0.096,17,2.066,21,3.193,39,0.009,111,0.007,112,0.009,113,0.007,127,1.128,147,1.098,264,1.098,506,2.311,829,3.959,886,3.318,891,5.339,991,2.246,1011,3.959,1082,4.963,1136,3.959,1166,4.425,1174,4.726,1181,4.425,1188,4.726,1190,4.953,1191,5.297,1746,3.959,1801,3.959,2106,5.103,2117,3.959,2155,5.615,2173,2.97,2346,5.103,2362,5.261,2363,4.575,2373,5.103,2716,4.357,2823,5.261,3359,5.607,3447,5.619,3465,5.103,3510,4.726,3586,5.2,3623,4.425,3874,6.668,3911,4.726,3920,4.726,3946,4.425,3949,5.607,3955,5.607,4007,4.726,4092,5.607,4109,5.607,4121,5.607,4144,5.607,4175,4.726,4198,5.607,4261,5.607,4607,5.607,4656,5.103,4703,4.726,4706,6.548,4719,5.103,4736,5.607,4738,5.607,4746,7.579,4747,7.579,4748,6.374,4749,6.374,4750,6.374,4751,6.374,4752,7.579,4753,6.374,4754,6.374,4755,6.374,4756,6.374,4757,6.374,4758,7.579,4759,6.668,4760,6.374,4761,6.374,4762,6.374,4763,6.374,4764,6.374,4765,5.607,4766,6.374,4767,8.371,4768,7.579,4769,6.374,4770,6.374,4771,5.607,4772,6.374,4773,5.103,4774,5.607,4775,5.607,4776,6.374,4777,6.374,4778,5.607,4779,6.374,4780,6.374]],["title/additional-documentation/configuration-guide/configuring-web-forms.html",[525,0.913,4279,1.667,4301,2.256,4781,1.667,4782,2.479]],["body/additional-documentation/configuration-guide/configuring-web-forms.html",[5,0.123,10,0.252,17,1.827,39,0.01,40,0.54,41,0.473,58,0.797,60,0.781,90,1.948,93,2.282,97,0.12,111,0.005,112,0.007,113,0.005,114,0.215,116,1.109,122,1.421,127,1.542,132,1.251,147,1.506,159,1.06,180,1.331,183,1.847,185,1.497,195,1.2,200,0.928,226,1.531,240,1.081,263,1.179,297,1.119,313,1.627,330,0.794,343,0.971,355,0.975,387,1.272,461,1.03,516,2.105,521,2.225,522,1.251,523,3.09,528,2.153,584,1.344,625,1.827,638,3.55,739,3.55,745,4.509,862,1.344,886,4.095,891,4.984,931,1.757,963,3.23,974,3.23,977,3.23,1019,3.439,1048,2.991,1066,4.816,1082,3.691,1084,1.757,1096,2.642,1134,3.427,1178,2.991,1181,2.801,1182,4.179,1190,3.335,1191,2.642,1192,3.913,1411,2.801,1572,2.991,1731,2.991,1763,3.691,1872,4.179,1874,3.691,1888,4.368,1948,3.844,2028,3.23,2035,3.23,2037,3.23,2155,2.801,2174,3.674,2176,2.506,2207,6.187,2243,5.214,2305,3.913,2334,2.991,2336,2.506,2350,4.512,2351,3.23,2355,3.23,2362,4.509,2363,2.282,2368,2.991,2452,5.923,2611,2.991,2638,6.425,2715,3.913,2716,2.934,2768,4.179,2823,2.801,2830,2.991,2837,3.23,2935,3.913,2940,6.124,2968,4.816,2969,5.833,3000,3.913,3118,7.061,3135,5.923,3160,3.55,3314,4.179,3447,4.179,3454,2.991,3455,5.833,3457,5.2,3459,3.55,3460,2.801,3466,3.23,3503,3.691,3586,2.506,3739,3.55,3744,3.55,3910,3.55,3911,4.179,3927,3.55,3933,3.23,3934,4.816,3940,4.816,3951,2.991,3964,3.55,3969,4.959,3998,3.23,4007,4.179,4049,3.55,4063,3.55,4072,4.816,4112,3.23,4115,3.23,4135,6.509,4175,4.179,4208,4.959,4223,4.509,4265,3.55,4270,3.55,4275,3.55,4301,4.512,4308,3.55,4330,5.715,4335,5.715,4358,4.959,4379,4.959,4428,3.55,4448,4.512,4571,3.55,4605,3.55,4622,3.55,4656,4.512,4657,3.55,4659,3.55,4686,4.512,4719,3.23,4726,5.715,4759,3.55,4765,4.959,4774,3.55,4775,3.55,4781,2.387,4782,3.55,4783,2.991,4784,3.55,4785,5.636,4786,3.23,4787,4.035,4788,4.035,4789,6.496,4790,4.035,4791,4.035,4792,4.035,4793,4.035,4794,4.035,4795,8.259,4796,4.035,4797,4.035,4798,4.035,4799,4.035,4800,8.423,4801,4.035,4802,4.035,4803,4.035,4804,4.035,4805,4.035,4806,4.035,4807,4.035,4808,4.035,4809,4.959,4810,4.035,4811,5.636,4812,5.636,4813,5.636,4814,4.512,4815,4.035,4816,4.035,4817,4.035,4818,4.035,4819,4.035,4820,4.035,4821,4.035,4822,5.636,4823,5.636,4824,4.035,4825,4.035,4826,4.035,4827,4.035,4828,5.636,4829,4.035,4830,4.035,4831,5.636,4832,5.636,4833,6.496,4834,6.496,4835,6.496,4836,6.496,4837,8.259,4838,4.035,4839,5.636,4840,7.032,4841,4.035,4842,4.035,4843,4.035,4844,4.035,4845,4.035,4846,5.636,4847,5.636,4848,5.636,4849,7.032,4850,6.496,4851,3.55,4852,4.035,4853,3.55,4854,4.035,4855,4.035,4856,4.035,4857,4.035,4858,4.035,4859,4.035,4860,5.636,4861,5.636,4862,5.636,4863,4.035,4864,4.035,4865,4.035,4866,4.035,4867,4.035,4868,6.496,4869,5.636,4870,4.035,4871,4.035,4872,4.035,4873,4.035,4874,4.035,4875,4.035,4876,4.035,4877,4.035,4878,4.035,4879,4.035]],["title/additional-documentation/configuration-guide/configuring-email-notifications.html",[525,0.913,2173,1.313,4279,1.667,4773,2.256,4781,1.667]],["body/additional-documentation/configuration-guide/configuring-email-notifications.html",[5,0.114,11,0.58,19,2.107,36,0.359,39,0.01,57,0.982,111,0.006,112,0.008,113,0.006,126,1.401,132,1.127,185,1.471,192,1.59,226,1.256,239,1.611,263,0.919,269,1.433,297,0.944,521,2.592,522,1.127,523,3.11,528,1.594,673,4.697,745,5.252,886,4.264,891,4.701,893,5.53,984,2.505,1082,3.588,1100,6.057,1572,5.61,2173,4.182,2221,4.386,2336,3.403,2355,4.386,2716,4.264,2836,4.062,3211,6.078,3454,4.062,3455,4.062,3457,4.386,3510,4.062,3586,4.291,3826,4.82,3920,5.122,3934,4.062,3940,4.062,3948,4.062,4008,4.82,4026,4.386,4072,5.61,4148,4.82,4175,5.122,4223,5.252,4312,4.82,4388,6.078,4448,5.53,4534,6.078,4602,6.078,4773,6.057,4781,4.477,4783,4.062,4784,4.82,4786,5.53,4809,6.078,4814,4.386,4851,6.989,4853,4.82,4880,8.19,4881,6.908,4882,7.566,4883,5.479,4884,6.908,4885,7.945,4886,5.61,4887,7.566,4888,6.908,4889,8.589,4890,5.479,4891,4.82,4892,6.656,4893,5.479,4894,5.479,4895,5.479,4896,5.479,4897,7.566,4898,7.566,4899,6.908,4900,5.479,4901,5.479,4902,5.479,4903,5.479,4904,5.479,4905,4.82,4906,5.479,4907,5.479,4908,5.479,4909,5.479,4910,5.479,4911,7.945,4912,5.479,4913,6.908,4914,6.908,4915,5.479,4916,5.479,4917,5.479,4918,5.479,4919,5.479]],["title/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[525,0.814,1746,1.56,2716,1.308,4279,1.486,4781,1.486,4920,2.21]],["body/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[5,0.091,11,0.51,15,4.295,19,2.336,39,0.01,111,0.007,112,0.008,113,0.007,124,1.293,127,1.075,132,0.991,185,1.293,192,1.997,206,1.644,313,1.412,513,2.958,521,2.081,522,0.991,523,3.058,528,1.768,829,3.774,886,3.834,891,4.358,984,3.175,1082,4.823,1746,5.391,2276,4.504,2368,4.504,2452,4.864,2716,4.559,2883,4.218,3143,4.864,3586,4.922,3623,4.218,3911,4.504,3948,4.504,4026,4.864,4072,5.875,4115,4.864,4223,5.112,4512,5.345,4693,5.345,4706,4.504,4781,4.358,4783,4.504,4786,5.896,4814,4.864,4886,6.576,4891,5.345,4892,6.479,4905,6.972,4920,5.345,4921,6.076,4922,6.076,4923,6.076,4924,7.364,4925,6.076,4926,7.364,4927,6.076,4928,6.076,4929,6.076,4930,6.076,4931,7.364,4932,7.364,4933,7.364,4934,6.076,4935,7.364,4936,7.364,4937,7.364,4938,7.364,4939,6.076,4940,6.076,4941,6.076,4942,7.364,4943,6.076,4944,7.364,4945,6.076]],["title/additional-documentation/configuration-guide/configuring-authentication.html",[525,1.04,2106,2.568,4279,1.898,4781,1.898]],["body/additional-documentation/configuration-guide/configuring-authentication.html",[5,0.102,39,0.01,57,1.017,88,1.965,111,0.008,112,0.009,113,0.008,226,1.227,286,1.364,862,2.249,891,3.995,931,2.941,984,2.843,2107,5.94,2714,5.006,2716,3.515,3003,5.006,3088,5.94,3510,5.006,3584,5.94,3586,4.194,3623,4.687,3946,4.687,3948,5.006,4188,5.94,4686,5.405,4706,5.006,4771,5.94,4778,5.94,4781,4.639,4783,5.006,4946,8.527,4947,6.752,4948,6.752,4949,6.752,4950,6.752,4951,6.752,4952,6.752,4953,6.752,4954,6.752,4955,6.752,4956,6.752,4957,7.84,4958,6.752,4959,6.752,4960,6.752,4961,6.752,4962,6.752,4963,7.84,4964,6.752,4965,6.752,4966,6.752,4967,6.752,4968,6.752]],["title/additional-documentation/rest-api-documentation.html",[525,0.913,2362,1.956,4279,1.667,4886,2.089,4969,2.479]],["body/additional-documentation/rest-api-documentation.html",[39,0.009,111,0.008,112,0.009,113,0.008,2362,4.944,4112,5.702,4886,5.28,4969,6.266,4970,7.122]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["0",{"_index":579,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{}}}],["0\">there",{"_index":3158,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["0':locale",{"_index":818,"title":{},"body":{"components/AsynchComponent.html":{}}}],["0.0.2",{"_index":3862,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":3890,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["0.2.9",{"_index":3897,"title":{},"body":{"dependencies.html":{}}}],["0.29.0",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":3893,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3856,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":3901,"title":{},"body":{"dependencies.html":{}}}],["02110",{"_index":1205,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["0\\':locale",{"_index":825,"title":{},"body":{"components/AsynchComponent.html":{}}}],["0px",{"_index":1478,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["1",{"_index":991,"title":{"interfaces/UserForm-1.html":{}},"body":{"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["1.0",{"_index":4840,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["1.0.0",{"_index":3860,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3846,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3899,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":3823,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["1.2.8",{"_index":3864,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":3854,"title":{},"body":{"dependencies.html":{}}}],["1.3.0.html#map",{"_index":2548,"title":{},"body":{"components/MapComponent.html":{}}}],["1.3.1",{"_index":3843,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":3850,"title":{},"body":{"dependencies.html":{}}}],["1.5.2",{"_index":3881,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":4750,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["10",{"_index":990,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{},"license.html":{}}}],["11",{"_index":4235,"title":{},"body":{"license.html":{}}}],["12",{"_index":1874,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"index.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["13",{"_index":2426,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["1301",{"_index":1206,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["134.074574",{"_index":2376,"title":{},"body":{"components/MapComponent.html":{}}}],["15",{"_index":4424,"title":{},"body":{"license.html":{}}}],["16",{"_index":4425,"title":{},"body":{"license.html":{}}}],["17.0.14",{"_index":3839,"title":{},"body":{"dependencies.html":{}}}],["1991",{"_index":1168,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["1996",{"_index":4240,"title":{},"body":{"license.html":{}}}],["2",{"_index":1166,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide.html":{}}}],["2.0.0",{"_index":3879,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":3849,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":3840,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":3847,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":3827,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["2.9",{"_index":3895,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1249,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["2007",{"_index":3961,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1156,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["22",{"_index":4702,"title":{},"body":{"overview.html":{}}}],["24.673148",{"_index":2375,"title":{},"body":{"components/MapComponent.html":{}}}],["25",{"_index":2423,"title":{},"body":{"components/MapComponent.html":{}}}],["28",{"_index":4578,"title":{},"body":{"license.html":{}}}],["29",{"_index":3960,"title":{},"body":{"license.html":{}}}],["3",{"_index":2346,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["3.0.1",{"_index":3821,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3877,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3815,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2042,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["34.26516142452615",{"_index":2349,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":2373,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["4.0.0",{"_index":3851,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3869,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":3842,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":3852,"title":{},"body":{"dependencies.html":{}}}],["4.17.5",{"_index":3844,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3871,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3830,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":2424,"title":{},"body":{"components/MapComponent.html":{}}}],["5",{"_index":2573,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["5.1.3",{"_index":3838,"title":{},"body":{"dependencies.html":{}}}],["51",{"_index":1198,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["56",{"_index":4701,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":3834,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":3872,"title":{},"body":{"dependencies.html":{}}}],["6.x",{"_index":4707,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["60",{"_index":4472,"title":{},"body":{"license.html":{},"overview.html":{}}}],["6b",{"_index":4325,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4346,"title":{},"body":{"license.html":{}}}],["7",{"_index":4267,"title":{},"body":{"license.html":{}}}],["7.0.0",{"_index":3825,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":882,"title":{},"body":{"classes/BaseService.html":{}}}],["8.0.1",{"_index":3887,"title":{},"body":{"dependencies.html":{}}}],["8.11.0",{"_index":3953,"title":{},"body":{"index.html":{}}}],["80",{"_index":2043,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["9",{"_index":3529,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9!#$%&'*+\\/=?^_",{"_index":3527,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]([a",{"_index":3528,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?(\\.[a",{"_index":3530,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?)*$/i",{"_index":3531,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]+\\.pdf",{"_index":2649,"title":{},"body":{"components/PDFListComponent.html":{}}}],["9a",{"_index":2647,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_",{"_index":94,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["_.assign(targetprogress",{"_index":805,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.clonedeep(basefieldinst.options",{"_index":1344,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeep(this.value",{"_index":1704,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.clonedeepwith(basefieldinst[f",{"_index":1353,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeepwith(basefieldinst[f.field",{"_index":1361,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.concat",{"_index":3673,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.concat(this.workspaceapps",{"_index":3741,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(config.field",{"_index":3671,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(config.fields",{"_index":3647,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(data",{"_index":3650,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(itemarray",{"_index":1800,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.each(progressarr",{"_index":774,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.each(this.disabledelements",{"_index":3712,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(this.field.fields",{"_index":484,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.each(this.field.formmodel.controls",{"_index":1427,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(this.field.value",{"_index":2800,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.each(this.fields",{"_index":1332,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(typeconfs",{"_index":1580,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["_.each(value",{"_index":2785,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["_.extend({data",{"_index":3696,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.filter(this.plans.items",{"_index":3200,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.filter(this.users",{"_index":2306,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.find(config.mapping",{"_index":3665,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.find(this.activerefiners",{"_index":3017,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.classes[f.class].comp",{"_index":1943,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.find(this.field.options",{"_index":3779,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["_.find(this.field.progressarr",{"_index":802,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.find(this.field.selectoptions",{"_index":438,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.getformcontrol()['controls",{"_index":462,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.refinerconfig",{"_index":2996,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.users",{"_index":2245,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.find(this.value",{"_index":3762,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.find(this.workspaceapps",{"_index":3755,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.findindex(that2.layers",{"_index":2506,"title":{},"body":{"components/MapComponent.html":{}}}],["_.first(value",{"_index":3693,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.foreach(allattachments",{"_index":2652,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.foreach(dependentfieldnames",{"_index":2843,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.foreach(facets",{"_index":3046,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(formcontrol.controls",{"_index":473,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(params.activerefiners",{"_index":2931,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(querystr.split",{"_index":3026,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(role.users",{"_index":2238,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(roles",{"_index":2233,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(this.activerefiners",{"_index":3009,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.currentuser.newroles",{"_index":2272,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(this.field.onchange.control.subfields",{"_index":591,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(this.fieldnames",{"_index":1693,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.fields",{"_index":1395,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.forceclone",{"_index":1351,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.refinerconfig",{"_index":3004,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.searchfields",{"_index":1814,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.searchfieldstr.split",{"_index":1906,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.skipclone",{"_index":1349,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.sourcedata",{"_index":1726,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.titlefieldarr",{"_index":1754,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.value",{"_index":3138,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["_.foreach(value",{"_index":588,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.forown(fieldmap",{"_index":2013,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.forown(fieldname",{"_index":1828,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(fld",{"_index":1695,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(fldname",{"_index":1784,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(refinervalues",{"_index":3035,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.forown(servicearr",{"_index":2100,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.forown(this.fieldmap._rootcomp",{"_index":1083,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.get(d",{"_index":3653,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.get(data",{"_index":1782,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.includes(cloneopts.copy",{"_index":1368,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.includes(cloneopts.skipclone",{"_index":1367,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.includes(this.currentuser.roles",{"_index":2268,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.includes(this.hiddenusers",{"_index":2240,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.includes(user.roles",{"_index":2307,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isarray(data",{"_index":3648,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isarray(plan.title",{"_index":3202,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isarray(this.classes[f.class].comp",{"_index":1941,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isarray(this.field.value",{"_index":456,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(value",{"_index":587,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(valueelem",{"_index":1326,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isempty(_.trim(this.field.searchfiltername",{"_index":3207,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isempty(control.value",{"_index":2840,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.isempty(data",{"_index":1773,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.isempty(exactsearchnames",{"_index":2936,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(existinguser",{"_index":2248,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isempty(facetsearchnames",{"_index":2941,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(focustabid",{"_index":567,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(key",{"_index":2084,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isempty(name",{"_index":404,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(oid",{"_index":756,"title":{},"body":{"components/AsynchComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(packagetype",{"_index":1001,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(password",{"_index":3537,"title":{},"body":{"interfaces/UserForm.html":{}}}],["_.isempty(plan.title",{"_index":1016,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(plan.title[0",{"_index":1017,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(recordtype",{"_index":998,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(refiner.activevalue",{"_index":2944,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(refiner.value",{"_index":3044,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(sort",{"_index":1004,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(state",{"_index":1007,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(targetstep",{"_index":2901,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(term",{"_index":1812,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isempty(this.cssclasses",{"_index":2566,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isempty(this.field.name",{"_index":418,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(this.field.relatedrecordid",{"_index":770,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isempty(this.field.value",{"_index":581,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(this.refinerconfig.value",{"_index":3115,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["_.isempty(this.searchfilter.name",{"_index":2302,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isempty(tval",{"_index":593,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(val",{"_index":435,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(value",{"_index":2524,"title":{},"body":{"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isfunction(disabledelement.prop",{"_index":1112,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.isfunction(newelem.setemptyvalue",{"_index":1373,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(newinst.postinit",{"_index":1363,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(this.field.gettitle",{"_index":1898,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isnull(ctrlindex",{"_index":411,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(data",{"_index":3670,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isnull(fc.controls",{"_index":413,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(oid",{"_index":754,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isnull(this.field.value",{"_index":1868,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(data",{"_index":1774,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(f",{"_index":1352,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isstring(fielddesc",{"_index":1837,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(fieldname",{"_index":1825,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(fldname",{"_index":1780,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(this.titlefielddelim",{"_index":1753,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(ctrlindex",{"_index":412,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(data",{"_index":1772,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.isundefined(fc.controls",{"_index":414,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(fieldpath",{"_index":3663,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isundefined(inst.compclass",{"_index":1949,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isundefined(key",{"_index":2085,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isundefined(oid",{"_index":755,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isundefined(options['cansort",{"_index":1441,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['delegateerrorhandling",{"_index":1300,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['restricttoselection",{"_index":1682,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(packagetype",{"_index":1002,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(plan.title",{"_index":1015,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(recordtype",{"_index":999,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(sort",{"_index":1005,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(state",{"_index":1008,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(this.field.relatedrecordid",{"_index":769,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isundefined(this.field.value",{"_index":1869,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(this.value",{"_index":2577,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isundefined(value",{"_index":3041,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.join(_.get(data",{"_index":3694,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.join(this.currentuser.roles",{"_index":2284,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.join(user.roles",{"_index":2255,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.keys(subtracker.loaded).length",{"_index":2097,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(data",{"_index":1821,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.map(fields",{"_index":1956,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(fieldsarr",{"_index":1931,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(options['defaultselection",{"_index":3731,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(servicearr",{"_index":2090,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(this.options",{"_index":3760,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(this.roles",{"_index":2263,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.searchfilter.roles",{"_index":2295,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.users",{"_index":2253,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.value",{"_index":1322,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.merge(this.classes,componentclasses",{"_index":2009,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.merge(this.drawoptions",{"_index":2457,"title":{},"body":{"components/MapComponent.html":{}}}],["_.merge(this.leafletoptions",{"_index":2453,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(that2.layers",{"_index":2516,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(this.activerefiners",{"_index":2991,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.remove(this.fields",{"_index":1380,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.remove(this.value",{"_index":2794,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.size(params.activerefiners",{"_index":2926,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.startswith(qobj[0",{"_index":3030,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.template(config.template",{"_index":3698,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.template(disabledexpression",{"_index":1088,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["_.tolower(term",{"_index":1813,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.tolower(title).includes(_.tolower(this.searchfiltername",{"_index":3204,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.tolower(user.name).indexof(_.tolower(this.searchfilter.name",{"_index":2309,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.tostring(_.head(ele",{"_index":1840,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.trim(luceneescapequery.escape(term",{"_index":1810,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.trim(this.searchfilter.name",{"_index":2303,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.unset(val",{"_index":2787,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["__config",{"_index":14,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["_blank",{"_index":1594,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["a.value",{"_index":453,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["aaf",{"_index":4946,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["ability",{"_index":4394,"title":{},"body":{"license.html":{}}}],["above",{"_index":2351,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["absence",{"_index":4268,"title":{},"body":{"license.html":{}}}],["absent",{"_index":3458,"title":{},"body":{"injectables/TranslationService.html":{}}}],["absolute",{"_index":4648,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4678,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":2827,"title":{},"body":{"classes/RbValidator.html":{}}}],["abuse",{"_index":4042,"title":{},"body":{"license.html":{}}}],["accept",{"_index":4482,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4481,"title":{},"body":{"license.html":{}}}],["access",{"_index":3143,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["accessdeniedobjects",{"_index":2623,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["accessed",{"_index":4925,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["accessible",{"_index":4547,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":830,"title":{},"body":{"classes/BaseService.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["accompanied",{"_index":4307,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4652,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4266,"title":{},"body":{"license.html":{}}}],["according",{"_index":4643,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":4658,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":4202,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4526,"title":{},"body":{"license.html":{}}}],["action",{"_index":124,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["actionbutton",{"_index":196,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["actionbuttoncomponent",{"_index":115,"title":{"components/ActionButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["actions",{"_index":4489,"title":{},"body":{"license.html":{}}}],["activate",{"_index":3001,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["active",{"_index":3003,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["activerefiner.name",{"_index":3019,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiner:recordsearchrefiner",{"_index":3018,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiners",{"_index":2983,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activevalue",{"_index":2970,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activities",{"_index":4114,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4574,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3634,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{}}}],["actual_component",{"_index":368,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["actually",{"_index":4369,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4091,"title":{},"body":{"license.html":{}}}],["add",{"_index":2882,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["addactiverefiner",{"_index":3065,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["addactiverefiner(refiner",{"_index":3015,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["addbuttonclass",{"_index":1269,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontext",{"_index":1263,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontextclass",{"_index":1267,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addcomponentclasses",{"_index":1984,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["addcomponentclasses(componentclasses",{"_index":1992,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["added",{"_index":4265,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["addelem",{"_index":3213,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addelem(event",{"_index":1422,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["addelem(val:any",{"_index":1370,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["additional",{"_index":4279,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"license.html":{}}}],["addlocaluser",{"_index":3552,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addlocaluser(username",{"_index":3563,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addlocation",{"_index":2779,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["addrendercompleteelement(fieldsmeta",{"_index":2864,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["address",{"_index":4602,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["addressed",{"_index":4088,"title":{},"body":{"license.html":{}}}],["admin",{"_index":2207,"title":{},"body":{"components/ManageRolesComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["adopted",{"_index":4238,"title":{},"body":{"license.html":{}}}],["advantage",{"_index":4761,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["adversely",{"_index":4401,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4639,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4402,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4594,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4508,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4196,"title":{},"body":{"license.html":{}}}],["afterviewchecked",{"_index":383,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterviewinit",{"_index":382,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterwards",{"_index":3396,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["again",{"_index":1101,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["against",{"_index":4255,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":4294,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4589,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4627,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4538,"title":{},"body":{"license.html":{}}}],["aim",{"_index":4039,"title":{},"body":{"license.html":{}}}],["allattachmentspromise",{"_index":2643,"title":{},"body":{"components/PDFListComponent.html":{}}}],["allattachmentspromise.then(allattachments",{"_index":2650,"title":{},"body":{"components/PDFListComponent.html":{}}}],["alleging",{"_index":4516,"title":{},"body":{"license.html":{}}}],["allow",{"_index":4063,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["allowed",{"_index":3969,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["allows",{"_index":3457,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["along",{"_index":1195,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["already",{"_index":1060,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["alternative",{"_index":4321,"title":{},"body":{"license.html":{}}}],["although",{"_index":4035,"title":{},"body":{"license.html":{}}}],["alwaysactive",{"_index":2968,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["anchor",{"_index":246,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["anchororbutton",{"_index":207,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["anchororbuttoncomponent",{"_index":245,"title":{"components/AnchorOrButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["ancillary",{"_index":4483,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1173,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["andrew",{"_index":2394,"title":{},"body":{"components/MapComponent.html":{},"injectables/UtilityService.html":{}}}],["ands",{"_index":248,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["andshow",{"_index":4683,"title":{},"body":{"license.html":{}}}],["andsservice",{"_index":1,"title":{"injectables/ANDSService.html":{}},"body":{"injectables/ANDSService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["andsvocab.component",{"_index":3307,"title":{},"body":{"modules/SharedModule.html":{}}}],["andsvocabcomponent",{"_index":247,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["andsvocabcomponent,pdflistcomponent",{"_index":3338,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular",{"_index":3325,"title":{},"body":{"modules/SharedModule.html":{},"components/TreeNodeCheckboxComponent.html":{}}}],["angular/.../forms.ts",{"_index":3905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular/common",{"_index":668,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/dashboard/app/dashboard.module.ts",{"_index":932,"title":{},"body":{"modules/DashboardModule.html":{}}}],["angular/dashboard/app/sort.component.ts",{"_index":3355,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:23",{"_index":3361,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:24",{"_index":3363,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:25",{"_index":3362,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:26",{"_index":3364,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:27",{"_index":3365,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:31",{"_index":3366,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dmp/app/dmp.module.ts",{"_index":1153,"title":{},"body":{"modules/DmpModule.html":{}}}],["angular/e2e/app.po.ts",{"_index":626,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:4",{"_index":630,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:8",{"_index":629,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/export/app/export",{"_index":1497,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["angular/export/app/export.module.ts",{"_index":1605,"title":{},"body":{"modules/ExportModule.html":{}}}],["angular/forms",{"_index":397,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/http",{"_index":82,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"modules/DmpModule.html":{},"injectables/EmailNotificationService.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/localauth/app/local_auth.component.ts",{"_index":2105,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:42",{"_index":2123,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:43",{"_index":2124,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:44",{"_index":2118,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:65",{"_index":2122,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:85",{"_index":2120,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.module.ts",{"_index":2164,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["angular/manageroles/app/manage_roles.component.ts",{"_index":2178,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:122",{"_index":2203,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:127",{"_index":2197,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:146",{"_index":2199,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:47",{"_index":2218,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:48",{"_index":2206,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:49",{"_index":2217,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:50",{"_index":2209,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:51",{"_index":2208,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:52",{"_index":2205,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:53",{"_index":2210,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:54",{"_index":2211,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:55",{"_index":2193,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:89",{"_index":2195,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:97",{"_index":2201,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.module.ts",{"_index":2322,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["angular/manageusers/app/forms.ts",{"_index":3506,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["angular/manageusers/app/manage_users.module.ts",{"_index":2329,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["angular/platform",{"_index":936,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/record_search/app/record",{"_index":3096,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["angular/record_search/app/record_search.module.ts",{"_index":3064,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["angular/report/app/multivaluefieldpipe.ts",{"_index":2596,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/multivaluefieldpipe.ts:14",{"_index":2601,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/report.module.ts",{"_index":3242,"title":{},"body":{"modules/ReportModule.html":{}}}],["angular/shared/ands",{"_index":6,"title":{},"body":{"injectables/ANDSService.html":{}}}],["angular/shared/base",{"_index":826,"title":{},"body":{"classes/BaseService.html":{}}}],["angular/shared/config",{"_index":888,"title":{},"body":{"injectables/ConfigService.html":{}}}],["angular/shared/dashboard",{"_index":948,"title":{},"body":{"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["angular/shared/email",{"_index":1219,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["angular/shared/form/action",{"_index":119,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["angular/shared/form/dmp",{"_index":1030,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["angular/shared/form/field",{"_index":369,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["angular/shared/form/record",{"_index":3050,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["angular/shared/form/records.service.ts",{"_index":2853,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:225",{"_index":2856,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:226",{"_index":2855,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:227",{"_index":2854,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:231",{"_index":3090,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:232",{"_index":3091,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:233",{"_index":3092,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:234",{"_index":3094,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:235",{"_index":3089,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:236",{"_index":3093,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:237",{"_index":3087,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:248",{"_index":3095,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:258",{"_index":3074,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:259",{"_index":3073,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:260",{"_index":3072,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:261",{"_index":3071,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:269",{"_index":3076,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:278",{"_index":3079,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:284",{"_index":3085,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:294",{"_index":3078,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:306",{"_index":3080,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:310",{"_index":3075,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:321",{"_index":3083,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:341",{"_index":3077,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:348",{"_index":3081,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:358",{"_index":3084,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/tree",{"_index":3484,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["angular/shared/form/validators.ts",{"_index":2821,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:34",{"_index":2828,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:43",{"_index":2833,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/workspace",{"_index":3699,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["angular/shared/loadable.component.ts",{"_index":2061,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:30",{"_index":2064,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:31",{"_index":2066,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:32",{"_index":2065,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:33",{"_index":2063,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:41",{"_index":2070,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:48",{"_index":2073,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:53",{"_index":2067,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:59",{"_index":2069,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:63",{"_index":2071,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:68",{"_index":2072,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:76",{"_index":2068,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:89",{"_index":2074,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/report",{"_index":3231,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["angular/shared/roles",{"_index":3261,"title":{},"body":{"injectables/RolesService.html":{}}}],["angular/shared/shared.module.ts",{"_index":3293,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/shared/stringtemplatepipe.ts",{"_index":3378,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:14",{"_index":3381,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:22",{"_index":3403,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/translation",{"_index":3430,"title":{},"body":{"injectables/TranslationService.html":{}}}],["angular/shared/user",{"_index":2166,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["angular/shared/user.service",{"_index":3550,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["angular/shared/util",{"_index":3600,"title":{},"body":{"injectables/UtilityService.html":{}}}],["angular/shared/workspace",{"_index":3791,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["angular/transfer_owner/app/transfer_owner.module.ts",{"_index":3428,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["angular/userprofile/app/forms.ts",{"_index":3542,"title":{},"body":{"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["angular/userprofile/app/user_profile.module.ts",{"_index":3548,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["angular/workspace_list/app/workspace_list.module.ts",{"_index":3773,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["angular2",{"_index":3296,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{}}}],["angularpage",{"_index":624,"title":{"classes/AngularPage.html":{}},"body":{"classes/AngularPage.html":{}}}],["anti",{"_index":4225,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4276,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3397,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"license.html":{}}}],["aotmode",{"_index":2539,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["apache",{"_index":4710,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["api",{"_index":4886,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["api//method",{"_index":4939,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api//url",{"_index":4941,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/send",{"_index":4890,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/messaging/emailnotification",{"_index":4906,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/object/$packagetype",{"_index":4942,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/recordmetadata/$oid",{"_index":4944,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/search",{"_index":4943,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["apis",{"_index":4922,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["app",{"_index":1042,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["app.js",{"_index":4731,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["appear",{"_index":4868,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["append",{"_index":3739,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["appendlocation(newloc:any",{"_index":2782,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["applicable",{"_index":4104,"title":{},"body":{"license.html":{}}}],["application",{"_index":3454,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["application/json;charset=utf",{"_index":881,"title":{},"body":{"classes/BaseService.html":{}}}],["applicationref",{"_index":1043,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["applications",{"_index":4693,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["applied",{"_index":4068,"title":{},"body":{"license.html":{}}}],["applies",{"_index":3982,"title":{},"body":{"license.html":{}}}],["applink",{"_index":3719,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["apply",{"_index":2768,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["applyeditnotesbuttontext",{"_index":2755,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["applyfilter",{"_index":3099,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(event",{"_index":3106,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(event:any",{"_index":3110,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applying",{"_index":3932,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":4126,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":4260,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4647,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4728,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ardc",{"_index":3943,"title":{},"body":{"index.html":{}}}],["area",{"_index":2558,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["area'},{'name",{"_index":298,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["args",{"_index":2600,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"additional-documentation/installation-guide.html":{}}}],["args?:any[]):string",{"_index":2605,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["arialabel",{"_index":3489,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["arise",{"_index":4050,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4631,"title":{},"body":{"license.html":{}}}],["around",{"_index":4768,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["arrange",{"_index":4548,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":4561,"title":{},"body":{"license.html":{}}}],["array",{"_index":1763,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["arrayproperty",{"_index":1614,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["arrays",{"_index":1737,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["article",{"_index":4234,"title":{},"body":{"license.html":{}}}],["asc",{"_index":3371,"title":{},"body":{"components/SortComponent.html":{}}}],["asking",{"_index":4002,"title":{},"body":{"license.html":{}}}],["assert",{"_index":4018,"title":{},"body":{"license.html":{}}}],["assests/locales",{"_index":4876,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["assets",{"_index":3916,"title":{},"body":{"index.html":{},"license.html":{}}}],["assists",{"_index":3913,"title":{},"body":{"index.html":{}}}],["associated",{"_index":4176,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4621,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":2474,"title":{},"body":{"components/MapComponent.html":{}}}],["assumption",{"_index":4651,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4443,"title":{},"body":{"license.html":{}}}],["assures",{"_index":4071,"title":{},"body":{"license.html":{}}}],["asymmetrik/ngx",{"_index":3316,"title":{},"body":{"modules/SharedModule.html":{}}}],["async",{"_index":678,"title":{},"body":{"components/AsynchComponent.html":{},"dependencies.html":{}}}],["asynch",{"_index":251,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["asynch.component",{"_index":3326,"title":{},"body":{"modules/SharedModule.html":{}}}],["asynch.component.html",{"_index":640,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts",{"_index":636,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:103",{"_index":653,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:122",{"_index":661,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:159",{"_index":655,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:166",{"_index":658,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:172",{"_index":660,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:178",{"_index":663,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:185",{"_index":652,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:95",{"_index":665,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:96",{"_index":666,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:97",{"_index":650,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynchcomponent",{"_index":250,"title":{"components/AsynchComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["asynchfield",{"_index":664,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynchronous",{"_index":637,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asyncloaddata",{"_index":3136,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["attach",{"_index":4659,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["attachment",{"_index":2616,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["attachment':\"attachment",{"_index":2750,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["attachment.dateupdated",{"_index":2655,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attachment:any",{"_index":2653,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attempt",{"_index":4457,"title":{},"body":{"license.html":{}}}],["attr.aria",{"_index":1454,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["attributed",{"_index":4030,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":4427,"title":{},"body":{"license.html":{}}}],["au",{"_index":3469,"title":{},"body":{"injectables/TranslationService.html":{}}}],["audience",{"_index":4958,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["australia",{"_index":2371,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["australian",{"_index":3921,"title":{},"body":{"index.html":{}}}],["auth",{"_index":2107,"title":{},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["auth'},{'name",{"_index":287,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["auth.js",{"_index":4770,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["authentication",{"_index":2106,"title":{"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["author",{"_index":187,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["authorisation",{"_index":4771,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["authorization",{"_index":4379,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["authorized",{"_index":4418,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":4521,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":4565,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3985,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":4493,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4188,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["autoreload",{"_index":3876,"title":{},"body":{"dependencies.html":{}}}],["available",{"_index":4112,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["avoid",{"_index":4066,"title":{},"body":{"license.html":{}}}],["away",{"_index":3976,"title":{},"body":{"license.html":{}}}],["awesome",{"_index":3829,"title":{},"body":{"dependencies.html":{}}}],["axios",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":452,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["b.value",{"_index":454,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["back",{"_index":4857,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["backend",{"_index":3473,"title":{},"body":{"injectables/TranslationService.html":{},"dependencies.html":{}}}],["background",{"_index":679,"title":{},"body":{"components/AsynchComponent.html":{}}}],["banihit",{"_index":189,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["base",{"_index":206,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseclass",{"_index":1420,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["based",{"_index":603,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["basefield",{"_index":1318,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["basefieldinst.constructor(newopts",{"_index":1347,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["baselayers",{"_index":2441,"title":{},"body":{"components/MapComponent.html":{}}}],["baseservice",{"_index":9,"title":{"classes/BaseService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:34",{"_index":76,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:35",{"_index":74,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:36",{"_index":75,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:37",{"_index":72,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:38",{"_index":73,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:39",{"_index":78,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:40",{"_index":71,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:41",{"_index":77,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:64",{"_index":69,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:70",{"_index":62,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:74",{"_index":51,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:80",{"_index":61,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:84",{"_index":56,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:93",{"_index":64,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:98",{"_index":67,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseurl",{"_index":15,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/mint",{"_index":4934,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/redbox",{"_index":4930,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl:string",{"_index":857,"title":{},"body":{"classes/BaseService.html":{}}}],["basic",{"_index":4189,"title":{},"body":{"license.html":{}}}],["basicsearch",{"_index":973,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["bcrypt",{"_index":3808,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":3857,"title":{},"body":{"dependencies.html":{}}}],["becomes",{"_index":1099,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["before",{"_index":1061,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["beginning",{"_index":4821,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["behalf",{"_index":4214,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":3459,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["being",{"_index":2368,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["believe",{"_index":4557,"title":{},"body":{"license.html":{}}}],["below",{"_index":4221,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["benefit",{"_index":4551,"title":{},"body":{"license.html":{}}}],["best",{"_index":4657,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["beta.19",{"_index":3835,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":4185,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4296,"title":{},"body":{"license.html":{}}}],["blank",{"_index":3399,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["block",{"_index":509,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["block'},{'name",{"_index":344,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["blocks",{"_index":507,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["body",{"_index":874,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"license.html":{}}}],["body[parentfield",{"_index":876,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["bonequi",{"_index":3620,"title":{},"body":{"injectables/UtilityService.html":{}}}],["boolean",{"_index":158,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["boolean=true",{"_index":2081,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["bootstrap",{"_index":921,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["boston",{"_index":1203,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["both",{"_index":4026,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["box",{"_index":4686,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["boxes",{"_index":4819,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["br",{"_index":3471,"title":{},"body":{"injectables/TranslationService.html":{}}}],["brand",{"_index":3584,"title":{},"body":{"injectables/UserSimpleService.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["branding/@portal/dashboard",{"_index":520,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["branding:this.config.branding",{"_index":3590,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["brandingandportalurl",{"_index":16,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["brandingandportalurl:string",{"_index":858,"title":{},"body":{"classes/BaseService.html":{}}}],["brazzatti",{"_index":2395,"title":{},"body":{"components/MapComponent.html":{},"injectables/UtilityService.html":{}}}],["break",{"_index":503,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["breaks",{"_index":2543,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["brief",{"_index":4665,"title":{},"body":{"license.html":{}}}],["browse",{"_index":4699,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":631,"title":{},"body":{"classes/AngularPage.html":{},"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{}}}],["browser.get",{"_index":633,"title":{},"body":{"classes/AngularPage.html":{}}}],["browserlanguagedetector",{"_index":3452,"title":{},"body":{"injectables/TranslationService.html":{}}}],["browsermodule",{"_index":935,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["btn",{"_index":1245,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["build",{"_index":1831,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["built",{"_index":4757,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["business",{"_index":4571,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["button",{"_index":125,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["button'},{'name",{"_index":244,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["button.component",{"_index":3310,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.ts",{"_index":120,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:45",{"_index":197,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:47",{"_index":163,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:59",{"_index":165,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttonbarcontainer",{"_index":502,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["buttonbarcontainer'},{'name",{"_index":254,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["buttonbarcontainercomponent",{"_index":253,"title":{"components/ButtonBarContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["buttonelem",{"_index":1105,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["buttons",{"_index":229,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["c",{"_index":1155,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["c.clname",{"_index":1946,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["c.haserror('required",{"_index":1428,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["c:any",{"_index":1944,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["cache",{"_index":3384,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"dependencies.html":{}}}],["cache[template",{"_index":3387,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["calcyte",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["calendar",{"_index":1574,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["call",{"_index":1881,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["callback",{"_index":4966,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["called",{"_index":4096,"title":{},"body":{"license.html":{}}}],["calls",{"_index":510,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["can't",{"_index":1887,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["cancel",{"_index":256,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["cancelbutton",{"_index":390,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cancelbuttoncomponent",{"_index":255,"title":{"components/CancelButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["canceleditnotesbuttontext",{"_index":2754,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["canremove",{"_index":1235,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["cansort",{"_index":1439,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["capture",{"_index":4786,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["carry",{"_index":4271,"title":{},"body":{"license.html":{}}}],["case",{"_index":504,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["cases",{"_index":4364,"title":{},"body":{"license.html":{}}}],["catch",{"_index":2490,"title":{},"body":{"components/MapComponent.html":{}}}],["catch(error",{"_index":3745,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["cause",{"_index":4300,"title":{},"body":{"license.html":{}}}],["cease",{"_index":4461,"title":{},"body":{"license.html":{}}}],["center",{"_index":2347,"title":{},"body":{"components/MapComponent.html":{}}}],["centred",{"_index":2370,"title":{},"body":{"components/MapComponent.html":{}}}],["certain",{"_index":4004,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4474,"title":{},"body":{"license.html":{}}}],["change",{"_index":584,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["changed",{"_index":2365,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":384,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["changeref",{"_index":481,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["changes",{"_index":4738,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["changing",{"_index":3968,"title":{},"body":{"license.html":{}}}],["character",{"_index":2087,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["characterized",{"_index":4391,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3990,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":3488,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["checkbox'},{'name",{"_index":353,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["checkbox.component",{"_index":3328,"title":{},"body":{"modules/SharedModule.html":{}}}],["checkbox.component.ts",{"_index":3485,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:21",{"_index":3492,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:22",{"_index":3490,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checked",{"_index":2736,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["checked:false",{"_index":2237,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["checked:true",{"_index":2216,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["checkifhasloaded",{"_index":1519,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["checking",{"_index":3654,"title":{},"body":{"injectables/UtilityService.html":{}}}],["checkou",{"_index":4717,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chevron",{"_index":1294,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["choice",{"_index":4718,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chokidar",{"_index":3814,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":4608,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4611,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1248,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["circlemarker",{"_index":2432,"title":{},"body":{"components/MapComponent.html":{}}}],["circumstances",{"_index":4219,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4226,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4650,"title":{},"body":{"license.html":{}}}],["ckan",{"_index":129,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["claim",{"_index":4513,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4523,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{"classes/AngularPage.html":{},"classes/BaseService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/LoadableComponent.html":{},"classes/LoginResult.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"classes/User.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["classes",{"_index":625,"title":{},"body":{"classes/AngularPage.html":{},"classes/BaseService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"classes/LoginResult.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"classes/User.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["clear",{"_index":2989,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["clearly",{"_index":4024,"title":{},"body":{"license.html":{}}}],["clearpendingatt(value",{"_index":2784,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["click)=\"movedown($event",{"_index":1457,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"moveup($event",{"_index":1449,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"removeelem($event",{"_index":1460,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["client",{"_index":827,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["clname",{"_index":446,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["clone",{"_index":4721,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["close",{"_index":517,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["closely",{"_index":4646,"title":{},"body":{"license.html":{}}}],["closeonsave",{"_index":518,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cluster_dashboardmodule",{"_index":924,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_bootstrap",{"_index":927,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":925,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":926,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dmpmodule",{"_index":1144,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_bootstrap",{"_index":1148,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_declarations",{"_index":1145,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_dmpformcomponent_providers",{"_index":1146,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_imports",{"_index":1147,"title":{},"body":{"modules/DmpModule.html":{}}}],["cluster_exportmodule",{"_index":1600,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_bootstrap",{"_index":1604,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_declarations",{"_index":1601,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_exportformcomponent_providers",{"_index":1602,"title":{},"body":{"modules/ExportModule.html":{}}}],["cluster_exportmodule_imports",{"_index":1603,"title":{},"body":{"modules/ExportModule.html":{}}}],["cluster_localauthmodule",{"_index":2160,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_bootstrap",{"_index":2163,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_declarations",{"_index":2161,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_imports",{"_index":2162,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["cluster_managerolesmodule",{"_index":2318,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_bootstrap",{"_index":2321,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_declarations",{"_index":2319,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_imports",{"_index":2320,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["cluster_manageusersmodule",{"_index":2325,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_bootstrap",{"_index":2328,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_declarations",{"_index":2326,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_imports",{"_index":2327,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["cluster_recordsearchmodule",{"_index":3059,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_bootstrap",{"_index":3063,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_declarations",{"_index":3060,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_imports",{"_index":3062,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_recordsearchmodule_recordsearchcomponent_providers",{"_index":3061,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_reportmodule",{"_index":3236,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_bootstrap",{"_index":3239,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_declarations",{"_index":3237,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_imports",{"_index":3238,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_reportmodule_providers",{"_index":3240,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":3287,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":3288,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":3289,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":3290,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_transferownermodule",{"_index":3424,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_bootstrap",{"_index":3427,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_declarations",{"_index":3425,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_imports",{"_index":3426,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["cluster_userprofilemodule",{"_index":3544,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_bootstrap",{"_index":3547,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_declarations",{"_index":3545,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":3546,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_workspacelistmodule",{"_index":3769,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_bootstrap",{"_index":3772,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_declarations",{"_index":3770,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_imports",{"_index":3771,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["code",{"_index":3934,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["col",{"_index":1872,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collect",{"_index":4591,"title":{},"body":{"license.html":{}}}],["collection",{"_index":1731,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collections",{"_index":3927,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["cols",{"_index":2569,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["column.link.pattern",{"_index":3154,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["columns",{"_index":2626,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["columntitle:string",{"_index":3175,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["combination",{"_index":4597,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4595,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4290,"title":{},"body":{"license.html":{}}}],["combines",{"_index":3523,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["come",{"_index":4856,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["comes",{"_index":4277,"title":{},"body":{"license.html":{}}}],["command",{"_index":4714,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["commands",{"_index":4137,"title":{},"body":{"license.html":{}}}],["commence",{"_index":4841,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["commercial",{"_index":4372,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":4539,"title":{},"body":{"license.html":{}}}],["common",{"_index":4368,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3942,"title":{},"body":{"index.html":{}}}],["communication",{"_index":4183,"title":{},"body":{"license.html":{}}}],["community",{"_index":3924,"title":{},"body":{"index.html":{}}}],["compare",{"_index":447,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["compare(a",{"_index":2661,"title":{},"body":{"components/PDFListComponent.html":{}}}],["comparefn",{"_index":1210,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["comparefn(a",{"_index":1212,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["comparefn(a,b",{"_index":449,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["compat",{"_index":3873,"title":{},"body":{"dependencies.html":{}}}],["compatible",{"_index":4947,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["compclass",{"_index":1948,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["compfactory",{"_index":1116,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compilation",{"_index":4285,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4295,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4576,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1087,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compiler",{"_index":4166,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2867,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["completed",{"_index":715,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completer",{"_index":1630,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["completerdata",{"_index":1610,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem",{"_index":1622,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem['description",{"_index":1832,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem['originalobject",{"_index":1807,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem[this.compositetitlename",{"_index":1806,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completerservice",{"_index":1629,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completion",{"_index":726,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completionlabel",{"_index":691,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completionratetype",{"_index":692,"title":{},"body":{"components/AsynchComponent.html":{}}}],["complex",{"_index":4917,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["compliance",{"_index":4497,"title":{},"body":{"license.html":{}}}],["comply",{"_index":4211,"title":{},"body":{"license.html":{}}}],["component",{"_index":114,"title":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["component'},{'name",{"_index":252,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["component_template",{"_index":243,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["componentclasses",{"_index":1994,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["componentfactoryresolver",{"_index":1041,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["componentreactors",{"_index":1359,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["componentref",{"_index":1072,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["components",{"_index":116,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["compositetitlename",{"_index":1615,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["computer",{"_index":4108,"title":{},"body":{"license.html":{}}}],["computers",{"_index":4065,"title":{},"body":{"license.html":{}}}],["concat",{"_index":3631,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenate",{"_index":3602,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenate(data",{"_index":3612,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenated",{"_index":3613,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concerning",{"_index":4596,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4603,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":4570,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4075,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":3935,"title":{},"body":{"index.html":{}}}],["config",{"_index":17,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config.default",{"_index":3669,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim",{"_index":3674,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim}${flddata",{"_index":3657,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.field",{"_index":3661,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flags",{"_index":3679,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flagstrail",{"_index":3686,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.name",{"_index":2997,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config.regex",{"_index":3677,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.regextrail",{"_index":3684,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.separator",{"_index":3695,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.setcurrentvalue(value",{"_index":3037,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config/emailnotification.js",{"_index":4882,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["config/env/.js",{"_index":4780,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["config/env/development.js",{"_index":4949,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/env/production.js",{"_index":4950,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/form.js",{"_index":4844,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/record.js",{"_index":4923,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["config/recordtype.js",{"_index":4803,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/workflow.js",{"_index":4810,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configration",{"_index":4764,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["configservice",{"_index":18,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["configurable",{"_index":4785,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configuration",{"_index":891,"title":{"additional-documentation/configuration-guide.html":{}},"body":{"injectables/ConfigService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["configure",{"_index":4726,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configured",{"_index":2452,"title":{},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["configuring",{"_index":4781,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["confirmpassword",{"_index":3511,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["connect",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["connectcb",{"_index":2963,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["connection",{"_index":4559,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":4485,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4630,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1740,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["considered",{"_index":4445,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4530,"title":{},"body":{"license.html":{}}}],["console.error(\"error",{"_index":2892,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(\"login",{"_index":2148,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(\"oid",{"_index":2872,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(\"url",{"_index":2875,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(`checking",{"_index":1945,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(`configservice",{"_index":914,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(`created",{"_index":3766,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(`data",{"_index":1775,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(`form",{"_index":598,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`got",{"_index":795,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`group",{"_index":2848,"title":{},"body":{"classes/RbValidator.html":{}}}],["console.log(`hidden",{"_index":583,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`invalid",{"_index":572,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`loggin",{"_index":3582,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["console.log(`on",{"_index":1876,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(`repeatable",{"_index":1401,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(`subscribed",{"_index":781,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`subscribing",{"_index":760,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`translator",{"_index":3479,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(`using",{"_index":1734,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(data",{"_index":783,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(error",{"_index":3746,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(eventdata",{"_index":1404,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(f.class",{"_index":1932,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(model",{"_index":3767,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(name",{"_index":409,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(oid",{"_index":2790,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["console.log(progress",{"_index":797,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(res",{"_index":2146,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(selected",{"_index":1877,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(socketres",{"_index":784,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(this.form.value",{"_index":600,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(value",{"_index":585,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["conspicuously",{"_index":4259,"title":{},"body":{"license.html":{}}}],["const",{"_index":436,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["constant",{"_index":2540,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["constantly",{"_index":4060,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":4201,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"injectables/ANDSService.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(@inject(componentfactoryresolver",{"_index":1074,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(@inject(http",{"_index":1844,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["constructor(changeref",{"_index":649,"title":{},"body":{"components/AsynchComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{}}}],["constructor(completerservice",{"_index":1989,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["constructor(componentfactoryresolver",{"_index":1040,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(elm",{"_index":1526,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["constructor(http",{"_index":33,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(options",{"_index":214,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(opts",{"_index":2971,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["constructor(private",{"_index":480,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["constructor(rectype",{"_index":2985,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["constructor(rolesservice",{"_index":2191,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["constructor(sanitizer",{"_index":3125,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["constructor(translatei18next",{"_index":3433,"title":{},"body":{"injectables/TranslationService.html":{}}}],["constructor(url",{"_index":1613,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["constructor(userservice",{"_index":2113,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["construed",{"_index":4580,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4352,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4669,"title":{},"body":{"license.html":{}}}],["contain",{"_index":4577,"title":{},"body":{"license.html":{}}}],["container",{"_index":387,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["containerised",{"_index":4776,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["containing",{"_index":2837,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["contains",{"_index":4448,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["content",{"_index":4200,"title":{},"body":{"license.html":{}}}],["contents",{"_index":4534,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["context",{"_index":4161,"title":{},"body":{"license.html":{}}}],["continue",{"_index":4397,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4382,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":4442,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4585,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3978,"title":{},"body":{"license.html":{}}}],["contrib/redbox2ckan#dev_build",{"_index":3867,"title":{},"body":{"dependencies.html":{}}}],["contributor",{"_index":1446,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["contributor's",{"_index":4522,"title":{},"body":{"license.html":{}}}],["contributor'},{'name",{"_index":259,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["contributor.component",{"_index":1261,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["contributorcomponent",{"_index":257,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["contributorfield",{"_index":1260,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["control",{"_index":461,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["control.service",{"_index":3299,"title":{},"body":{"modules/SharedModule.html":{}}}],["control.service.ts",{"_index":1982,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:42",{"_index":1991,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:54",{"_index":1993,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:58",{"_index":1995,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:62",{"_index":2003,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:69",{"_index":2001,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:77",{"_index":1999,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:88",{"_index":1996,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:93",{"_index":1997,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.value",{"_index":3532,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["control.value.length",{"_index":2841,"title":{},"body":{"classes/RbValidator.html":{}}}],["control1",{"_index":3908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control2",{"_index":3513,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["controlled",{"_index":4525,"title":{},"body":{"license.html":{}}}],["convenience",{"_index":191,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["convenient",{"_index":4129,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1796,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["converttoitem",{"_index":1611,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{}}}],["converttoitem(data",{"_index":1620,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["convey",{"_index":4116,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4563,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4392,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4123,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4441,"title":{},"body":{"license.html":{}}}],["coordinateshelp",{"_index":2413,"title":{},"body":{"components/MapComponent.html":{}}}],["coordinateshelpshow",{"_index":2386,"title":{},"body":{"components/MapComponent.html":{}}}],["copies",{"_index":3967,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1194,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["copying",{"_index":4076,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3971,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1154,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["copyrightable",{"_index":4085,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4216,"title":{},"body":{"license.html":{}}}],["core",{"_index":3819,"title":{},"body":{"dependencies.html":{}}}],["correction",{"_index":4625,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2358,"title":{},"body":{"components/MapComponent.html":{}}}],["corresponding",{"_index":4169,"title":{},"body":{"license.html":{}}}],["cost",{"_index":4319,"title":{},"body":{"license.html":{}}}],["count",{"_index":4825,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["counterclaim",{"_index":4514,"title":{},"body":{"license.html":{}}}],["countries",{"_index":4113,"title":{},"body":{"license.html":{}}}],["country",{"_index":4553,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4824,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["course",{"_index":4684,"title":{},"body":{"license.html":{}}}],["court",{"_index":4584,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4645,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4542,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2344,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["covered",{"_index":4098,"title":{},"body":{"license.html":{}}}],["create",{"_index":513,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["create(record",{"_index":2893,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["created",{"_index":758,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createddownload",{"_index":2673,"title":{},"body":{"components/PDFListComponent.html":{}}}],["createdinfo",{"_index":763,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createdinfo.oid",{"_index":765,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createformgroup",{"_index":1691,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["createformmodel",{"_index":3758,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["createformmodel(valueelem",{"_index":1690,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["createnewelem(basefieldinst",{"_index":1341,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["creating",{"_index":506,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["creation",{"_index":761,"title":{},"body":{"components/AsynchComponent.html":{}}}],["credentials",{"_index":4948,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["creds",{"_index":2156,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["criteria",{"_index":683,"title":{},"body":{"components/AsynchComponent.html":{}}}],["criterion",{"_index":4141,"title":{},"body":{"license.html":{}}}],["criticalerror",{"_index":1504,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["cross",{"_index":4512,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["csrf",{"_index":883,"title":{},"body":{"classes/BaseService.html":{}}}],["csrfres.json()['_csrf",{"_index":909,"title":{},"body":{"injectables/ConfigService.html":{}}}],["csrftoken",{"_index":892,"title":{},"body":{"injectables/ConfigService.html":{}}}],["css",{"_index":180,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["cssclasses",{"_index":2032,"title":{},"body":{"components/GenericGroupComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{}}}],["csv",{"_index":1597,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["ctrl",{"_index":463,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrl.value",{"_index":464,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrlindex",{"_index":167,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["cuddihy",{"_index":1226,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["cure",{"_index":4477,"title":{},"body":{"license.html":{}}}],["currently",{"_index":3919,"title":{},"body":{"index.html":{}}}],["currentpage",{"_index":2689,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["currentuser",{"_index":2180,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["currentuser.email",{"_index":2315,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["currentuser.name",{"_index":2314,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["curtabid",{"_index":2477,"title":{},"body":{"components/MapComponent.html":{}}}],["custodians",{"_index":3928,"title":{},"body":{"index.html":{}}}],["custom",{"_index":2822,"title":{},"body":{"classes/RbValidator.html":{}}}],["customarily",{"_index":4310,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4316,"title":{},"body":{"license.html":{}}}],["customisation",{"_index":4746,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["customisations",{"_index":4748,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["customise",{"_index":4910,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["customised",{"_index":4881,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["customising",{"_index":4909,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["cwd",{"_index":4735,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["cyber",{"_index":1158,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["d",{"_index":3651,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{}}}],["damages",{"_index":4628,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1252,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/ManageRolesComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["dashboard",{"_index":91,"title":{},"body":{"injectables/ANDSService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{}}}],["dashboard'},{'name",{"_index":261,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["dashboard.component",{"_index":940,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcomponent",{"_index":260,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":917,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservice",{"_index":947,"title":{"injectables/DashboardService.html":{}},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["dashboardtitle",{"_index":2680,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["data",{"_index":263,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["data.oid",{"_index":3057,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["data.originalobject",{"_index":1777,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data.title",{"_index":1727,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[fielddesc",{"_index":1839,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[fieldname",{"_index":1827,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[titlefld",{"_index":1757,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["database",{"_index":3740,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["datacrate",{"_index":3822,"title":{},"body":{"dependencies.html":{}}}],["datalocation",{"_index":2727,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.component",{"_index":3305,"title":{},"body":{"modules/SharedModule.html":{}}}],["datalocation.location",{"_index":2817,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.name",{"_index":2818,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.notes",{"_index":2807,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.selected",{"_index":2802,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation:any",{"_index":2801,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocationcomponent",{"_index":262,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["datarecord",{"_index":2343,"title":{},"body":{"components/MapComponent.html":{}}}],["dataservice",{"_index":1639,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["datatypelookup:any",{"_index":2747,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datatypes:object",{"_index":2744,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["date",{"_index":266,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":911,"title":{},"body":{"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{}}}],["datecompletedlabel",{"_index":687,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datecreated",{"_index":2681,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["dateformat:string",{"_index":694,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datemodified",{"_index":2682,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["datepicker.readthedocs.io/en/stable",{"_index":605,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["datepickeropts",{"_index":1505,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["datestartedlabel",{"_index":686,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datetime",{"_index":388,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"dependencies.html":{}}}],["datetime/ng2",{"_index":1607,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["datetimecomponent",{"_index":265,"title":{"components/DateTimeComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["days",{"_index":4473,"title":{},"body":{"license.html":{}}}],["dc_title",{"_index":1680,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["dd",{"_index":1589,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["dd/mm/yyyy",{"_index":1571,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["debug",{"_index":3444,"title":{},"body":{"injectables/TranslationService.html":{}}}],["december",{"_index":4239,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1892,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["declarations",{"_index":920,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["declare",{"_index":398,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["declining",{"_index":4434,"title":{},"body":{"license.html":{}}}],["decodeuri(querystr",{"_index":3025,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["decodeuricomponent(window.location.search.substring(1",{"_index":575,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["decorators",{"_index":1027,"title":{},"body":{"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["deemed",{"_index":4228,"title":{},"body":{"license.html":{}}}],["default",{"_index":57,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["defaultdrawoptions",{"_index":2417,"title":{},"body":{"components/MapComponent.html":{}}}],["defaultform",{"_index":4845,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["defaultleafletoptions",{"_index":2437,"title":{},"body":{"components/MapComponent.html":{}}}],["defaults",{"_index":745,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/format",{"_index":4903,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/from",{"_index":4900,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/subject",{"_index":4902,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defective",{"_index":4620,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4582,"title":{},"body":{"license.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defines",{"_index":4804,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["definition",{"_index":516,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["definitions",{"_index":4080,"title":{},"body":{"license.html":{}}}],["defvalue",{"_index":1538,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["delegateerrorhandling",{"_index":1273,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delegates",{"_index":613,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["delete",{"_index":1405,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delete(oid",{"_index":2965,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["delim",{"_index":1761,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{}}}],["delimiter",{"_index":3617,"title":{},"body":{"injectables/UtilityService.html":{}}}],["delimpair",{"_index":1766,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delimpair.prefix}${titleval}${_.isempty(title",{"_index":1768,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delimpair.suffix",{"_index":1769,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delim}targetstep=${targetstep",{"_index":2902,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["denied",{"_index":3144,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["denominated",{"_index":4540,"title":{},"body":{"license.html":{}}}],["deny",{"_index":4033,"title":{},"body":{"license.html":{}}}],["denying",{"_index":4001,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":919,"title":{"dependencies.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{}}}],["dependency",{"_index":2224,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["dependentfieldnames",{"_index":2832,"title":{},"body":{"classes/RbValidator.html":{}}}],["depending",{"_index":4741,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["depends",{"_index":2367,"title":{},"body":{"components/MapComponent.html":{}}}],["deployment",{"_index":4754,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["deprive",{"_index":4549,"title":{},"body":{"license.html":{}}}],["desc",{"_index":3372,"title":{},"body":{"components/SortComponent.html":{}}}],["descending",{"_index":2663,"title":{},"body":{"components/PDFListComponent.html":{}}}],["describe",{"_index":3925,"title":{},"body":{"index.html":{}}}],["described",{"_index":4870,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["description",{"_index":522,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["design",{"_index":4797,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["designated",{"_index":4327,"title":{},"body":{"license.html":{}}}],["designed",{"_index":551,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["detail",{"_index":4601,"title":{},"body":{"license.html":{}}}],["details",{"_index":1192,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["details.the",{"_index":4681,"title":{},"body":{"license.html":{}}}],["details:details",{"_index":3593,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["detect",{"_index":2886,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["detector",{"_index":3456,"title":{},"body":{"injectables/TranslationService.html":{}}}],["detectretina",{"_index":2410,"title":{},"body":{"components/MapComponent.html":{}}}],["determining",{"_index":4362,"title":{},"body":{"license.html":{}}}],["dev_build",{"_index":4722,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["develop",{"_index":4654,"title":{},"body":{"license.html":{}}}],["developers",{"_index":4014,"title":{},"body":{"license.html":{}}}],["development",{"_index":3946,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["devices",{"_index":4032,"title":{},"body":{"license.html":{}}}],["di'ing",{"_index":1045,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dict",{"_index":3629,"title":{},"body":{"injectables/UtilityService.html":{}}}],["differ",{"_index":4600,"title":{},"body":{"license.html":{}}}],["different",{"_index":4330,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["differently",{"_index":4423,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4215,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4334,"title":{},"body":{"license.html":{}}}],["directive",{"_index":241,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["directives",{"_index":367,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["directly",{"_index":2541,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["directories",{"_index":4877,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["directory",{"_index":4898,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["disabled",{"_index":1032,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabled:boolean",{"_index":1073,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["disabledelement",{"_index":3713,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["disabledelement.prop(\"disabled\",true",{"_index":1113,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledelements",{"_index":1034,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledexpression",{"_index":1035,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disableeditafterselect",{"_index":1647,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["disableinput",{"_index":1864,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["disclaim",{"_index":4250,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4612,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4420,"title":{},"body":{"license.html":{}}}],["discovery",{"_index":3939,"title":{},"body":{"index.html":{}}}],["discriminatory",{"_index":4567,"title":{},"body":{"license.html":{}}}],["display",{"_index":200,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["displayed",{"_index":4428,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["displays",{"_index":4125,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":4604,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3965,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1179,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["distributing",{"_index":4572,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4077,"title":{},"body":{"license.html":{}}}],["distro",{"_index":4742,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["dmp",{"_index":269,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["dmpfieldcomponent",{"_index":268,"title":{"components/DmpFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dmpformcomponent",{"_index":271,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dmpmodule",{"_index":1143,"title":{"modules/DmpModule.html":{}},"body":{"modules/DmpModule.html":{},"modules.html":{},"overview.html":{}}}],["dmpt",{"_index":2037,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["doaction",{"_index":537,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["docker",{"_index":3955,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{}}}],["document",{"_index":2117,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SortComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["document:any",{"_index":2131,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["documentation",{"_index":2362,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["documentation](http://leafletjs.com/reference",{"_index":2547,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation](https://leaflet.github.io/leaflet.draw/docs/leaflet",{"_index":2549,"title":{},"body":{"components/MapComponent.html":{}}}],["documented",{"_index":4407,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":2849,"title":{},"body":{"classes/RbValidator.html":{}}}],["dom",{"_index":117,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["domains",{"_index":4052,"title":{},"body":{"license.html":{}}}],["domsanitizer",{"_index":3126,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["dont",{"_index":1095,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dotenv",{"_index":3824,"title":{},"body":{"dependencies.html":{}}}],["doubtful",{"_index":4363,"title":{},"body":{"license.html":{}}}],["down",{"_index":1298,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["download",{"_index":1516,"title":{},"body":{"components/ExportFormComponent.html":{},"components/PDFListComponent.html":{}}}],["downstream",{"_index":4495,"title":{},"body":{"license.html":{}}}],["draft",{"_index":4837,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["draftplans",{"_index":3185,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["draw",{"_index":2378,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["draw's",{"_index":2379,"title":{},"body":{"components/MapComponent.html":{}}}],["drawlayers",{"_index":2517,"title":{},"body":{"components/MapComponent.html":{}}}],["drawn",{"_index":2372,"title":{},"body":{"components/MapComponent.html":{}}}],["drawnitems",{"_index":2400,"title":{},"body":{"components/MapComponent.html":{}}}],["drawoptions",{"_index":2377,"title":{},"body":{"components/MapComponent.html":{}}}],["dropdown",{"_index":2672,"title":{},"body":{"components/PDFListComponent.html":{}}}],["dropdownfield",{"_index":442,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["dropdownfield'},{'name",{"_index":274,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["dropdownfieldcomponent",{"_index":273,"title":{"components/DropdownFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["duplication",{"_index":4928,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["durable",{"_index":4309,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":4361,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4178,"title":{},"body":{"license.html":{}}}],["e",{"_index":561,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["e.g",{"_index":4719,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["e.layer",{"_index":2496,"title":{},"body":{"components/MapComponent.html":{}}}],["e.layers",{"_index":2502,"title":{},"body":{"components/MapComponent.html":{}}}],["e.layertype",{"_index":2494,"title":{},"body":{"components/MapComponent.html":{}}}],["e.preventdefault",{"_index":1595,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["e.target.href.split('#')[1",{"_index":562,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["each",{"_index":3135,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["earlier",{"_index":4097,"title":{},"body":{"license.html":{}}}],["early",{"_index":4855,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["easier",{"_index":4929,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["ecosystem.json",{"_index":4745,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ecosytem.json",{"_index":4725,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["edit",{"_index":1888,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editable",{"_index":2858,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editable).then((form:any",{"_index":2879,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editable:boolean",{"_index":2870,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editcssclasses",{"_index":4847,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editing",{"_index":4873,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editingnotes",{"_index":2718,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotes",{"_index":2719,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotes(datalocation",{"_index":2725,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotesbuttontext",{"_index":2752,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotescssclasses",{"_index":2756,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotestitle",{"_index":2753,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editonly",{"_index":2035,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editroles",{"_index":4835,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["edituser",{"_index":2186,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["edituser(username",{"_index":2194,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["edituser(username:string",{"_index":2258,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["effect",{"_index":4642,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4248,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4229,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4069,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":4506,"title":{},"body":{"license.html":{}}}],["ejs",{"_index":3826,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["ele",{"_index":1838,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["electronic",{"_index":4670,"title":{},"body":{"license.html":{}}}],["elem.componentreactors.push(this",{"_index":1488,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.margintop",{"_index":1485,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.setupeventhandlers",{"_index":1487,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.vocabfield.initialvalue",{"_index":1486,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem:any",{"_index":1483,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["element",{"_index":240,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["element(by.css('app",{"_index":634,"title":{},"body":{"classes/AngularPage.html":{}}}],["elementref",{"_index":1527,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["elements",{"_index":1059,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["elems",{"_index":1320,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elems.push(fieldclone.createformmodel",{"_index":1330,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elm",{"_index":1530,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["email",{"_index":2173,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email's",{"_index":4912,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email:email",{"_index":2914,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["emailnotification.js",{"_index":4772,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["emailnotificationservice",{"_index":1218,"title":{"injectables/EmailNotificationService.html":{}},"body":{"injectables/EmailNotificationService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["emailregexp",{"_index":3525,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["emailregexp.test(control.value",{"_index":3533,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["emails",{"_index":4885,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["embeddablecomponent",{"_index":1232,"title":{"classes/EmbeddableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:222",{"_index":2047,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:223",{"_index":2050,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:224",{"_index":2049,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:225",{"_index":2048,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:226",{"_index":2051,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:228",{"_index":2053,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:232",{"_index":2052,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embodied",{"_index":4305,"title":{},"body":{"license.html":{}}}],["emergency",{"_index":505,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["emitconfig",{"_index":894,"title":{},"body":{"injectables/ConfigService.html":{}}}],["emitevent",{"_index":225,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["emitevent:boolean",{"_index":2777,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["emitinit",{"_index":25,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["emitmodeltoviewchange:true",{"_index":227,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["employer",{"_index":4687,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2359,"title":{},"body":{"components/MapComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{}}}],["emptyfields",{"_index":2838,"title":{},"body":{"classes/RbValidator.html":{}}}],["en",{"_index":3463,"title":{},"body":{"injectables/TranslationService.html":{}}}],["enable",{"_index":1097,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["enabled",{"_index":1100,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["enabledvalidators",{"_index":2621,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["enables",{"_index":4118,"title":{},"body":{"license.html":{}}}],["encapsulation",{"_index":3486,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["end",{"_index":2883,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["endpoint",{"_index":4891,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["endpoints",{"_index":4926,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["enforce",{"_index":4541,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":4254,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":2451,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["enter",{"_index":2553,"title":{},"body":{"components/MapComponent.html":{}}}],["entered",{"_index":2556,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["entire",{"_index":4275,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entirely",{"_index":4593,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4498,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1411,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entrycomponents",{"_index":1209,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/SharedModule.html":{},"modules/WorkspaceListModule.html":{}}}],["env",{"_index":4727,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["environment",{"_index":4706,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["environments",{"_index":4963,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["equivalent",{"_index":4204,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":4031,"title":{},"body":{"license.html":{}}}],["error",{"_index":186,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["error('cannot",{"_index":3743,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["es",{"_index":3845,"title":{},"body":{"dependencies.html":{}}}],["es6",{"_index":86,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["escape",{"_index":1633,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["essential",{"_index":4162,"title":{},"body":{"license.html":{}}}],["etc",{"_index":3390,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["even",{"_index":1184,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["event",{"_index":164,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["event.preventdefault",{"_index":2142,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["event.shown",{"_index":2483,"title":{},"body":{"components/MapComponent.html":{}}}],["event.tabid",{"_index":2484,"title":{},"body":{"components/MapComponent.html":{}}}],["event.target.checked",{"_index":469,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event:any",{"_index":466,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event[1",{"_index":1435,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["eventconfig=null",{"_index":1415,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventdata",{"_index":1399,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventemitter",{"_index":1255,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["eventname",{"_index":1403,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["everyone",{"_index":3963,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2935,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["exactnames",{"_index":2937,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames",{"_index":2927,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames}${exactsearchvalues}${facetsearchnames}${facetsearchvalues",{"_index":2946,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames},`}${refiner.name",{"_index":2938,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalues",{"_index":2928,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalues}&exact_${refiner.name}=${refiner.value",{"_index":2939,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["example",{"_index":886,"title":{},"body":{"components/CancelButtonComponent.html":{},"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["except",{"_index":4106,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":4411,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":4350,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4581,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4661,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4531,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4209,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4586,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4153,"title":{},"body":{"license.html":{}}}],["execute",{"_index":4380,"title":{},"body":{"license.html":{}}}],["executeaction",{"_index":137,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(action:string",{"_index":2956,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["executeaction(event",{"_index":162,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(event:any",{"_index":230,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executing",{"_index":4107,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":4507,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4249,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2850,"title":{},"body":{"classes/RbValidator.html":{}}}],["existingrefiner",{"_index":3016,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["existingrefiner.value",{"_index":3021,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["existinguser",{"_index":2244,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.roles",{"_index":2249,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.roles.push(role.name",{"_index":2252,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.username",{"_index":2247,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser:any",{"_index":2246,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["expand/collapse",{"_index":477,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expandcollapseall",{"_index":498,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expected",{"_index":4370,"title":{},"body":{"license.html":{}}}],["expecting",{"_index":1760,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["expects",{"_index":1783,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["explains",{"_index":4025,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":4195,"title":{},"body":{"license.html":{}}}],["export",{"_index":96,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["exportformcomponent",{"_index":275,"title":{"components/ExportFormComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["exportmodule",{"_index":1599,"title":{"modules/ExportModule.html":{}},"body":{"modules/ExportModule.html":{},"modules.html":{},"overview.html":{}}}],["exports",{"_index":923,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["express",{"_index":4537,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4614,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":3389,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["expressly",{"_index":4456,"title":{},"body":{"license.html":{}}}],["extend",{"_index":4055,"title":{},"body":{"license.html":{}}}],["extended",{"_index":4566,"title":{},"body":{"license.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["extensible",{"_index":4763,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["extensions",{"_index":4289,"title":{},"body":{"license.html":{}}}],["extent",{"_index":4128,"title":{},"body":{"license.html":{}}}],["external",{"_index":1750,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["externallookupdataservice",{"_index":1608,"title":{"classes/ExternalLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["extra",{"_index":3832,"title":{},"body":{"dependencies.html":{}}}],["extractdata",{"_index":26,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["extractdata(res",{"_index":53,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["f",{"_index":1333,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["f.compclass",{"_index":1947,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.completerservice",{"_index":1969,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definition",{"_index":1952,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definition.fields",{"_index":1953,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.fields",{"_index":1958,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.haslookup",{"_index":1963,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.lookupservice",{"_index":1970,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setlookupservices(this.getinjectedservice('completerservice",{"_index":1968,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setupeventhandlers",{"_index":1334,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f.triggervalidation",{"_index":1397,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f:any",{"_index":1396,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f]{32",{"_index":2648,"title":{},"body":{"components/PDFListComponent.html":{}}}],["fa",{"_index":1246,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["facet",{"_index":2940,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facet.name",{"_index":3048,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facet.values",{"_index":3049,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["faceting",{"_index":4807,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facetnames",{"_index":2942,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facets",{"_index":974,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordSearchParams.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facetsearchnames",{"_index":2929,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchnames},`}${refiner.name",{"_index":2943,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalues",{"_index":2930,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalues}&facet_${refiner.name}=${refiner.activevalue",{"_index":2945,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetvalue.count",{"_index":3120,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facetvalue.value",{"_index":3119,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facilities",{"_index":4210,"title":{},"body":{"license.html":{}}}],["factory",{"_index":1983,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["failed",{"_index":3161,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["failedobjects",{"_index":2624,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["fails",{"_index":4469,"title":{},"body":{"license.html":{}}}],["failure",{"_index":4637,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4203,"title":{},"body":{"license.html":{}}}],["fallbacklng",{"_index":3477,"title":{},"body":{"injectables/TranslationService.html":{}}}],["false",{"_index":159,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["family",{"_index":4356,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":4093,"title":{},"body":{"license.html":{}}}],["favor",{"_index":4366,"title":{},"body":{"license.html":{}}}],["fb",{"_index":2115,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["fc",{"_index":403,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[ctrlindex",{"_index":415,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.field.name",{"_index":419,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.index",{"_index":417,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fcmetaservice",{"_index":1990,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["feature",{"_index":4131,"title":{},"body":{"license.html":{}}}],["featuregroup",{"_index":2380,"title":{},"body":{"components/MapComponent.html":{}}}],["features",{"_index":4879,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["fee",{"_index":4010,"title":{},"body":{"license.html":{}}}],["fg",{"_index":1306,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fg[this.name",{"_index":1339,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fgdef",{"_index":3759,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["fgdef.push(new",{"_index":3763,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field",{"_index":132,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["field'},{'name",{"_index":270,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.accessdeniedobjects.length",{"_index":3163,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.addbuttontext",{"_index":1437,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["field.cansort",{"_index":1448,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.columntitle",{"_index":3212,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.completionlabel",{"_index":809,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.component",{"_index":3319,"title":{},"body":{"modules/SharedModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.component.ts",{"_index":1031,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:101",{"_index":1055,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:111",{"_index":3705,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:154",{"_index":1056,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:25",{"_index":3701,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3703,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:34",{"_index":3704,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:38",{"_index":3702,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:42",{"_index":1046,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:47",{"_index":1049,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:49",{"_index":3706,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:51",{"_index":1054,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:55",{"_index":1047,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:59",{"_index":1067,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:64",{"_index":1053,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:66",{"_index":1051,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:68",{"_index":1052,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:70",{"_index":1050,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:72",{"_index":1064,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:74",{"_index":1068,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:76",{"_index":1058,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:80",{"_index":1044,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:91",{"_index":1070,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.coordinateshelp",{"_index":2555,"title":{},"body":{"components/MapComponent.html":{}}}],["field.datatypelookup[datalocation.type",{"_index":2816,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.datecompletedlabel",{"_index":814,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.datestartedlabel",{"_index":811,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.editnotesbuttontext",{"_index":2819,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.failedobjects.length",{"_index":3159,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.fields",{"_index":2018,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.fields[0].emailcolhdr",{"_index":1465,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].label",{"_index":1447,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].namecolhdr",{"_index":1464,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].orcidcolhdr",{"_index":1467,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].rolecolhdr",{"_index":1466,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.formatvaluefordisplay",{"_index":607,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.formmodel",{"_index":2842,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.getgroup(group",{"_index":2021,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.getstatuslabel(progress.status",{"_index":816,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.hasgroup",{"_index":2019,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.help",{"_index":1863,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["field.label",{"_index":371,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.label}}submitting",{"_index":131,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["field.lastupdatelabel",{"_index":813,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.locationheader",{"_index":2814,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.messagelabel",{"_index":810,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.name",{"_index":2851,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.namelabel",{"_index":807,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.nextlabel",{"_index":556,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.notesheader",{"_index":2815,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.onaccordioncollapseexpand.subscribe((event",{"_index":2482,"title":{},"body":{"components/MapComponent.html":{}}}],["field.open",{"_index":3784,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.postinit(field.value",{"_index":1852,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.prevlabel",{"_index":555,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.prevlabel}}{{field.nextlabel}}{{field.prevlabel}}{{field.nextlabel",{"_index":3414,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["field.removebuttontext",{"_index":1459,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.savefirst",{"_index":3785,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.sourcedata",{"_index":1851,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.sourcetype",{"_index":1848,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.startedbylabel",{"_index":812,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.statuslabel",{"_index":808,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.typeheader",{"_index":2813,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.validationmessages.required",{"_index":443,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["field.value",{"_index":130,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["field.value.title",{"_index":3210,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.vocabid",{"_index":1846,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.workspaceapp.description",{"_index":3783,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.workspaceapp.name",{"_index":3780,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.workspaceapp.subtitle",{"_index":3782,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field:this",{"_index":1311,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldanchor",{"_index":1036,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldarr",{"_index":1916,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarr.push(f",{"_index":1957,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarray",{"_index":1960,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldbase",{"_index":149,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["fieldclasses",{"_index":1926,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldclone",{"_index":1324,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldclone.value",{"_index":1325,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldcompref",{"_index":1140,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance",{"_index":1142,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.field",{"_index":1122,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.fieldmap",{"_index":1124,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.form",{"_index":1123,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.index",{"_index":1130,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.injector",{"_index":1121,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.isembedded",{"_index":1127,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.name",{"_index":1129,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.parentid",{"_index":1125,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref:componentref",{"_index":1118,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcontrolmetaservice",{"_index":1908,"title":{"injectables/FieldControlMetaService.html":{}},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldcontrolmetaservice,andsservice",{"_index":3336,"title":{},"body":{"modules/SharedModule.html":{}}}],["fieldcontrolservice",{"_index":1981,"title":{"injectables/FieldControlService.html":{}},"body":{"injectables/FieldControlService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldctr",{"_index":1317,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fielddesc",{"_index":1835,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["fieldelem.margintop",{"_index":1453,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.email",{"_index":1469,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.orcid",{"_index":1471,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.role",{"_index":1470,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.text_full_name",{"_index":1468,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelement",{"_index":1037,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldmap",{"_index":146,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["fieldmap[this.name",{"_index":1310,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldmap[this.name].control",{"_index":1335,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldname",{"_index":1824,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["fieldnames",{"_index":1644,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["fieldpath",{"_index":3660,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fields",{"_index":1134,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["fields.foreach((field:any",{"_index":2017,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fieldsarr",{"_index":1920,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldseparator",{"_index":3639,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fieldsmeta.push(rendercompleteelement",{"_index":2868,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["fifth",{"_index":1201,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["file':\"file",{"_index":2751,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["files",{"_index":4175,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["fill",{"_index":4858,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filter",{"_index":2305,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filteractiverefinerswithnodata",{"_index":3039,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["filteredplans",{"_index":3173,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["filteredusers",{"_index":2181,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["filtering",{"_index":4806,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filters",{"_index":4813,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["finalkeywords",{"_index":4829,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["finally",{"_index":4058,"title":{},"body":{"license.html":{}}}],["find",{"_index":2221,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["findlookupdata(field",{"_index":1858,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["first",{"_index":1406,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["fitness",{"_index":1187,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["fixed",{"_index":4308,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["flag",{"_index":203,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["flags",{"_index":3678,"title":{},"body":{"injectables/UtilityService.html":{}}}],["flagstrail",{"_index":3685,"title":{},"body":{"injectables/UtilityService.html":{}}}],["flatmap((field:any",{"_index":1974,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flatmap((res",{"_index":1850,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flatmap((whatever:any",{"_index":1975,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfields",{"_index":1910,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfields(fields",{"_index":1915,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattening",{"_index":2242,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["fld",{"_index":1694,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flddata",{"_index":3652,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fldname",{"_index":181,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["flds",{"_index":1692,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flds[targetfld",{"_index":1698,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flexibility",{"_index":4794,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["flexible",{"_index":4784,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["flip",{"_index":1131,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["floor",{"_index":1202,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["flow",{"_index":4184,"title":{},"body":{"license.html":{}}}],["fm",{"_index":1305,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fmap.field",{"_index":2015,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap.field.setupeventhandlers",{"_index":2016,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap:any",{"_index":2014,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fn",{"_index":3386,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["focustabid",{"_index":565,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["follow",{"_index":4079,"title":{},"body":{"license.html":{}}}],["following",{"_index":4535,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["follows",{"_index":4832,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["font",{"_index":3828,"title":{},"body":{"dependencies.html":{}}}],["for(var",{"_index":2606,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"injectables/ReportService.html":{}}}],["forbid",{"_index":4247,"title":{},"body":{"license.html":{}}}],["force",{"_index":4206,"title":{},"body":{"license.html":{}}}],["forceclone",{"_index":1266,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["forces",{"_index":2829,"title":{},"body":{"classes/RbValidator.html":{}}}],["form",{"_index":147,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form'},{'name",{"_index":272,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["form.component",{"_index":1208,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["form.component.ts",{"_index":1498,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:42",{"_index":1551,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:43",{"_index":1556,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:44",{"_index":1555,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:45",{"_index":1554,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:46",{"_index":1552,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:47",{"_index":1558,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:48",{"_index":1553,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:49",{"_index":1557,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:50",{"_index":1529,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:80",{"_index":1531,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:87",{"_index":1532,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:91",{"_index":1534,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.fields",{"_index":2880,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmata",{"_index":2862,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmeta",{"_index":2890,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.html",{"_index":1503,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.js",{"_index":4774,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/action",{"_index":3311,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/dmp",{"_index":3318,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/field",{"_index":3298,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/record",{"_index":3301,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/records.service",{"_index":3297,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/tree",{"_index":3327,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/view",{"_index":4842,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/workflow",{"_index":3309,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/workspace",{"_index":3322,"title":{},"body":{"modules/SharedModule.html":{}}}],["formarray",{"_index":396,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formarray(elems",{"_index":1331,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["formarray(fgdef",{"_index":3764,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["formarray(this.getinitarrayentry",{"_index":1315,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["format",{"_index":1572,"title":{},"body":{"components/ExportFormComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["formatdatefordisplay",{"_index":643,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.date_completed",{"_index":823,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.date_started",{"_index":820,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.updatedat",{"_index":822,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(value",{"_index":651,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdates",{"_index":949,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdates(response",{"_index":957,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdates(response:object",{"_index":1010,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formats",{"_index":612,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formatting",{"_index":4918,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["formatvalue",{"_index":614,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formatvaluefordisplay",{"_index":2578,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["formbuilder",{"_index":2116,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["formcontrol",{"_index":171,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["formcontrol(opt.value",{"_index":471,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formcontrol(this.layergeojson",{"_index":2526,"title":{},"body":{"components/MapComponent.html":{}}}],["formcontrol(this.value",{"_index":1701,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["formcontrol(this.value[targetfld",{"_index":1699,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["formcontrol.push(new",{"_index":470,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol.removeat(idx",{"_index":474,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol:any",{"_index":467,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formgroup",{"_index":154,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["formgroup(flds",{"_index":1700,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["formgroup(group",{"_index":2012,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["formmodel",{"_index":1355,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["forms",{"_index":4301,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["formsmodule",{"_index":938,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["found",{"_index":4664,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":1160,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{},"license.html":{}}}],["foundmapping",{"_index":3664,"title":{},"body":{"injectables/UtilityService.html":{}}}],["foundmapping.value",{"_index":3668,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fq",{"_index":771,"title":{},"body":{"components/AsynchComponent.html":{}}}],["framework",{"_index":4759,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["framework's",{"_index":511,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["franklin",{"_index":1199,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["free",{"_index":1170,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["freedom",{"_index":3977,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":4013,"title":{},"body":{"license.html":{}}}],["frompromise",{"_index":3133,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["fs",{"_index":3831,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":4232,"title":{},"body":{"license.html":{}}}],["full",{"_index":4663,"title":{},"body":{"license.html":{}}}],["fullname",{"_index":4677,"title":{},"body":{"license.html":{}}}],["function",{"_index":512,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["function('map",{"_index":3401,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(_",{"_index":3394,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(e",{"_index":2493,"title":{},"body":{"components/MapComponent.html":{}}}],["function(o",{"_index":2507,"title":{},"body":{"components/MapComponent.html":{}}}],["function(value",{"_index":1366,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["function(w",{"_index":3756,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["functionality",{"_index":2366,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["functioning",{"_index":4383,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3903,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":4037,"title":{},"body":{"license.html":{}}}],["further",{"_index":4329,"title":{},"body":{"license.html":{}}}],["future",{"_index":4057,"title":{},"body":{"license.html":{}}}],["g",{"_index":3680,"title":{},"body":{"injectables/UtilityService.html":{},"additional-documentation/installation-guide.html":{}}}],["general",{"_index":1163,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["generally",{"_index":4173,"title":{},"body":{"license.html":{}}}],["generate",{"_index":4170,"title":{},"body":{"license.html":{}}}],["generatetemplate",{"_index":3402,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplate(template",{"_index":3385,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplatestring",{"_index":3383,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generation",{"_index":2544,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["generic",{"_index":277,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["genericgroupcomponent",{"_index":276,"title":{"components/GenericGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["genkey",{"_index":3553,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genkey(userid",{"_index":3565,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genuserkey",{"_index":3554,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["geocoords",{"_index":2342,"title":{},"body":{"components/MapComponent.html":{}}}],["geojson",{"_index":2392,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer",{"_index":2519,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.eachlayer(layer",{"_index":2522,"title":{},"body":{"components/MapComponent.html":{}}}],["getabsurl",{"_index":2720,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(location",{"_index":2728,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(location:string",{"_index":2804,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getactiveplans",{"_index":950,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumber",{"_index":959,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumber:number",{"_index":989,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalldraftplanscanedit",{"_index":951,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit",{"_index":952,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtype",{"_index":962,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtype:string",{"_index":982,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalltypes",{"_index":2950,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getasyncprogress(fq:string",{"_index":2960,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getattachments(event",{"_index":2707,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["getattachments(oid",{"_index":2907,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getbaseurl",{"_index":832,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrand",{"_index":3792,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getbrandingandportalurl",{"_index":831,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrandroles",{"_index":3262,"title":{},"body":{"injectables/RolesService.html":{}}}],["getclearunselected",{"_index":1900,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getclonecustomizer(cloneopts:any",{"_index":1365,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getcollectionrooturl(collectionid",{"_index":1854,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getcompleterdescription",{"_index":2583,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["getcompleterdescription(data",{"_index":1834,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getconfig",{"_index":27,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getconfig(handler",{"_index":898,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrolfromoption",{"_index":3279,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["getcontrolfromoption(opt",{"_index":460,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getdashboardurl(rectype:string='rdmp",{"_index":2905,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getdatalocations",{"_index":2721,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getdownloadurl",{"_index":2613,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdownloadurl(attachment",{"_index":2614,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdraftplans",{"_index":953,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumber",{"_index":966,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumber:number",{"_index":993,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getemptyformgroup",{"_index":1985,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["geterrors",{"_index":2111,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["getexternalserviceurl(provider",{"_index":1861,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getfieldsmeta",{"_index":1911,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldsmeta(fieldsarr",{"_index":1918,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldvaluepair(fldname",{"_index":1779,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getfirstofarray",{"_index":3603,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getfirstofarray(data",{"_index":3614,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getform(oid",{"_index":2857,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformcontrol",{"_index":139,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getformcontrol(name",{"_index":166,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getformfields(recordtype:string",{"_index":2869,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformfieldsmeta(recordtype:string",{"_index":2876,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getfrominjector",{"_index":140,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getfrominjector(token",{"_index":174,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getfrominjector(token:any",{"_index":431,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getgetbaseurl",{"_index":850,"title":{},"body":{"classes/BaseService.html":{}}}],["getgetbrandingandportalurl",{"_index":848,"title":{},"body":{"classes/BaseService.html":{}}}],["getgroup(group",{"_index":1309,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getgroupclass",{"_index":141,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getgroupclass(fldname",{"_index":178,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getgroupclass(fldname:string=null",{"_index":421,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["gethttpquery",{"_index":3066,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["gethttpquery(searchurl",{"_index":3007,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getinfo",{"_index":3555,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getinitarrayentry",{"_index":1302,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getinitsubject",{"_index":28,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getinjectedservice",{"_index":1912,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getinjectedservice(servicename",{"_index":1921,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getisvalid",{"_index":1069,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["getlabel",{"_index":1211,"title":{},"body":{"components/DropdownFieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getlabel(field.value",{"_index":444,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getlabel(field.value.value",{"_index":445,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getlabel(val",{"_index":434,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getlookupdata",{"_index":1913,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getlookupdata(field",{"_index":1845,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getlookupdata(fields",{"_index":1924,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getmeta",{"_index":4936,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["getmintrooturl(source",{"_index":1859,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getoptions",{"_index":29,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptions(headersobj",{"_index":63,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptionsclient",{"_index":30,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptionsclient(headersobj",{"_index":66,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getparagraphtext",{"_index":627,"title":{},"body":{"classes/AngularPage.html":{}}}],["getpropertyasarrayfromobject",{"_index":3604,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyasarrayfromobject(data",{"_index":3621,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobject",{"_index":3605,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobject(data",{"_index":3626,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat",{"_index":3606,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat(data",{"_index":3627,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmapping",{"_index":3607,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmapping(data",{"_index":3632,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getrecordmeta(oid:string=null",{"_index":2954,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrecordmetaobs",{"_index":3137,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.length",{"_index":3148,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.push(frompromise(this.recordsservice.getrecordmeta(item.id)).flatmap(meta",{"_index":3139,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecords",{"_index":954,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecords(recordtype",{"_index":968,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecords(recordtype:string,state:string,pagenumber:number,packagetype:string=undefined",{"_index":996,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecordtypenames",{"_index":1517,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["getrefinerconfig",{"_index":3067,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["getrefinerconfig(name",{"_index":2995,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrefinerconfigs",{"_index":3014,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrelatedrecordid",{"_index":2711,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["getreport",{"_index":3246,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(name",{"_index":3248,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(name:string",{"_index":3251,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults",{"_index":3247,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(name",{"_index":3249,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(name:string",{"_index":3253,"title":{},"body":{"injectables/ReportService.html":{}}}],["getrequiredlabelstr",{"_index":142,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getrequiredlabelstr():string",{"_index":429,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getresourcedetails",{"_index":23,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri",{"_index":43,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri:string",{"_index":103,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getstatuslabel(status",{"_index":748,"title":{},"body":{"components/AsynchComponent.html":{}}}],["gettargetstepparam(targetstep",{"_index":2900,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getting",{"_index":3909,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":1612,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["gettitle(data",{"_index":1623,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["gettransferresponsibility(recordtype",{"_index":2920,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["gettranslated",{"_index":1520,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["gettranslated(key",{"_index":1537,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["gettype(name",{"_index":2948,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["geturlparameter",{"_index":2675,"title":{},"body":{"components/ParameterRetrieverComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["geturlparameter(param",{"_index":2676,"title":{},"body":{"components/ParameterRetrieverComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["geturlparameter(param:string",{"_index":573,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getuserlookupurl(searchsource",{"_index":1856,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getusers",{"_index":3556,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getvalue(data",{"_index":1770,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getworkflowsteps(name",{"_index":2952,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getworkspacetype",{"_index":3793,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getworkspacetype(name",{"_index":3795,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getworkspacetypes",{"_index":3794,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["git",{"_index":4711,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["github:itayadler/passport",{"_index":3859,"title":{},"body":{"dependencies.html":{}}}],["github:redbox",{"_index":3866,"title":{},"body":{"dependencies.html":{}}}],["github:shilob/moment",{"_index":3848,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":4269,"title":{},"body":{"license.html":{}}}],["given",{"_index":4199,"title":{},"body":{"license.html":{}}}],["gives",{"_index":4282,"title":{},"body":{"license.html":{}}}],["giving",{"_index":4020,"title":{},"body":{"license.html":{}}}],["global",{"_index":890,"title":{},"body":{"injectables/ConfigService.html":{}}}],["globally",{"_index":4712,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["glyphicon",{"_index":1108,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["gnu",{"_index":1162,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["google",{"_index":2442,"title":{},"body":{"components/MapComponent.html":{}}}],["googlehybrid",{"_index":2411,"title":{},"body":{"components/MapComponent.html":{}}}],["googlemaps",{"_index":2402,"title":{},"body":{"components/MapComponent.html":{}}}],["governed",{"_index":4414,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4015,"title":{},"body":{"license.html":{}}}],["grant",{"_index":4435,"title":{},"body":{"license.html":{}}}],["grant_number_name",{"_index":4828,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["granted",{"_index":4191,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4488,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":4009,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4655,"title":{},"body":{"license.html":{}}}],["gridfs",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["gridfs.git",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["group",{"_index":156,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["group'},{'name",{"_index":322,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["group.component",{"_index":3321,"title":{},"body":{"modules/SharedModule.html":{}}}],["group.component.ts",{"_index":2024,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["group.component.ts:118",{"_index":2054,"title":{},"body":{"components/GenericGroupComponent.html":{}}}],["group.component.ts:232",{"_index":3222,"title":{},"body":{"components/RepeatableGroupComponent.html":{}}}],["group.controls[control1",{"_index":3515,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group.controls[control1].value",{"_index":3536,"title":{},"body":{"interfaces/UserForm.html":{}}}],["group.controls[control2",{"_index":3517,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group[this.groupname",{"_index":1337,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.groupname].addcontrol(this.name",{"_index":1338,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.name",{"_index":1340,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["groupclasses",{"_index":2040,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["grouping",{"_index":2025,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["groupname",{"_index":2039,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["grp",{"_index":1304,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["grunt",{"_index":3833,"title":{},"body":{"dependencies.html":{}}}],["guarantee",{"_index":3979,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4685,"title":{},"body":{"license.html":{}}}],["guide",{"_index":4703,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["h1",{"_index":4871,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["h1')).gettext",{"_index":635,"title":{},"body":{"classes/AngularPage.html":{}}}],["hack",{"_index":1724,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["handle",{"_index":1805,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["handlechange",{"_index":2057,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["handlechange(value",{"_index":582,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["handler",{"_index":70,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["handler:any",{"_index":2089,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["handles",{"_index":889,"title":{},"body":{"injectables/ConfigService.html":{}}}],["happenings",{"_index":746,"title":{},"body":{"components/AsynchComponent.html":{}}}],["har",{"_index":3836,"title":{},"body":{"dependencies.html":{}}}],["harvest",{"_index":4938,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["hasactive",{"_index":3043,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasactiverefiners",{"_index":3042,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasclearbutton",{"_index":1506,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["haserror",{"_index":1426,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["hasfilteredresults",{"_index":3168,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["hasinit",{"_index":2625,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["hasloaded",{"_index":1521,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["hasnamematch",{"_index":2308,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasrequirederror",{"_index":143,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["hasrequirederror():boolean",{"_index":424,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hasrole",{"_index":2267,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasrole:boolean",{"_index":2270,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasvalue",{"_index":3100,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["hasvalue(data",{"_index":3636,"title":{},"body":{"injectables/UtilityService.html":{}}}],["having",{"_index":4208,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["header",{"_index":2157,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["header.label",{"_index":3153,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["headers",{"_index":853,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["headers(headersobj",{"_index":877,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj",{"_index":65,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["headersobj['content",{"_index":880,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj['x",{"_index":878,"title":{},"body":{"classes/BaseService.html":{}}}],["heading",{"_index":4823,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["hello",{"_index":4919,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["help",{"_index":194,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["helpshow",{"_index":133,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["here",{"_index":4970,"title":{},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["hereafter",{"_index":4527,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":279,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["hiddenusers",{"_index":2182,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hiddenvaluecomponent",{"_index":278,"title":{"components/HiddenValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["hideconfirmdlg",{"_index":535,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hideeditnotes",{"_index":2722,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["highly",{"_index":4762,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["holder",{"_index":4463,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4419,"title":{},"body":{"license.html":{}}}],["hook",{"_index":3875,"title":{},"body":{"dependencies.html":{}}}],["hope",{"_index":1180,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["hosts",{"_index":4337,"title":{},"body":{"license.html":{}}}],["household",{"_index":4357,"title":{},"body":{"license.html":{}}}],["html",{"_index":239,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["htmlraw",{"_index":386,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["htmlraw'},{'name",{"_index":281,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["htmlrawcomponent",{"_index":280,"title":{"components/HtmlRawComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["http",{"_index":19,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://fsf.org",{"_index":3962,"title":{},"body":{"license.html":{}}}],["http://i18next.com/docs/options",{"_index":3449,"title":{},"body":{"injectables/TranslationService.html":{}}}],["http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2428,"title":{},"body":{"components/MapComponent.html":{}}}],["http://localhost:9000/redbox",{"_index":4933,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://localhost:9001/mint",{"_index":4935,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://www.gnu.org/licenses",{"_index":4668,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/philosophy/why",{"_index":4696,"title":{},"body":{"license.html":{}}}],["http://www.qcif.edu.au",{"_index":1161,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["httpmodule",{"_index":939,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["https://bootstrap",{"_index":604,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://dev",{"_index":4959,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://github.com/marcelomedina10/skipper",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["https://github.com/nkalinov/ng2",{"_index":602,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://github.com/redbox",{"_index":4723,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["https://rapid.aaf.edu.au",{"_index":4964,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au",{"_index":4957,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au/jwt/authnrequest/research/xxxxxx",{"_index":4952,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["hybrid",{"_index":2444,"title":{},"body":{"components/MapComponent.html":{}}}],["hypothetical",{"_index":4682,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":3522,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["i18next",{"_index":3314,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["i:number",{"_index":1490,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["i=0",{"_index":2607,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["i=0;i",{"_index":1013,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["i=1",{"_index":1418,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["icon",{"_index":1573,"title":{},"body":{"components/ExportFormComponent.html":{},"components/MapComponent.html":{}}}],["icon.png",{"_index":2429,"title":{},"body":{"components/MapComponent.html":{}}}],["icon.png\",shadowurl:\"http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2382,"title":{},"body":{"components/MapComponent.html":{}}}],["iconanchor",{"_index":2425,"title":{},"body":{"components/MapComponent.html":{}}}],["iconsize",{"_index":2422,"title":{},"body":{"components/MapComponent.html":{}}}],["iconurl",{"_index":2427,"title":{},"body":{"components/MapComponent.html":{}}}],["id",{"_index":2168,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["id:r.id",{"_index":2266,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["idea",{"_index":4666,"title":{},"body":{"license.html":{}}}],["identifiable",{"_index":4555,"title":{},"body":{"license.html":{}}}],["idx",{"_index":472,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(!_.isstring(this.value",{"_index":1702,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(!editable",{"_index":2881,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["if(!this.field.editmode",{"_index":494,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(!value",{"_index":3753,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(_.isempty(this.searchfieldstr",{"_index":1905,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(_.isstring(data",{"_index":1752,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(args",{"_index":3405,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["if(b",{"_index":451,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(compiled",{"_index":1091,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(data",{"_index":1836,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(disabledexpression",{"_index":1080,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(jquery(this.fieldelement.nativeelement).prop('disabled",{"_index":3709,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(layerindex",{"_index":2510,"title":{},"body":{"components/MapComponent.html":{}}}],["if(lower",{"_index":1904,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(matchingexpression.test(attachment.label",{"_index":2654,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(oid",{"_index":2642,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(paramvalue",{"_index":621,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(response['status",{"_index":3738,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(state",{"_index":986,"title":{},"body":{"injectables/DashboardService.html":{}}}],["if(this.field.allexpanded",{"_index":499,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(this.field.latestpdf",{"_index":2658,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(this.field.storelabelonly",{"_index":1882,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(this.field.storevalueandlabel",{"_index":450,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(this.fieldmap",{"_index":3190,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["if(this.importdatastring.indexof",{"_index":2531,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.importdatastring.length",{"_index":2530,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.isembedded",{"_index":1871,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(typeof",{"_index":1933,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["ignorenotbefore",{"_index":4961,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["implement",{"_index":4159,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":4160,"title":{},"body":{"license.html":{}}}],["implements",{"_index":617,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["implied",{"_index":1185,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["import",{"_index":79,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["important",{"_index":3448,"title":{},"body":{"injectables/TranslationService.html":{}}}],["importdata",{"_index":2529,"title":{},"body":{"components/MapComponent.html":{}}}],["importdatastring",{"_index":2397,"title":{},"body":{"components/MapComponent.html":{}}}],["importfailed:boolean",{"_index":2399,"title":{},"body":{"components/MapComponent.html":{}}}],["importing",{"_index":4520,"title":{},"body":{"license.html":{}}}],["imports",{"_index":933,"title":{},"body":{"modules/DashboardModule.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["impose",{"_index":4444,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4583,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4632,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4634,"title":{},"body":{"license.html":{}}}],["inc",{"_index":1197,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["incidental",{"_index":4629,"title":{},"body":{"license.html":{}}}],["include",{"_index":3841,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["included",{"_index":4154,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4111,"title":{},"body":{"license.html":{}}}],["including",{"_index":3950,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusion",{"_index":4299,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":4038,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4690,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4360,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":4440,"title":{},"body":{"license.html":{}}}],["independent",{"_index":4287,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["index:i",{"_index":2808,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["index]=\"i",{"_index":1436,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["indicate",{"_index":4492,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":3467,"title":{},"body":{"injectables/TranslationService.html":{}}}],["indicating",{"_index":4454,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4297,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":4045,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4373,"title":{},"body":{"license.html":{}}}],["inexact",{"_index":4818,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inform",{"_index":4343,"title":{},"body":{"license.html":{}}}],["information",{"_index":2363,"title":{},"body":{"components/MapComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["infrastructure",{"_index":1159,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["infringe",{"_index":4490,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4517,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4103,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":50,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["init",{"_index":1703,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["init.title",{"_index":1705,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["init['title",{"_index":1708,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["init[this.stringlabeltofield",{"_index":1709,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initconfig",{"_index":895,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initial",{"_index":1880,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initialised",{"_index":2396,"title":{},"body":{"components/MapComponent.html":{}}}],["initialized",{"_index":915,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialvalue",{"_index":1640,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initiate",{"_index":4510,"title":{},"body":{"license.html":{}}}],["initiative",{"_index":3947,"title":{},"body":{"index.html":{}}}],["initlookupdata",{"_index":1723,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initmap(map",{"_index":2486,"title":{},"body":{"components/MapComponent.html":{}}}],["initsubject",{"_index":20,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["initsubs",{"_index":1507,"title":{},"body":{"components/ExportFormComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inittranslator",{"_index":1522,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["inittranslator(translationservice",{"_index":1541,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject",{"_index":80,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"pipes/StringTemplatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(completerservice",{"_index":1929,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(configservice",{"_index":99,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(document",{"_index":2130,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject(fieldcontrolmetaservice",{"_index":2007,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["inject(formbuilder",{"_index":2129,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject(http",{"_index":98,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(location",{"_index":1566,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["inject(rolesservice",{"_index":2226,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["inject(translationservice",{"_index":100,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{}}}],["inject(usersimpleservice",{"_index":2128,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["inject(utilityservice",{"_index":1930,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(vocabfieldlookupservice",{"_index":1928,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["injectablebackendconfigfactory",{"_index":3474,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectablecustomlanguagedetectorservice",{"_index":3453,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["injector",{"_index":134,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["injector:any",{"_index":215,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["inline",{"_index":2033,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["input",{"_index":378,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["inputs",{"_index":145,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["inside",{"_index":4034,"title":{},"body":{"license.html":{}}}],["inst",{"_index":1935,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.appconfig",{"_index":1939,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.compclass",{"_index":1942,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.fields",{"_index":1954,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.utilityservice",{"_index":1937,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["install",{"_index":3957,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["installation",{"_index":4377,"title":{"additional-documentation/installation-guide.html":{}},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["installed",{"_index":4395,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["instance",{"_index":4931,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["instantiates",{"_index":1057,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["instead",{"_index":4695,"title":{},"body":{"license.html":{}}}],["institutional",{"_index":3930,"title":{},"body":{"index.html":{}}}],["institutions",{"_index":3915,"title":{},"body":{"index.html":{}}}],["intact",{"_index":4262,"title":{},"body":{"license.html":{}}}],["integrating",{"_index":4932,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["integration",{"_index":4920,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["intended",{"_index":1725,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["intention",{"_index":4251,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":4121,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["interactive",{"_index":4124,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":4311,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4505,"title":{},"body":{"license.html":{}}}],["interface",{"_index":3503,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["interfaces",{"_index":3505,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":4385,"title":{},"body":{"license.html":{}}}],["internationalisation",{"_index":4872,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["interpretation",{"_index":4641,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4168,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4182,"title":{},"body":{"license.html":{}}}],["introduction",{"_index":4783,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["invalid",{"_index":2139,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["invalidate",{"_index":4283,"title":{},"body":{"license.html":{}}}],["invalidemail",{"_index":3534,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["io",{"_index":677,"title":{},"body":{"components/AsynchComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.get(`${this.brandingandportalurl}/asynch/subscribe/${oid",{"_index":2964,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.on('start",{"_index":788,"title":{},"body":{"components/AsynchComponent.html":{}}}],["io.socket.on('stop",{"_index":790,"title":{},"body":{"components/AsynchComponent.html":{}}}],["io.socket.on('update",{"_index":792,"title":{},"body":{"components/AsynchComponent.html":{}}}],["irrevocable",{"_index":4192,"title":{},"body":{"license.html":{}}}],["isdisabled",{"_index":138,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isembedded",{"_index":148,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["isempty",{"_index":2824,"title":{},"body":{"classes/RbValidator.html":{}}}],["isempty(control",{"_index":2826,"title":{},"body":{"classes/RbValidator.html":{}}}],["isgettingattachments",{"_index":2703,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["ishelp",{"_index":1106,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["ishelp.length",{"_index":1111,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["islistening",{"_index":641,"title":{},"body":{"components/AsynchComponent.html":{}}}],["islistening:boolean",{"_index":750,"title":{},"body":{"components/AsynchComponent.html":{}}}],["isloading",{"_index":1513,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["islogindisabled",{"_index":2109,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["isn't",{"_index":2360,"title":{},"body":{"components/MapComponent.html":{}}}],["isradio",{"_index":457,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isready",{"_index":3431,"title":{},"body":{"injectables/TranslationService.html":{}}}],["isready(handler",{"_index":3435,"title":{},"body":{"injectables/TranslationService.html":{}}}],["issearching",{"_index":3101,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["issuer",{"_index":4956,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["isvalarray",{"_index":455,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isvalid",{"_index":1039,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isvisible",{"_index":580,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["it'll",{"_index":2414,"title":{},"body":{"components/MapComponent.html":{}}}],["it's",{"_index":3447,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["item",{"_index":1801,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["item.dateupdated",{"_index":2674,"title":{},"body":{"components/PDFListComponent.html":{}}}],["item.trim",{"_index":3692,"title":{},"body":{"injectables/UtilityService.html":{}}}],["item[column.property",{"_index":3157,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[column.property]['label",{"_index":3156,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[column.property][\\'label",{"_index":3164,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[fieldname",{"_index":1826,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["item[srcfld",{"_index":1829,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["item[targetfld",{"_index":1830,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["itemarray",{"_index":1797,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["itemresult",{"_index":3649,"title":{},"body":{"injectables/UtilityService.html":{}}}],["itemresult}${_.isempty(itemresult",{"_index":3656,"title":{},"body":{"injectables/UtilityService.html":{}}}],["items",{"_index":1011,"title":{},"body":{"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"additional-documentation/configuration-guide.html":{}}}],["itself",{"_index":4399,"title":{},"body":{"license.html":{}}}],["jit",{"_index":3958,"title":{},"body":{"index.html":{}}}],["joinarray",{"_index":3608,"title":{},"body":{"injectables/UtilityService.html":{}}}],["joinarray(data",{"_index":3638,"title":{},"body":{"injectables/UtilityService.html":{}}}],["jquery",{"_index":399,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"modules/RecordSearchModule.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["jquery(\"#loading\").addclass(\"hidden",{"_index":2083,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery(\"#loading\").removeclass(\"hidden",{"_index":2082,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery('#mymodal').modal('hide",{"_index":2285,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["jquery('a[data",{"_index":559,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('hide",{"_index":500,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('show",{"_index":501,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('hidden.bs.collapse",{"_index":492,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('shown.bs.collapse",{"_index":486,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.datetime.iddatepicker}`).attr('aria",{"_index":610,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('hide",{"_index":536,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('show",{"_index":534,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('hide",{"_index":2810,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('show",{"_index":2809,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(buttonelem).find(\"span[class='glyphicon",{"_index":1107,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["jquery(this.fieldelement.nativeelement.parentelement",{"_index":1090,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["js",{"_index":3820,"title":{},"body":{"dependencies.html":{}}}],["jsclient",{"_index":879,"title":{},"body":{"classes/BaseService.html":{}}}],["json",{"_index":2028,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["json.stringify(this.field.criteria).replace(/@oid/g",{"_index":772,"title":{},"body":{"components/AsynchComponent.html":{}}}],["jsonwebtokenoptions",{"_index":4955,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["june",{"_index":1167,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["jwt",{"_index":3858,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":4261,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["kept",{"_index":4875,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kernel",{"_index":4163,"title":{},"body":{"license.html":{}}}],["key",{"_index":1084,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["keys",{"_index":2030,"title":{},"body":{"components/GenericGroupComponent.html":{},"classes/LoadableComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["keywords",{"_index":4830,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kind",{"_index":4117,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":3972,"title":{},"body":{"license.html":{}}}],["kml",{"_index":2554,"title":{},"body":{"components/MapComponent.html":{}}}],["know",{"_index":3994,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":4544,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4552,"title":{},"body":{"license.html":{}}}],["l",{"_index":734,"title":{},"body":{"components/AsynchComponent.html":{},"components/MapComponent.html":{}}}],["l.featuregroup",{"_index":2401,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(that.layers).togeojson",{"_index":2499,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(this.layers).togeojson",{"_index":2538,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(json.parse(this.importdatastring",{"_index":2536,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(this.layergeojson",{"_index":2520,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":2421,"title":{},"body":{"components/MapComponent.html":{}}}],["l.latlng",{"_index":2438,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z",{"_index":2403,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z",{"_index":2412,"title":{},"body":{"components/MapComponent.html":{}}}],["label",{"_index":183,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["label:'any",{"_index":2215,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["label:role.name",{"_index":2236,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["label]=\"'move",{"_index":1455,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["label]=\"'remove",{"_index":1463,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["labels",{"_index":4814,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["language",{"_index":3455,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["languages",{"_index":3468,"title":{},"body":{"injectables/TranslationService.html":{}}}],["larger",{"_index":4291,"title":{},"body":{"license.html":{}}}],["last",{"_index":730,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/FieldControlMetaService.html":{}}}],["lastupdatelabel",{"_index":690,"title":{},"body":{"components/AsynchComponent.html":{}}}],["later",{"_index":1178,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["latest.html#options",{"_index":2550,"title":{},"body":{"components/MapComponent.html":{}}}],["latestpdf",{"_index":2628,"title":{},"body":{"components/PDFListComponent.html":{}}}],["latlng",{"_index":2374,"title":{},"body":{"components/MapComponent.html":{}}}],["latlng([108.94248962402342",{"_index":2348,"title":{},"body":{"components/MapComponent.html":{}}}],["latter",{"_index":2542,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["law",{"_index":4105,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4082,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4515,"title":{},"body":{"license.html":{}}}],["layer",{"_index":2495,"title":{},"body":{"components/MapComponent.html":{}}}],["layer._leaflet_id",{"_index":2509,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.addto(that.drawnitems",{"_index":2523,"title":{},"body":{"components/MapComponent.html":{}}}],["layergeojson",{"_index":2398,"title":{},"body":{"components/MapComponent.html":{}}}],["layerindex",{"_index":2505,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":2364,"title":{},"body":{"components/MapComponent.html":{}}}],["layers.eachlayer(function(layer",{"_index":2504,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":2440,"title":{},"body":{"components/MapComponent.html":{}}}],["layout",{"_index":4843,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["layouts",{"_index":2476,"title":{},"body":{"components/MapComponent.html":{}}}],["lays",{"_index":4867,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ld",{"_index":4790,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["leads",{"_index":3945,"title":{},"body":{"index.html":{}}}],["leaf",{"_index":2434,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet",{"_index":2354,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaflet's",{"_index":2361,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.draw",{"_index":2338,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.js",{"_index":2335,"title":{},"body":{"components/MapComponent.html":{}}}],["leafletdrawmodule",{"_index":3317,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletdrawmodule.forroot",{"_index":3333,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodule",{"_index":3315,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodule.forroot",{"_index":3332,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletoptions",{"_index":2345,"title":{},"body":{"components/MapComponent.html":{}}}],["leave",{"_index":524,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["left",{"_index":1251,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["legal",{"_index":4021,"title":{},"body":{"license.html":{}}}],["legend",{"_index":238,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["lesser",{"_index":4694,"title":{},"body":{"license.html":{}}}],["let's",{"_index":2665,"title":{},"body":{"components/PDFListComponent.html":{}}}],["lets",{"_index":3710,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["lgpl.html",{"_index":4697,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4422,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4102,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4152,"title":{},"body":{"license.html":{}}}],["library",{"_index":4351,"title":{},"body":{"license.html":{}}}],["license",{"_index":1164,"title":{"license.html":{}},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["licensed",{"_index":4086,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4087,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4089,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3974,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4494,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4433,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":4486,"title":{},"body":{"license.html":{}}}],["limit",{"_index":4252,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4626,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4615,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4421,"title":{},"body":{"license.html":{}}}],["line",{"_index":2581,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["lines",{"_index":2570,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["link",{"_index":283,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["linked",{"_index":4179,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4692,"title":{},"body":{"license.html":{}}}],["linkvaluecomponent",{"_index":282,"title":{"components/LinkValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["list",{"_index":2611,"title":{},"body":{"components/PDFListComponent.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["list'},{'name",{"_index":304,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["listens",{"_index":738,"title":{},"body":{"components/AsynchComponent.html":{}}}],["listentype",{"_index":681,"title":{},"body":{"components/AsynchComponent.html":{}}}],["literal",{"_index":2212,"title":{},"body":{"components/ManageRolesComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["litigation",{"_index":4511,"title":{},"body":{"license.html":{}}}],["lng",{"_index":3476,"title":{},"body":{"injectables/TranslationService.html":{}}}],["load",{"_index":3162,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["loadablecomponent",{"_index":1500,"title":{"classes/LoadableComponent.html":{}},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["loadablecomponent:30",{"_index":1559,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:31",{"_index":1562,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:32",{"_index":1561,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:33",{"_index":1560,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:41",{"_index":1542,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:48",{"_index":1547,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:53",{"_index":1536,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:59",{"_index":1540,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:63",{"_index":1544,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:68",{"_index":1546,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:76",{"_index":1539,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:89",{"_index":1549,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loaded",{"_index":135,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["loading",{"_index":1545,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["loadpath",{"_index":3475,"title":{},"body":{"injectables/TranslationService.html":{}}}],["loadworkspacedetails(value",{"_index":3752,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["loc.location",{"_index":2799,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.name",{"_index":2797,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.type",{"_index":2795,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["local",{"_index":286,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["local_auth.component",{"_index":2165,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["localauth.html",{"_index":2108,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["localauthcomponent",{"_index":285,"title":{"components/LocalAuthComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["localauthmodule",{"_index":2159,"title":{"modules/LocalAuthModule.html":{}},"body":{"modules/LocalAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["locale",{"_index":642,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/TranslationService.html":{}}}],["locale_id",{"_index":3461,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/en/translation.json",{"_index":3470,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/pt/translation.json",{"_index":3472,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/{{lng}}/{{ns}}.json?ts=${ts",{"_index":3478,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locally",{"_index":3583,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["located",{"_index":4914,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["location",{"_index":264,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["location:\"\",notes",{"_index":2743,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locationheader",{"_index":2758,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locations",{"_index":2698,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["locationservice",{"_index":1528,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["locationstrategy",{"_index":1150,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["locize",{"_index":4874,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["lodash",{"_index":95,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{}}}],["logger",{"_index":3889,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":2158,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginlocal",{"_index":3557,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginlocal(username",{"_index":3570,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginmessage",{"_index":2110,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginresult",{"_index":2126,"title":{"classes/LoginResult.html":{}},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["loginurl",{"_index":4951,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["long",{"_index":4205,"title":{},"body":{"license.html":{}}}],["lookupservice",{"_index":1646,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lookupservicename",{"_index":1964,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["loose",{"_index":4792,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["loss",{"_index":4633,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4635,"title":{},"body":{"license.html":{}}}],["lower",{"_index":1903,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lowerterm",{"_index":1790,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lt",{"_index":735,"title":{},"body":{"components/AsynchComponent.html":{}}}],["lucene",{"_index":1632,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":1631,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["ma",{"_index":1204,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["machine",{"_index":4302,"title":{},"body":{"license.html":{}}}],["made",{"_index":4386,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4672,"title":{},"body":{"license.html":{}}}],["main",{"_index":1499,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["maintabid",{"_index":2446,"title":{},"body":{"components/MapComponent.html":{}}}],["maintain",{"_index":4333,"title":{},"body":{"license.html":{}}}],["maintained",{"_index":3941,"title":{},"body":{"index.html":{}}}],["major",{"_index":4157,"title":{},"body":{"license.html":{}}}],["make",{"_index":1133,"title":{},"body":{"components/DmpFieldComponent.html":{},"license.html":{}}}],["makes",{"_index":2834,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["making",{"_index":4095,"title":{},"body":{"license.html":{}}}],["manage",{"_index":289,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["manage_roles.component",{"_index":2323,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["manage_users.component",{"_index":2331,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["management",{"_index":3911,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["manageroles.html",{"_index":2179,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["managerolescomponent",{"_index":288,"title":{"components/ManageRolesComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["managerolesmodule",{"_index":2317,"title":{"modules/ManageRolesModule.html":{}},"body":{"modules/ManageRolesModule.html":{},"modules.html":{},"overview.html":{}}}],["manages",{"_index":4767,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["manageuserscomponent",{"_index":291,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["manageusersmodule",{"_index":2324,"title":{"modules/ManageUsersModule.html":{}},"body":{"modules/ManageUsersModule.html":{},"modules.html":{},"overview.html":{}}}],["managing",{"_index":4747,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["managment",{"_index":4805,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["mandatory",{"_index":4859,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["manner",{"_index":4528,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":4036,"title":{},"body":{"license.html":{}}}],["map",{"_index":1048,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["map((res:any",{"_index":2897,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["map.${match.trim",{"_index":3395,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.component",{"_index":3308,"title":{},"body":{"modules/SharedModule.html":{}}}],["map.component.ts",{"_index":2333,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:364",{"_index":2391,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:366",{"_index":2390,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:368",{"_index":2388,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:374",{"_index":2389,"title":{},"body":{"components/MapComponent.html":{}}}],["map.expressions",{"_index":3391,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.fitbounds(this.drawnitems.getbounds",{"_index":2472,"title":{},"body":{"components/MapComponent.html":{}}}],["map.html",{"_index":2385,"title":{},"body":{"components/MapComponent.html":{}}}],["map.invalidatesize",{"_index":2471,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:deleted",{"_index":2515,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:deletestop",{"_index":2514,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:edited",{"_index":2501,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:editstop",{"_index":2513,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(l.draw.event.created",{"_index":2492,"title":{},"body":{"components/MapComponent.html":{}}}],["mapcomponent",{"_index":293,"title":{"components/MapComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["mapdata",{"_index":2384,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdata'},{'name",{"_index":294,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["mapentry",{"_index":3666,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapentry.key",{"_index":3667,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapfield",{"_index":2341,"title":{},"body":{"components/MapComponent.html":{}}}],["mapping",{"_index":153,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["maps",{"_index":2443,"title":{},"body":{"components/MapComponent.html":{}}}],["march",{"_index":4579,"title":{},"body":{"license.html":{}}}],["markdown",{"_index":296,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["markdownmodule",{"_index":3294,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownmodule.forroot",{"_index":3334,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownservice",{"_index":3295,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdowntextarea",{"_index":2561,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["markdowntextareacomponent",{"_index":295,"title":{"components/MarkdownTextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["marked",{"_index":4028,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2420,"title":{},"body":{"components/MapComponent.html":{}}}],["marks",{"_index":4439,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4084,"title":{},"body":{"license.html":{}}}],["master",{"_index":2450,"title":{},"body":{"components/MapComponent.html":{}}}],["masterdrawoptions",{"_index":2415,"title":{},"body":{"components/MapComponent.html":{}}}],["masterleafletoptions",{"_index":2435,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":2243,"title":{},"body":{"components/ManageRolesComponent.html":{},"pipes/StringTemplatePipe.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["matches",{"_index":1799,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["matches.push(this.converttoitem(item",{"_index":1802,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["matching",{"_index":112,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["matchingexpression",{"_index":2645,"title":{},"body":{"components/PDFListComponent.html":{}}}],["matchingvaluesvalidator",{"_index":3904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingvaluesvalidator(control1",{"_index":3512,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["material",{"_index":4212,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4400,"title":{},"body":{"license.html":{}}}],["matt",{"_index":3624,"title":{},"body":{"injectables/UtilityService.html":{}}}],["maxzoom",{"_index":2404,"title":{},"body":{"components/MapComponent.html":{}}}],["md",{"_index":4862,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["meaning",{"_index":4447,"title":{},"body":{"license.html":{}}}],["means",{"_index":1886,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["measure",{"_index":4231,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4244,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4258,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4270,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["meeting",{"_index":3929,"title":{},"body":{"index.html":{}}}],["meets",{"_index":4140,"title":{},"body":{"license.html":{}}}],["member",{"_index":1138,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["menu",{"_index":4138,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1186,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["mere",{"_index":4120,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2449,"title":{},"body":{"components/MapComponent.html":{}}}],["merge_logs",{"_index":4734,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["merging",{"_index":4502,"title":{},"body":{"license.html":{}}}],["message",{"_index":722,"title":{},"body":{"components/AsynchComponent.html":{},"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["message_for_translate",{"_index":3451,"title":{},"body":{"injectables/TranslationService.html":{}}}],["messagelabel",{"_index":689,"title":{},"body":{"components/AsynchComponent.html":{}}}],["messages",{"_index":4849,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["met",{"_index":4194,"title":{},"body":{"license.html":{}}}],["meta",{"_index":3140,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta.component",{"_index":395,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["meta.component.ts",{"_index":3051,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.component.ts:48",{"_index":3052,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.service",{"_index":2006,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{}}}],["meta.service.ts",{"_index":1909,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:16",{"_index":1914,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:30",{"_index":1919,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:60",{"_index":1917,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:69",{"_index":1925,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:93",{"_index":1922,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta['status",{"_index":3142,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta['title",{"_index":3146,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["metadata",{"_index":122,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["method",{"_index":192,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["methods",{"_index":22,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["mint",{"_index":1746,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["mint/redbox",{"_index":4724,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["mintdataitem",{"_index":1822,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintlookupdataservice",{"_index":1748,"title":{"classes/MintLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintrelationshiplookup",{"_index":1901,"title":{"classes/MintRelationshipLookup.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintrelationshiplookup(url",{"_index":1792,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["minus",{"_index":1247,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["miscellaneous",{"_index":3902,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mismatched",{"_index":3520,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["misrepresentation",{"_index":4429,"title":{},"body":{"license.html":{}}}],["mlu",{"_index":1791,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mlu.search(searchterm",{"_index":1793,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mm",{"_index":1588,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mobx",{"_index":3331,"title":{},"body":{"modules/SharedModule.html":{}}}],["mobxangularmodule",{"_index":3330,"title":{},"body":{"modules/SharedModule.html":{}}}],["modafter",{"_index":1508,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["modalmodule",{"_index":2330,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modalmodule.forroot",{"_index":2332,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modbefore",{"_index":1509,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mode",{"_index":195,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["model",{"_index":151,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["models",{"_index":92,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["models.ts",{"_index":2167,"title":{},"body":{"classes/LoginResult.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["models.ts:10",{"_index":2687,"title":{},"body":{"classes/Plan.html":{}}}],["models.ts:11",{"_index":2684,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:12",{"_index":2685,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:13",{"_index":3245,"title":{},"body":{"classes/ReportResults.html":{}}}],["models.ts:14",{"_index":2683,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:21",{"_index":3496,"title":{},"body":{"classes/User.html":{}}}],["models.ts:22",{"_index":3502,"title":{},"body":{"classes/User.html":{}}}],["models.ts:23",{"_index":3498,"title":{},"body":{"classes/User.html":{}}}],["models.ts:24",{"_index":3501,"title":{},"body":{"classes/User.html":{}}}],["models.ts:25",{"_index":3497,"title":{},"body":{"classes/User.html":{}}}],["models.ts:26",{"_index":3495,"title":{},"body":{"classes/User.html":{}}}],["models.ts:27",{"_index":3500,"title":{},"body":{"classes/User.html":{}}}],["models.ts:28",{"_index":3499,"title":{},"body":{"classes/User.html":{}}}],["models.ts:3",{"_index":2694,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:31",{"_index":2169,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:32",{"_index":2170,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:33",{"_index":2172,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:34",{"_index":2171,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:37",{"_index":3258,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:38",{"_index":3259,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:39",{"_index":3260,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:4",{"_index":2691,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:42",{"_index":3276,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:43",{"_index":3275,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:5",{"_index":2693,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:6",{"_index":2692,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:7",{"_index":3233,"title":{},"body":{"classes/Report.html":{}}}],["models.ts:9",{"_index":2686,"title":{},"body":{"classes/Plan.html":{}}}],["modification",{"_index":4078,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4143,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1596,"title":{},"body":{"components/ExportFormComponent.html":{},"license.html":{}}}],["modifies",{"_index":4274,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1174,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["modifyeditors(records",{"_index":2910,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["modifying",{"_index":4109,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["module",{"_index":916,"title":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["module.id",{"_index":1502,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["moduleid",{"_index":1501,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["modules",{"_index":918,"title":{"modules.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["moisbo",{"_index":3700,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["moises",{"_index":3618,"title":{},"body":{"injectables/UtilityService.html":{}}}],["moment",{"_index":85,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["moment(a['dateupdated']).isbefore(moment(b['dateupdated",{"_index":2662,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(attachment.dateupdated).format('lll",{"_index":2656,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.field.latestpdf['dateupdated']).isbefore(moment(attachment.dateupdated",{"_index":2659,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.modafter).format('yyyy",{"_index":1591,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(this.modbefore).format('yyyy",{"_index":1587,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(value).locale(this.locale).format(this.field.dateformat",{"_index":806,"title":{},"body":{"components/AsynchComponent.html":{}}}],["mongo",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":4708,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["more",{"_index":1191,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["moreover",{"_index":4475,"title":{},"body":{"license.html":{}}}],["movedown(event",{"_index":1496,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["movedownbuttonclass",{"_index":1272,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveup(event",{"_index":1489,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveupbuttonclass",{"_index":1271,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["msg",{"_index":2204,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["mt0",{"_index":2406,"title":{},"body":{"components/MapComponent.html":{}}}],["mt1",{"_index":2407,"title":{},"body":{"components/MapComponent.html":{}}}],["mt2",{"_index":2408,"title":{},"body":{"components/MapComponent.html":{}}}],["mt3",{"_index":2409,"title":{},"body":{"components/MapComponent.html":{}}}],["much",{"_index":4749,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["mulholland",{"_index":3625,"title":{},"body":{"injectables/UtilityService.html":{}}}],["multiple",{"_index":1735,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["multivalue",{"_index":2597,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["multivaluefieldpipe",{"_index":2594,"title":{"pipes/MultivalueFieldPipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"modules/ReportModule.html":{},"overview.html":{}}}],["n/a",{"_index":4892,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["name",{"_index":40,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["namefilter",{"_index":2301,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["namelabel",{"_index":684,"title":{},"body":{"components/AsynchComponent.html":{}}}],["names",{"_index":2029,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["national",{"_index":3938,"title":{},"body":{"index.html":{}}}],["nature",{"_index":4288,"title":{},"body":{"license.html":{}}}],["nav",{"_index":339,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["navigateto",{"_index":628,"title":{},"body":{"classes/AngularPage.html":{}}}],["nbsp",{"_index":623,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["nbsp;{{field.label",{"_index":372,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["nbsp;{{rolefilter.label",{"_index":2311,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["necessary",{"_index":4622,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["need",{"_index":3998,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["needed",{"_index":2353,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{}}}],["needs",{"_index":2355,"title":{},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["network",{"_index":4122,"title":{},"body":{"license.html":{}}}],["new",{"_index":862,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["newelem",{"_index":1371,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["newelem.componentreactors.push(this",{"_index":1482,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.createformmodel",{"_index":1377,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.margintop",{"_index":1477,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setemptyvalue",{"_index":1374,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setupeventhandlers",{"_index":1480,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.showheader",{"_index":1481,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.vocabfield.initialvalue",{"_index":1479,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem:any",{"_index":1476,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newformmodel",{"_index":1376,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newidx",{"_index":1491,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst",{"_index":1346,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst.postinit(value",{"_index":1364,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f",{"_index":1350,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f.field",{"_index":1360,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newlocation:any",{"_index":2741,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["newopts",{"_index":1343,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newopts.value",{"_index":1345,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newroles",{"_index":2282,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles).then((saveres:saveresult",{"_index":2279,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles.push(role.name",{"_index":2274,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles:any",{"_index":2271,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["next",{"_index":4335,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ng2",{"_index":170,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{}}}],["ng2completermodule",{"_index":3312,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngafterviewinit",{"_index":483,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ngclass]=\"field.cssclasses\">download",{"_index":2670,"title":{},"body":{"components/PDFListComponent.html":{}}}],["ngclass]=\"field.movedownbuttonclass",{"_index":1458,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.moveupbuttonclass",{"_index":1450,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttonclass",{"_index":1462,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttontextclass",{"_index":1461,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngcompleter",{"_index":1866,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["nginx",{"_index":4709,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ngmodule",{"_index":934,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["ngonchanges",{"_index":1038,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["ngoninit",{"_index":557,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["ngstyle]=\"{'margin",{"_index":1451,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngx",{"_index":943,"title":{},"body":{"modules/DashboardModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{}}}],["nkdatetimemodule",{"_index":1606,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["node",{"_index":352,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/installation-guide.html":{}}}],["node_args",{"_index":4733,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["node_env",{"_index":4736,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["nodejs",{"_index":4705,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["noemptyingroup",{"_index":2825,"title":{},"body":{"classes/RbValidator.html":{}}}],["noemptyingroup(field",{"_index":2831,"title":{},"body":{"classes/RbValidator.html":{}}}],["noitems",{"_index":2690,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["non",{"_index":4073,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":4323,"title":{},"body":{"license.html":{}}}],["noreply@redbox",{"_index":4907,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["noreply@redboxresearchdata.com.au",{"_index":4896,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["normal",{"_index":4155,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4355,"title":{},"body":{"license.html":{}}}],["note",{"_index":1094,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["notes",{"_index":2046,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["notesheader",{"_index":2759,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["nothing",{"_index":4487,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4132,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4127,"title":{},"body":{"license.html":{}}}],["notification",{"_index":4880,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["notifications",{"_index":4773,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["notifies",{"_index":4476,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4470,"title":{},"body":{"license.html":{}}}],["notinformfield",{"_index":669,"title":{},"body":{"components/AsynchComponent.html":{}}}],["notwithstanding",{"_index":4417,"title":{},"body":{"license.html":{}}}],["now",{"_index":599,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["npm",{"_index":4713,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["null",{"_index":60,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["null):formcontrol",{"_index":402,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["number",{"_index":168,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["numbered",{"_index":4606,"title":{},"body":{"license.html":{}}}],["o._leaflet_id",{"_index":2508,"title":{},"body":{"components/MapComponent.html":{}}}],["o.oid",{"_index":3751,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["object",{"_index":958,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["objects",{"_index":2714,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["obligate",{"_index":4590,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4339,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4233,"title":{},"body":{"license.html":{}}}],["observable",{"_index":671,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["observable.from(fieldarray).flatmap((f:any",{"_index":1962,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["observable.of(field",{"_index":1853,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["observable.of(fields",{"_index":1976,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["observable.of(form",{"_index":2863,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["observable.of(null",{"_index":1973,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/RelatedObjectDataComponent.html":{}}}],["observable.zip(...getrecordmetaobs",{"_index":3149,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["occasionally",{"_index":4322,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":4484,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4043,"title":{},"body":{"license.html":{}}}],["offer",{"_index":4019,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4345,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4326,"title":{},"body":{"license.html":{}}}],["official",{"_index":4145,"title":{},"body":{"license.html":{}}}],["oid",{"_index":744,"title":{},"body":{"components/AsynchComponent.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["oid).then((form:any",{"_index":2860,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["oid:string=null",{"_index":2877,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["omnivore",{"_index":2393,"title":{},"body":{"components/MapComponent.html":{}}}],["onapplyfilter",{"_index":3102,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["once",{"_index":3959,"title":{},"body":{"index.html":{},"additional-documentation/installation-guide.html":{}}}],["onchange",{"_index":3280,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["onchange(opt",{"_index":3284,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["onchange(opt:any",{"_index":465,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["onclick",{"_index":373,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/SaveButtonComponent.html":{}}}],["onclick(event",{"_index":375,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["one",{"_index":2276,"title":{},"body":{"components/ManageRolesComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["onfilterchange",{"_index":2187,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["onfilterchange(rolefilter",{"_index":2196,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["onfilterchange(rolefilter:any=null",{"_index":2291,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["oninit",{"_index":381,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["onitemselect",{"_index":1653,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onkeyup(value",{"_index":1895,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onlogin",{"_index":2112,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(event",{"_index":2121,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(event:any",{"_index":2141,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onmapready(map",{"_index":2467,"title":{},"body":{"components/MapComponent.html":{}}}],["onremove",{"_index":1234,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremove(event",{"_index":1241,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremovebtnclick",{"_index":1239,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremovebtnclick)=\"removeelem($event[0",{"_index":1434,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onselect(selected",{"_index":1875,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onstart",{"_index":644,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstart(progress",{"_index":654,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstop",{"_index":645,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstop(progress",{"_index":657,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onupdate",{"_index":646,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onupdate(progress",{"_index":659,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onvalueloaded",{"_index":1357,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["onvalueupdate",{"_index":1356,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["open",{"_index":3716,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"index.html":{}}}],["openidconnect",{"_index":3861,"title":{},"body":{"dependencies.html":{}}}],["operate",{"_index":4638,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4331,"title":{},"body":{"license.html":{}}}],["operating",{"_index":4164,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4253,"title":{},"body":{"license.html":{}}}],["opt",{"_index":437,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt.label",{"_index":441,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt.value",{"_index":439,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt/redbox",{"_index":4720,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["opt:any",{"_index":3761,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option",{"_index":1177,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["option['label",{"_index":3732,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option['name",{"_index":3734,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["optionalemailvalidator",{"_index":3906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionalemailvalidator(control",{"_index":3524,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":21,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["options.parametername",{"_index":3054,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["options.value",{"_index":2462,"title":{},"body":{"components/MapComponent.html":{}}}],["options['addbuttonclass",{"_index":1287,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontext",{"_index":1276,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontextclass",{"_index":1284,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['cansort",{"_index":1442,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['cols",{"_index":2575,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['columns",{"_index":2635,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["options['columntitle",{"_index":3179,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['completionlabel",{"_index":724,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['completionratetype",{"_index":700,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['criteria",{"_index":743,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['datecompletedlabel",{"_index":713,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['dateformat",{"_index":733,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['datestartedlabel",{"_index":709,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['delegateerrorhandling",{"_index":1301,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['disabledexpression",{"_index":2706,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["options['disableeditafterselect",{"_index":1677,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['drawoptions",{"_index":2456,"title":{},"body":{"components/MapComponent.html":{}}}],["options['editnotescssclasses",{"_index":2770,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["options['fieldnames",{"_index":1670,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['forceclone",{"_index":1282,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['lastupdatelabel",{"_index":728,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['leafletoptions",{"_index":2448,"title":{},"body":{"components/MapComponent.html":{}}}],["options['listentype",{"_index":737,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['maintabid",{"_index":2464,"title":{},"body":{"components/MapComponent.html":{}}}],["options['messagelabel",{"_index":720,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['namelabel",{"_index":703,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['open",{"_index":3724,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['options",{"_index":3729,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['placeholder",{"_index":1674,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['provider",{"_index":1687,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['recordtype",{"_index":3180,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['relatedrecordid",{"_index":697,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['removebuttonclass",{"_index":1292,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontext",{"_index":1278,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontextclass",{"_index":1290,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['restricttoselection",{"_index":1683,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['resultarrayproperty",{"_index":1689,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['rows",{"_index":2572,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['savefirst",{"_index":3727,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['searchfields",{"_index":1664,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['skipclone",{"_index":1280,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['sourcetype",{"_index":1672,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['startedbylabel",{"_index":717,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['startswith",{"_index":2637,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['statuslabel",{"_index":706,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['storelabelonly",{"_index":1685,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['stringlabeltofield",{"_index":1679,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['tabid",{"_index":2460,"title":{},"body":{"components/MapComponent.html":{}}}],["options['targetaction",{"_index":218,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["options['tasktype",{"_index":741,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['titlecompleterdescription",{"_index":1668,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefieldarr",{"_index":1662,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefielddelim",{"_index":1666,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefieldname",{"_index":1660,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['type",{"_index":2564,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['value",{"_index":222,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["options['vocabid",{"_index":1656,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["opts",{"_index":3088,"title":{},"body":{"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["opts.alwaysactive",{"_index":2980,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.name",{"_index":2972,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.title",{"_index":2974,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.type",{"_index":2975,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.typelabel",{"_index":2978,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.value",{"_index":2976,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["order",{"_index":2664,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["organisation",{"_index":4796,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["organization",{"_index":4500,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4090,"title":{},"body":{"license.html":{}}}],["origdata",{"_index":1400,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["origdisabledexpr",{"_index":2704,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["origin",{"_index":4430,"title":{},"body":{"license.html":{}}}],["original",{"_index":4431,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3878,"title":{},"body":{"dependencies.html":{}}}],["os",{"_index":4704,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["others",{"_index":4000,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2836,"title":{},"body":{"classes/RbValidator.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["out",{"_index":931,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["output",{"_index":1257,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/RecordSearchRefinerComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"license.html":{}}}],["outputs",{"_index":1238,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["outside",{"_index":4217,"title":{},"body":{"license.html":{}}}],["over",{"_index":4739,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["overlay",{"_index":4753,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overridden",{"_index":2369,"title":{},"body":{"components/MapComponent.html":{}}}],["override",{"_index":4777,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overview",{"_index":4700,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":3508,"title":{},"body":{"interfaces/UserForm.html":{}}}],["owasp.test(password",{"_index":3538,"title":{},"body":{"interfaces/UserForm.html":{}}}],["owned",{"_index":4524,"title":{},"body":{"license.html":{}}}],["owner'},{'name",{"_index":350,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["ownership",{"_index":3211,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["package",{"_index":3798,"title":{"dependencies.html":{}},"body":{}}],["packaged",{"_index":4281,"title":{},"body":{"license.html":{}}}],["packagetype",{"_index":969,"title":{},"body":{"injectables/DashboardService.html":{}}}],["packagetype=${packagetype",{"_index":1003,"title":{},"body":{"injectables/DashboardService.html":{}}}],["packaging",{"_index":4156,"title":{},"body":{"license.html":{}}}],["page",{"_index":525,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pagedata",{"_index":2220,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["pagenumber",{"_index":961,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["pagenumber:number",{"_index":3254,"title":{},"body":{"injectables/ReportService.html":{}}}],["pageurl",{"_index":574,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pageurl.split",{"_index":577,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["paginationmodule",{"_index":3368,"title":{},"body":{"components/SortComponent.html":{}}}],["paginationmodule,tooltipmodule",{"_index":942,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["paginationmodule.forroot",{"_index":945,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["pair",{"_index":1762,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["pairs",{"_index":4863,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["paper",{"_index":4671,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4460,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4536,"title":{},"body":{"license.html":{}}}],["param",{"_index":401,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{}}}],["parameter",{"_index":300,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parametername",{"_index":578,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parameterretrievercomponent",{"_index":299,"title":{"components/ParameterRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["parameterretrieverfield",{"_index":618,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2959,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["params.filteractiverefinerswithnodata",{"_index":2925,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:any",{"_index":2957,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:object",{"_index":3255,"title":{},"body":{"injectables/ReportService.html":{}}}],["paramvalue",{"_index":619,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parent",{"_index":3776,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["parent'},{'name",{"_index":365,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parentelement",{"_index":1089,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('*:disabled",{"_index":1102,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('button').filter((index",{"_index":1104,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["parentelement.find('input').prop",{"_index":1103,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentfield",{"_index":55,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["parentid",{"_index":136,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parse",{"_index":1893,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["parsedlayers",{"_index":2535,"title":{},"body":{"components/MapComponent.html":{}}}],["parsedlayers.eachlayer(layer",{"_index":2537,"title":{},"body":{"components/MapComponent.html":{}}}],["parsequerystr",{"_index":3068,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr",{"_index":3082,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr:string",{"_index":3023,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["part",{"_index":4092,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["particular",{"_index":1188,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["particularly",{"_index":4775,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["parties",{"_index":4119,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4186,"title":{},"body":{"license.html":{}}}],["party",{"_index":4332,"title":{},"body":{"license.html":{}}}],["party's",{"_index":4503,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3466,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["passport",{"_index":3855,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":2135,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"license.html":{}}}],["password:password",{"_index":3589,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["passwords",{"_index":3507,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["passwordstrength",{"_index":3540,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthdetails",{"_index":3541,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthvalidator",{"_index":3907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordstrengthvalidator(control1",{"_index":3535,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["patent",{"_index":4459,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4061,"title":{},"body":{"license.html":{}}}],["path",{"_index":2746,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["pathlocationstrategy",{"_index":1152,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["paths",{"_index":3630,"title":{},"body":{"injectables/UtilityService.html":{}}}],["pattern",{"_index":3898,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["payload",{"_index":1227,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['from",{"_index":1229,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['subject",{"_index":1228,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payment",{"_index":4573,"title":{},"body":{"license.html":{}}}],["pdf",{"_index":303,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["pdfattachments",{"_index":2627,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component",{"_index":3302,"title":{},"body":{"modules/SharedModule.html":{}}}],["pdflist.component.ts",{"_index":2609,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:100",{"_index":2619,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:102",{"_index":2617,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:132",{"_index":2615,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.html",{"_index":2612,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflistcomponent",{"_index":302,"title":{"components/PDFListComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["pdflistfield",{"_index":2618,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdfs",{"_index":2610,"title":{},"body":{"components/PDFListComponent.html":{}}}],["peer",{"_index":4341,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4344,"title":{},"body":{"license.html":{}}}],["pending",{"_index":2788,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["percent:'1.0",{"_index":817,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percent:\\'1.0",{"_index":824,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percentage",{"_index":701,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percentpipe",{"_index":667,"title":{},"body":{"components/AsynchComponent.html":{}}}],["performance",{"_index":4618,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4174,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4468,"title":{},"body":{"license.html":{}}}],["permission",{"_index":4022,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":4190,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":4264,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4298,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4450,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3964,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["perpetuity",{"_index":4390,"title":{},"body":{"license.html":{}}}],["personal",{"_index":4354,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4588,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2745,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"license.html":{}}}],["physical':\"physical",{"_index":2749,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["physically",{"_index":4320,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":3993,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":2593,"title":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["pipes",{"_index":2595,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":2603,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["place",{"_index":4328,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2352,"title":{},"body":{"components/MapComponent.html":{}}}],["placeholder",{"_index":1570,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["plain",{"_index":4904,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["plan",{"_index":90,"title":{"classes/Plan.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{},"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plan.dashboardtitle",{"_index":1014,"title":{},"body":{"injectables/DashboardService.html":{}}}],["plan.selected",{"_index":3201,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plan.title",{"_index":1020,"title":{},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["plan.title[0",{"_index":3203,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plans",{"_index":977,"title":{},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plantable",{"_index":89,"title":{"classes/PlanTable.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["platform",{"_index":3912,"title":{},"body":{"index.html":{}}}],["please",{"_index":2155,"title":{},"body":{"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plugin",{"_index":2339,"title":{},"body":{"components/MapComponent.html":{}}}],["plus",{"_index":1288,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["pm2",{"_index":4716,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["point",{"_index":4940,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["pointer",{"_index":4662,"title":{},"body":{"license.html":{}}}],["policies",{"_index":3931,"title":{},"body":{"index.html":{}}}],["popular",{"_index":3917,"title":{},"body":{"index.html":{}}}],["populatedatalocation(oid",{"_index":2789,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["populateformgroup",{"_index":1986,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["populateformgroup(fields",{"_index":1998,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["portal",{"_index":3586,"title":{},"body":{"injectables/UserSimpleService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["portal's",{"_index":4769,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["portion",{"_index":4348,"title":{},"body":{"license.html":{}}}],["position",{"_index":2418,"title":{},"body":{"components/MapComponent.html":{}}}],["position:\"topright\",draw:{marker:{icon:icon({iconsize:[25,41],iconanchor:[13,41],iconurl:\"http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2381,"title":{},"body":{"components/MapComponent.html":{}}}],["possesses",{"_index":4317,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4278,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4640,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4656,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["post",{"_index":4905,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["postinit(value",{"_index":1711,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["postinit(value:any",{"_index":2567,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["power",{"_index":4246,"title":{},"body":{"license.html":{}}}],["practical",{"_index":3975,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4049,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["preamble",{"_index":3970,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4074,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":4046,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":4504,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":4142,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1764,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["present",{"_index":2488,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["presented",{"_index":4838,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["presents",{"_index":4136,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4426,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":3999,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":4384,"title":{},"body":{"license.html":{}}}],["preview",{"_index":2559,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["previous",{"_index":2671,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["previously",{"_index":2086,"title":{},"body":{"classes/LoadableComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["prevname",{"_index":2213,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["prevrole",{"_index":2225,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["prevrole:null",{"_index":2214,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["price",{"_index":3989,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4575,"title":{},"body":{"license.html":{}}}],["primary",{"_index":1296,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["prior",{"_index":4471,"title":{},"body":{"license.html":{}}}],["private",{"_index":1033,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["problems",{"_index":4029,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4378,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":4962,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["process",{"_index":4755,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["processes",{"_index":638,"title":{},"body":{"components/AsynchComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["procuring",{"_index":4562,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4167,"title":{},"body":{"license.html":{}}}],["product",{"_index":4306,"title":{},"body":{"license.html":{}}}],["production",{"_index":4778,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["products",{"_index":4044,"title":{},"body":{"license.html":{}}}],["profile'},{'name",{"_index":356,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["prog",{"_index":803,"title":{},"body":{"components/AsynchComponent.html":{}}}],["prog.id",{"_index":804,"title":{},"body":{"components/AsynchComponent.html":{}}}],["program",{"_index":1169,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["program's",{"_index":4257,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4688,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4149,"title":{},"body":{"license.html":{}}}],["programs",{"_index":3986,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":4653,"title":{},"body":{"license.html":{}}}],["progress",{"_index":656,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.completionrate",{"_index":775,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.currentidx",{"_index":776,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.id",{"_index":782,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.message",{"_index":819,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.name",{"_index":815,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.started_by",{"_index":821,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.targetidx",{"_index":777,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progressarr",{"_index":693,"title":{},"body":{"components/AsynchComponent.html":{}}}],["prohibit",{"_index":4048,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":4242,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4569,"title":{},"body":{"license.html":{}}}],["project",{"_index":4676,"title":{},"body":{"license.html":{}}}],["prominent",{"_index":4139,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4130,"title":{},"body":{"license.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{}}}],["propagate",{"_index":4100,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4491,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4110,"title":{},"body":{"license.html":{}}}],["properties",{"_index":11,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["property",{"_index":521,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["proprietary",{"_index":4070,"title":{},"body":{"license.html":{}}}],["protect",{"_index":3996,"title":{},"body":{"license.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/ANDSService.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["protecting",{"_index":4040,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4023,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":4405,"title":{},"body":{"license.html":{}}}],["protractor",{"_index":632,"title":{},"body":{"classes/AngularPage.html":{}}}],["prove",{"_index":4619,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1149,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/RecordSearchModule.html":{},"license.html":{},"overview.html":{}}}],["provided",{"_index":3623,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["provider",{"_index":1651,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["providers",{"_index":922,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["provides",{"_index":3948,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["provision",{"_index":4056,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4465,"title":{},"body":{"license.html":{}}}],["provisioned",{"_index":4788,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["proxy",{"_index":4609,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["proxy's",{"_index":4610,"title":{},"body":{"license.html":{}}}],["pt",{"_index":3464,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pub",{"_index":2697,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["public",{"_index":24,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["publicity",{"_index":4432,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4406,"title":{},"body":{"license.html":{}}}],["publish",{"_index":306,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"index.html":{},"license.html":{}}}],["publishdatalocationrefreshcomponent",{"_index":305,"title":{"components/PublishDataLocationRefreshComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["publishdatalocationrefreshfield",{"_index":2700,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["publishdatalocationselector.component",{"_index":3306,"title":{},"body":{"modules/SharedModule.html":{}}}],["publishdatalocationselector.component.ts",{"_index":2713,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:155",{"_index":2739,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:156",{"_index":2737,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:158",{"_index":2732,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:162",{"_index":2735,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:168",{"_index":2730,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:172",{"_index":2729,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:176",{"_index":2726,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:181",{"_index":2731,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:185",{"_index":2733,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.html",{"_index":2717,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselectorcomponent",{"_index":308,"title":{"components/PublishDataLocationSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["publishdatalocationselectorfield",{"_index":2738,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["published",{"_index":128,"title":{},"body":{"components/ActionButtonComponent.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/PublishDataLocationRefreshComponent.html":{},"license.html":{}}}],["publishing",{"_index":3936,"title":{},"body":{"index.html":{}}}],["publishmetadata(oid",{"_index":3055,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["pull",{"_index":1250,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["purpose",{"_index":1189,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["purposes",{"_index":4358,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["pursuant",{"_index":4558,"title":{},"body":{"license.html":{}}}],["q",{"_index":3027,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["q.split",{"_index":3029,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qcif",{"_index":3944,"title":{},"body":{"index.html":{}}}],["qobj",{"_index":3028,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[0].split('|')[1",{"_index":3033,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[1",{"_index":3031,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qualify",{"_index":4480,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4617,"title":{},"body":{"license.html":{}}}],["queensland",{"_index":1157,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["query",{"_index":1634,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["querystr",{"_index":3024,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["question",{"_index":1109,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["r.name",{"_index":2265,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["r:any",{"_index":2264,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["radio",{"_index":459,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ran",{"_index":1062,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["rb",{"_index":258,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["rbmapdatatemplate",{"_index":2545,"title":{},"body":{"components/MapComponent.html":{}}}],["rbportal",{"_index":4729,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["rbrelatedobjectdatatemplate",{"_index":3150,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rbvalidator",{"_index":2820,"title":{"classes/RbValidator.html":{}},"body":{"classes/RbValidator.html":{}}}],["rbvalidator.isempty(group.controls[f",{"_index":2844,"title":{},"body":{"classes/RbValidator.html":{}}}],["rc",{"_index":3863,"title":{},"body":{"dependencies.html":{}}}],["rda",{"_index":3937,"title":{},"body":{"index.html":{}}}],["rdmp",{"_index":2638,"title":{},"body":{"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["re",{"_index":3711,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["reactevent(eventname",{"_index":1398,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reacting",{"_index":1402,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reactiveformsmodule",{"_index":937,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["read",{"_index":1066,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["readable",{"_index":4303,"title":{},"body":{"license.html":{}}}],["readily",{"_index":4546,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4409,"title":{},"body":{"license.html":{}}}],["ready",{"_index":4054,"title":{},"body":{"license.html":{}}}],["reason",{"_index":4556,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4318,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4478,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3992,"title":{},"body":{"license.html":{}}}],["received",{"_index":1193,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["receives",{"_index":4496,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4564,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4389,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4554,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4011,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":4146,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":4751,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record",{"_index":127,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["record's",{"_index":4808,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["record.datalocations",{"_index":2792,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["record.js",{"_index":4766,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record.oid",{"_index":3188,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["record/s",{"_index":4913,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["record_search_refiner.html",{"_index":3098,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["record_type",{"_index":1510,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["recordactionresult",{"_index":2852,"title":{"classes/RecordActionResult.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordmetadataretrievercomponent",{"_index":309,"title":{"components/RecordMetadataRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordmetadataretrieverfield",{"_index":394,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["records",{"_index":3160,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["records.service",{"_index":210,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["records:records",{"_index":2912,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchcomponent",{"_index":310,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordsearchmodule",{"_index":3058,"title":{"modules/RecordSearchModule.html":{}},"body":{"modules/RecordSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["recordsearchparams",{"_index":2923,"title":{"classes/RecordSearchParams.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchrefiner",{"_index":2933,"title":{"classes/RecordSearchRefiner.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["recordsearchrefinercomponent",{"_index":312,"title":{"components/RecordSearchRefinerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordselected(record",{"_index":3186,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordselectedemit(record",{"_index":3192,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordservice",{"_index":212,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["recordsservice",{"_index":209,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["recordtype",{"_index":965,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordtype:string",{"_index":3174,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordtype=${recordtype",{"_index":1000,"title":{},"body":{"injectables/DashboardService.html":{}}}],["rectype",{"_index":1535,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rectypename",{"_index":1598,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["rectypenames",{"_index":1511,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["redbox",{"_index":2716,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox.research.uts.edu.au/default/rdmp",{"_index":4960,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox2ckan",{"_index":3865,"title":{},"body":{"dependencies.html":{}}}],["redbox@dev",{"_index":4908,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redbox@redboxresearchdata.com.au",{"_index":4901,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redboxapikey",{"_index":4737,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["redirect",{"_index":527,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redirecting",{"_index":2149,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["redirectlocation",{"_index":519,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redistribute",{"_index":1172,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["reduce",{"_index":4927,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["redux",{"_index":3868,"title":{},"body":{"dependencies.html":{}}}],["referring",{"_index":3988,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4081,"title":{},"body":{"license.html":{}}}],["refine",{"_index":3118,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["refinedsearchstr",{"_index":2924,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner",{"_index":2932,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refiner'},{'name",{"_index":314,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["refiner.activevalue",{"_index":2993,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.alwaysactive",{"_index":2994,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.component.ts",{"_index":3097,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:10",{"_index":3104,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:11",{"_index":3103,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:12",{"_index":3105,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:14",{"_index":3108,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:22",{"_index":3109,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.name",{"_index":3020,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.type",{"_index":2934,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.value",{"_index":2992,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner:recordsearchrefiner",{"_index":3010,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig",{"_index":2984,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.alwaysactive",{"_index":3005,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.name",{"_index":3047,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.title",{"_index":3116,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.typelabel",{"_index":3117,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinername",{"_index":3032,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalue",{"_index":3107,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinervalue:any",{"_index":3111,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinervalues",{"_index":3008,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues[refinername",{"_index":3034,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.activevalue",{"_index":3011,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.value",{"_index":3012,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refrain",{"_index":4592,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":2696,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh'},{'name",{"_index":307,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["refresh.component",{"_index":3329,"title":{},"body":{"modules/SharedModule.html":{}}}],["refresh.component.html",{"_index":2699,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh.component.ts",{"_index":2695,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh.component.ts:73",{"_index":2701,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresher",{"_index":2702,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["reg",{"_index":3681,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regard",{"_index":4415,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4280,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":4187,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3676,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(`${this.field.startswith",{"_index":2646,"title":{},"body":{"components/PDFListComponent.html":{}}}],["regexp(regex",{"_index":3682,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(regextrail",{"_index":3688,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regextrail",{"_index":3683,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regions",{"_index":2340,"title":{},"body":{"components/MapComponent.html":{}}}],["register",{"_index":4965,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["registerevents",{"_index":3747,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["registermapeventhandlers(map",{"_index":2491,"title":{},"body":{"components/MapComponent.html":{}}}],["regtrail",{"_index":3687,"title":{},"body":{"injectables/UtilityService.html":{}}}],["reinstated",{"_index":4464,"title":{},"body":{"license.html":{}}}],["related",{"_index":1220,"title":{},"body":{"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["related_notes",{"_index":2045,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_title",{"_index":2044,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_url",{"_index":2036,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_website",{"_index":2031,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_websites",{"_index":2056,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["relatedobjectdata",{"_index":3122,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata'},{'name",{"_index":316,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["relatedobjectdata.component",{"_index":3303,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectdata.component.ts",{"_index":3121,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.component.ts:135",{"_index":3127,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.component.ts:141",{"_index":3130,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.html",{"_index":3123,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdatacomponent",{"_index":315,"title":{"components/RelatedObjectDataComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["relatedobjectdatafield",{"_index":3131,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjects",{"_index":2622,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectselected:eventemitter",{"_index":3176,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector",{"_index":3166,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector'},{'name",{"_index":318,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["relatedobjectselector.component",{"_index":3304,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectselector.component.ts",{"_index":3165,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:143",{"_index":3170,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:145",{"_index":3171,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.html",{"_index":3167,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselectorcomponent",{"_index":317,"title":{"components/RelatedObjectSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["relatedobjectselectorcomponent,datalocationcomponent",{"_index":3337,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectselectorfield",{"_index":3169,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedrecordid",{"_index":682,"title":{},"body":{"components/AsynchComponent.html":{}}}],["relating",{"_index":4883,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["relationship",{"_index":4218,"title":{},"body":{"license.html":{}}}],["relationshiplookup(searchterm",{"_index":1789,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["released",{"_index":3984,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4272,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":2888,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["relicensing",{"_index":4451,"title":{},"body":{"license.html":{}}}],["relying",{"_index":4545,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4338,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3981,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4416,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2223,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{}}}],["removeallelems",{"_index":1412,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebtnclass",{"_index":1236,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removebtntext",{"_index":1237,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removebuttonclass",{"_index":1270,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontext",{"_index":1264,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontextclass",{"_index":1268,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removed",{"_index":3040,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["removeelem",{"_index":3214,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removeelem(event",{"_index":1424,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removeelem(index",{"_index":1379,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removelocation(loc",{"_index":2793,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["render",{"_index":2336,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["rendercompleteelement",{"_index":2865,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rendered",{"_index":2887,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["rendition",{"_index":4869,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["repair",{"_index":4624,"title":{},"body":{"license.html":{}}}],["repeatable",{"_index":320,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["repeatable.component",{"_index":2055,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/SharedModule.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatable.component.ts",{"_index":1233,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:222",{"_index":1243,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:223",{"_index":1254,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:224",{"_index":1253,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:225",{"_index":1244,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:226",{"_index":1256,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:228",{"_index":1242,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:232",{"_index":1240,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:242",{"_index":3215,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:244",{"_index":3216,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:248",{"_index":3218,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:252",{"_index":3217,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:318",{"_index":3229,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:319",{"_index":3228,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent",{"_index":1421,"title":{"classes/RepeatableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatablecomponent:242",{"_index":3223,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:244",{"_index":3219,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:248",{"_index":3221,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:252",{"_index":3220,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontainer",{"_index":1262,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributor",{"_index":1438,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributorcomponent",{"_index":319,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatablegroupcomponent",{"_index":321,"title":{"components/RepeatableGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatabletextfieldcomponent",{"_index":323,"title":{"components/RepeatableTextfieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatablevocab",{"_index":1429,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablevocabcomponent",{"_index":325,"title":{"components/RepeatableVocabComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["replace",{"_index":3388,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replace(/(\\$\\{(?!map\\.)[^}]+\\})/g",{"_index":3400,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g",{"_index":3393,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replacing",{"_index":1741,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["report",{"_index":3230,"title":{"classes/Report.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["report'},{'name",{"_index":328,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["report.component",{"_index":3243,"title":{},"body":{"modules/ReportModule.html":{}}}],["reportcomponent",{"_index":327,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["reportmodule",{"_index":3235,"title":{"modules/ReportModule.html":{}},"body":{"modules/ReportModule.html":{},"modules.html":{},"overview.html":{}}}],["reportresults",{"_index":3234,"title":{"classes/ReportResults.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["reportservice",{"_index":3241,"title":{"injectables/ReportService.html":{}},"body":{"modules/ReportModule.html":{},"injectables/ReportService.html":{},"overview.html":{}}}],["repository",{"_index":4752,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["represent",{"_index":4375,"title":{},"body":{"license.html":{}}}],["request",{"_index":3870,"title":{},"body":{"dependencies.html":{}}}],["requestoptions",{"_index":852,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["require",{"_index":3896,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["required",{"_index":185,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["requirement",{"_index":4273,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3933,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["requires",{"_index":3954,"title":{},"body":{"index.html":{},"license.html":{}}}],["requiring",{"_index":4094,"title":{},"body":{"license.html":{}}}],["res",{"_index":59,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["res.json",{"_index":875,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["res.message",{"_index":2153,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.url",{"_index":2151,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.user",{"_index":2147,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["research",{"_index":3910,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["researchers",{"_index":3914,"title":{},"body":{"index.html":{}}}],["reset",{"_index":930,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["reset(data=null",{"_index":1414,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["resetfilter",{"_index":2188,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["resetselector",{"_index":3194,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resetselectorevent",{"_index":3177,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resolved",{"_index":4365,"title":{},"body":{"license.html":{}}}],["respect",{"_index":4006,"title":{},"body":{"license.html":{}}}],["response",{"_index":54,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["response[\"items",{"_index":1012,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["response['workspacetypes",{"_index":3742,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["responsibilities",{"_index":4005,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1135,"title":{},"body":{"components/DmpFieldComponent.html":{},"index.html":{},"license.html":{}}}],["rest",{"_index":4969,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["restored",{"_index":1063,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["restrict",{"_index":4064,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":4243,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4449,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4446,"title":{},"body":{"license.html":{}}}],["restricttoselection",{"_index":1649,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["result",{"_index":111,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["result.errors.length",{"_index":3539,"title":{},"body":{"interfaces/UserForm.html":{}}}],["result.push(itemresult",{"_index":3658,"title":{},"body":{"injectables/UtilityService.html":{}}}],["resultarrayproperty",{"_index":1652,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["resulting",{"_index":2027,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["results",{"_index":113,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["result}${_.isempty(result",{"_index":3659,"title":{},"body":{"injectables/UtilityService.html":{}}}],["retains",{"_index":4393,"title":{},"body":{"license.html":{}}}],["retriever",{"_index":616,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["retriever'},{'name",{"_index":301,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["retrieving",{"_index":1847,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["return",{"_index":105,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["returnemptystring",{"_index":3446,"title":{},"body":{"injectables/TranslationService.html":{}}}],["returnnull",{"_index":3445,"title":{},"body":{"injectables/TranslationService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["retval",{"_index":2847,"title":{},"body":{"classes/RbValidator.html":{}}}],["reverse",{"_index":2666,"title":{},"body":{"components/PDFListComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["review",{"_index":4839,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["reviewing",{"_index":4644,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4598,"title":{},"body":{"license.html":{}}}],["revokekey",{"_index":3558,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokekey(userid",{"_index":3572,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokeuserkey",{"_index":3559,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["rich",{"_index":4916,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["right",{"_index":1137,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["rights",{"_index":3997,"title":{},"body":{"license.html":{}}}],["risk",{"_index":4616,"title":{},"body":{"license.html":{}}}],["role",{"_index":2175,"title":{"classes/Role.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/WorkspaceTypeService.html":{}}}],["role.checked",{"_index":2296,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.hasrole",{"_index":2273,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.name",{"_index":2250,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.value",{"_index":2297,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role:any",{"_index":2234,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role:role",{"_index":2918,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rolefilter",{"_index":2198,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.checked",{"_index":2292,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.label",{"_index":2316,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.value",{"_index":2294,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["roleids",{"_index":3265,"title":{},"body":{"injectables/RolesService.html":{}}}],["roles",{"_index":2174,"title":{},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["roles'},{'name",{"_index":290,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["roles:roleids",{"_index":3269,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":2192,"title":{"injectables/RolesService.html":{}},"body":{"components/ManageRolesComponent.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["rolesservice.getbrandroles().then((roles:any",{"_index":2231,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolesservice.waitforinit((initstat:any",{"_index":2229,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rom",{"_index":4396,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["row",{"_index":4861,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["rows",{"_index":978,"title":{},"body":{"injectables/DashboardService.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["royalty",{"_index":4509,"title":{},"body":{"license.html":{}}}],["rules",{"_index":4404,"title":{},"body":{"license.html":{}}}],["run",{"_index":2304,"title":{},"body":{"components/ManageRolesComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["runfordev.sh",{"_index":3956,"title":{},"body":{"index.html":{}}}],["running",{"_index":4198,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["runs",{"_index":4165,"title":{},"body":{"license.html":{}}}],["runtemplate",{"_index":3609,"title":{},"body":{"injectables/UtilityService.html":{}}}],["runtemplate(data",{"_index":3641,"title":{},"body":{"injectables/UtilityService.html":{}}}],["rxjs",{"_index":1628,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["rxjs/add/observable/from",{"_index":2005,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/observable/interval",{"_index":854,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["rxjs/add/observable/of",{"_index":855,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["rxjs/add/observable/zip",{"_index":3132,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rxjs/add/operator/buffertime",{"_index":675,"title":{},"body":{"components/AsynchComponent.html":{}}}],["rxjs/add/operator/filter",{"_index":676,"title":{},"body":{"components/AsynchComponent.html":{}}}],["rxjs/add/operator/last",{"_index":2004,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/map",{"_index":83,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/add/operator/mergemap",{"_index":856,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/topromise",{"_index":84,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/observable",{"_index":672,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rxjs/observable/frompromise",{"_index":3134,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rxjs/subject",{"_index":674,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{}}}],["sacal",{"_index":3619,"title":{},"body":{"injectables/UtilityService.html":{}}}],["safest",{"_index":4660,"title":{},"body":{"license.html":{}}}],["sails",{"_index":3874,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide.html":{}}}],["sailshq/upgrade",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["sailsjs",{"_index":4758,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sake",{"_index":4027,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4519,"title":{},"body":{"license.html":{}}}],["same",{"_index":4012,"title":{},"body":{"license.html":{}}}],["sample",{"_index":4756,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sanitized",{"_index":3392,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["sanitizer",{"_index":3128,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl",{"_index":3124,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl(url",{"_index":3129,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl(url:string",{"_index":3151,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["sass",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["satisfy",{"_index":4340,"title":{},"body":{"license.html":{}}}],["save",{"_index":330,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["saveandopenworkspace",{"_index":3788,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["savebutton",{"_index":389,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["savebuttoncomponent",{"_index":329,"title":{"components/SaveButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["savecurrentuser",{"_index":2189,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savecurrentuser($event",{"_index":2200,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savecurrentuser($event:any",{"_index":2269,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["saved",{"_index":4865,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["savefirst",{"_index":3717,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["savemsg",{"_index":2183,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savemsgtype",{"_index":2184,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savenotes",{"_index":2723,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["saveres.status",{"_index":2280,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["saveresult",{"_index":2177,"title":{"classes/SaveResult.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["savesuccess",{"_index":4864,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["saying",{"_index":4336,"title":{},"body":{"license.html":{}}}],["schedule",{"_index":3853,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":4793,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["school",{"_index":4689,"title":{},"body":{"license.html":{}}}],["scope",{"_index":4568,"title":{},"body":{"license.html":{}}}],["screenshot",{"_index":2884,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["script",{"_index":4730,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["scripts",{"_index":4171,"title":{},"body":{"license.html":{}}}],["search",{"_index":313,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["search'},{'name",{"_index":311,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["search(params",{"_index":2922,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["search(term",{"_index":1625,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfields",{"_index":1643,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfieldstr",{"_index":1808,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfieldstr.split",{"_index":1809,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfilter",{"_index":2185,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["searchfiltername",{"_index":3172,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["searchfilters",{"_index":4826,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["searchfld",{"_index":1815,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfld}:${term",{"_index":1817,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchrecords",{"_index":955,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumber",{"_index":972,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumber:number",{"_index":1021,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchstr",{"_index":1636,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchstring",{"_index":1811,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchstring}${_.isempty(searchstring",{"_index":1816,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchurl",{"_index":1818,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordSearchParams.html":{}}}],["searchurl}?q=${this.basicsearch}&type=${this.recordtype}${refinervalues",{"_index":3013,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["secondarily",{"_index":4101,"title":{},"body":{"license.html":{}}}],["secretorkey",{"_index":4953,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["section",{"_index":4223,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["sections",{"_index":508,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["see",{"_index":1190,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["select",{"_index":1675,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["selectalllocations",{"_index":2724,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selectalllocations(checked",{"_index":2734,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selected",{"_index":1431,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["selected['originalobject",{"_index":1432,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["selectioncomponent",{"_index":433,"title":{"classes/SelectionComponent.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectioncomponent:147",{"_index":1217,"title":{},"body":{"components/DropdownFieldComponent.html":{},"components/SelectionFieldComponent.html":{}}}],["selectioncomponent:149",{"_index":1214,"title":{},"body":{"components/DropdownFieldComponent.html":{},"components/SelectionFieldComponent.html":{}}}],["selectionfield",{"_index":385,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectionfield'},{'name",{"_index":332,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selectionfieldcomponent",{"_index":331,"title":{"components/SelectionFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["selector",{"_index":123,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selector'},{'name",{"_index":249,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selector.component",{"_index":3323,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector.component.ts",{"_index":3775,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:12",{"_index":3778,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":3777,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["sell",{"_index":4533,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4518,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4083,"title":{},"body":{"license.html":{}}}],["send",{"_index":4887,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sending",{"_index":4884,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sendnotification",{"_index":1221,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["sendnotification(to",{"_index":1222,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["separable",{"_index":4347,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4286,"title":{},"body":{"license.html":{}}}],["separately",{"_index":4284,"title":{},"body":{"license.html":{}}}],["server",{"_index":3892,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["serves",{"_index":4158,"title":{},"body":{"license.html":{}}}],["service",{"_index":88,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["service.emitinit",{"_index":2104,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject",{"_index":2091,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject().subscribe(subtrackerfn(serviceidx",{"_index":2103,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.ts",{"_index":7,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:111",{"_index":3637,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:123",{"_index":3628,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:13",{"_index":37,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:140",{"_index":3646,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:158",{"_index":3644,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:188",{"_index":3615,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:198",{"_index":3640,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:202",{"_index":3642,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:22",{"_index":46,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:28",{"_index":3250,"title":{},"body":{"injectables/ReportService.html":{}}}],["service.ts:30",{"_index":964,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:32",{"_index":3439,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:33",{"_index":3440,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:34",{"_index":839,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:35",{"_index":837,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:36",{"_index":838,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:37",{"_index":835,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:38",{"_index":836,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:39",{"_index":840,"title":{},"body":{"classes/BaseService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:40",{"_index":834,"title":{},"body":{"classes/BaseService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{}}}],["service.ts:41",{"_index":833,"title":{},"body":{"classes/BaseService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:42",{"_index":1223,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["service.ts:43",{"_index":960,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:46",{"_index":899,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RolesService.html":{}}}],["service.ts:49",{"_index":3796,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["service.ts:51",{"_index":967,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:52",{"_index":896,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:56",{"_index":849,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:58",{"_index":900,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:59",{"_index":971,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:60",{"_index":851,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:64",{"_index":847,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:65",{"_index":3438,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:70",{"_index":844,"title":{},"body":{"classes/BaseService.html":{},"injectables/UtilityService.html":{}}}],["service.ts:71",{"_index":897,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:74",{"_index":841,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:77",{"_index":3437,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:80",{"_index":843,"title":{},"body":{"classes/BaseService.html":{},"injectables/DashboardService.html":{}}}],["service.ts:82",{"_index":3622,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:84",{"_index":842,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:86",{"_index":975,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:93",{"_index":845,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:94",{"_index":3633,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:98",{"_index":846,"title":{},"body":{"classes/BaseService.html":{}}}],["service:any",{"_index":2101,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicearr",{"_index":1550,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["serviceidx:any",{"_index":2094,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["serviceinst",{"_index":1966,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["serviceinst.getlookupdata(f",{"_index":1972,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["serviceinst:any",{"_index":2095,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicename",{"_index":1923,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["services",{"_index":829,"title":{},"body":{"classes/BaseService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"index.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["servicing",{"_index":4623,"title":{},"body":{"license.html":{}}}],["set",{"_index":528,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["setcurrentvalue",{"_index":3086,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["setcurrentvalue(value",{"_index":2981,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setdashboardtitle",{"_index":956,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setdashboardtitle(plantable",{"_index":976,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setemptyvalue",{"_index":2528,"title":{},"body":{"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setemptyvalue(updatetitle",{"_index":1714,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["setfacetvalues",{"_index":3069,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setfacetvalues(facets",{"_index":3045,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setloading",{"_index":1523,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["setloading(loading",{"_index":1543,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["setlookupservices(completerservice",{"_index":1720,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["setoid(o",{"_index":3750,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["setrecordtype",{"_index":1518,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrecordtype(rectype",{"_index":1533,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrefinerconfig",{"_index":3070,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setrefinerconfig(config",{"_index":2998,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setsavemessage",{"_index":2190,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setsavemessage(msg",{"_index":2202,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setsavemessage(msg:string",{"_index":2287,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setting",{"_index":1136,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["settings",{"_index":4851,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/enabled",{"_index":4894,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/from",{"_index":4895,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/templatedir",{"_index":4897,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settins",{"_index":4893,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["setup",{"_index":4740,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["setupeventhandlers",{"_index":1987,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setupeventhandlers(fieldmap",{"_index":2000,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setvalue(value",{"_index":1786,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectDataComponent.html":{}}}],["setvalue(value:any",{"_index":223,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setvalueatelem(index",{"_index":1392,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["several",{"_index":3949,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{}}}],["shadow.png",{"_index":2431,"title":{},"body":{"components/MapComponent.html":{}}}],["shadow.png\"})},circlemarker:false,circle:false",{"_index":2383,"title":{},"body":{"components/MapComponent.html":{}}}],["shadowurl",{"_index":2430,"title":{},"body":{"components/MapComponent.html":{}}}],["shall",{"_index":4227,"title":{},"body":{"license.html":{}}}],["share",{"_index":3926,"title":{},"body":{"index.html":{},"license.html":{}}}],["shared",{"_index":4177,"title":{},"body":{"license.html":{}}}],["shared/base",{"_index":87,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["shared/config",{"_index":1224,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["shared/dashboard",{"_index":3367,"title":{},"body":{"components/SortComponent.html":{}}}],["shared/form/records.service",{"_index":1565,"title":{},"body":{"components/ExportFormComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{}}}],["shared/loadable.component",{"_index":1563,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["shared/report",{"_index":3244,"title":{},"body":{"modules/ReportModule.html":{}}}],["shared/roles",{"_index":2219,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["shared/shared.module",{"_index":944,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["shared/translation",{"_index":1564,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["shared/user",{"_index":2127,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["shared/user.service",{"_index":2125,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["sharedmodule",{"_index":928,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["shilo",{"_index":188,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["short",{"_index":4674,"title":{},"body":{"license.html":{}}}],["show",{"_index":2350,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["showconfirmdlg",{"_index":533,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["showheader",{"_index":2620,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["showhistorytable:boolean",{"_index":2630,"title":{},"body":{"components/PDFListComponent.html":{}}}],["side",{"_index":828,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["sign",{"_index":1110,"title":{},"body":{"components/DmpFieldComponent.html":{},"license.html":{}}}],["significant",{"_index":4376,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4241,"title":{},"body":{"license.html":{}}}],["simple",{"_index":208,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["simple.component",{"_index":205,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simple.component.ts",{"_index":370,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["simple.component.ts:111",{"_index":3345,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:119",{"_index":3347,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:126",{"_index":3348,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:133",{"_index":3346,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:141",{"_index":3344,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:147",{"_index":3277,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:149",{"_index":3278,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:198",{"_index":1215,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:199",{"_index":1216,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:201",{"_index":1213,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:253",{"_index":3286,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:255",{"_index":3283,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:259",{"_index":3282,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:263",{"_index":3281,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:270",{"_index":3285,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:339",{"_index":3415,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:345",{"_index":3417,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:367",{"_index":3416,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:38",{"_index":3349,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:404",{"_index":2059,"title":{},"body":{"components/HtmlRawComponent.html":{}}}],["simple.component.ts:42",{"_index":3351,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:429",{"_index":3421,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:430",{"_index":3420,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:46",{"_index":3350,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:479",{"_index":3274,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:481",{"_index":3272,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:489",{"_index":3273,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:493",{"_index":3271,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:497",{"_index":3270,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:50",{"_index":3352,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:534",{"_index":887,"title":{},"body":{"components/CancelButtonComponent.html":{}}}],["simple.component.ts:54",{"_index":3354,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:548",{"_index":377,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:550",{"_index":376,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:554",{"_index":374,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:56",{"_index":3353,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:576",{"_index":3409,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:582",{"_index":3412,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:591",{"_index":3411,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:598",{"_index":3413,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:60",{"_index":3340,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:607",{"_index":3410,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:633",{"_index":2060,"title":{},"body":{"components/LinkValueComponent.html":{}}}],["simple.component.ts:64",{"_index":3339,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:648",{"_index":2058,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["simple.component.ts:69",{"_index":3342,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:699",{"_index":1029,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:701",{"_index":1028,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:703",{"_index":1026,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:711",{"_index":1025,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:726",{"_index":2679,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:728",{"_index":2678,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:735",{"_index":2677,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:74",{"_index":3341,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:758",{"_index":3377,"title":{},"body":{"components/SpacerComponent.html":{}}}],["simple.component.ts:773",{"_index":3422,"title":{},"body":{"components/ToggleComponent.html":{}}}],["simple.component.ts:81",{"_index":3343,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.ts",{"_index":3551,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:35",{"_index":3579,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:36",{"_index":3580,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:37",{"_index":3562,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:43",{"_index":3568,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:49",{"_index":3571,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:56",{"_index":3569,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:62",{"_index":3576,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:68",{"_index":3564,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:74",{"_index":3566,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:80",{"_index":3573,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:86",{"_index":3578,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:92",{"_index":3567,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:98",{"_index":3574,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simplecomponent",{"_index":121,"title":{"classes/SimpleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:111",{"_index":179,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:119",{"_index":184,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:126",{"_index":190,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:133",{"_index":182,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:141",{"_index":175,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:38",{"_index":150,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:42",{"_index":155,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:46",{"_index":152,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:50",{"_index":157,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:54",{"_index":161,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:56",{"_index":160,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:60",{"_index":201,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:64",{"_index":198,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:69",{"_index":204,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:74",{"_index":202,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:81",{"_index":169,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simultaneously",{"_index":4587,"title":{},"body":{"license.html":{}}}],["single",{"_index":4560,"title":{},"body":{"license.html":{}}}],["skipclone",{"_index":1265,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["skipper",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["skipping",{"_index":3655,"title":{},"body":{"injectables/UtilityService.html":{}}}],["skipvalidationonsave",{"_index":4846,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["smart",{"_index":3888,"title":{},"body":{"dependencies.html":{}}}],["socketres",{"_index":780,"title":{},"body":{"components/AsynchComponent.html":{}}}],["sockets",{"_index":3880,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1171,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["sold",{"_index":4359,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4207,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4220,"title":{},"body":{"license.html":{}}}],["solr",{"_index":4815,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["solrquery",{"_index":3232,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{}}}],["sort",{"_index":970,"title":{},"body":{"injectables/DashboardService.html":{},"components/SortComponent.html":{}}}],["sort'},{'name",{"_index":334,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["sort.component",{"_index":941,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sort.html",{"_index":3356,"title":{},"body":{"components/SortComponent.html":{}}}],["sort:string=undefined",{"_index":997,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sort:this.sort",{"_index":3375,"title":{},"body":{"components/SortComponent.html":{}}}],["sort=${sort",{"_index":1006,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sortchanged",{"_index":3360,"title":{},"body":{"components/SortComponent.html":{}}}],["sortclicked",{"_index":3357,"title":{},"body":{"components/SortComponent.html":{}}}],["sortcomponent",{"_index":333,"title":{"components/SortComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"index.html":{},"license.html":{}}}],["sourcedata",{"_index":1638,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["sourcetype",{"_index":1645,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["spacer",{"_index":393,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["spacer'},{'name",{"_index":336,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["spacercomponent",{"_index":335,"title":{"components/SpacerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["span",{"_index":2866,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["spare",{"_index":4315,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3987,"title":{},"body":{"license.html":{}}}],["special",{"_index":4067,"title":{},"body":{"license.html":{}}}],["specif",{"_index":4779,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["specific",{"_index":2823,"title":{},"body":{"classes/RbValidator.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["specific_backend_message",{"_index":3450,"title":{},"body":{"injectables/TranslationService.html":{}}}],["specifically",{"_index":4181,"title":{},"body":{"license.html":{}}}],["specified",{"_index":4148,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["specifies",{"_index":4605,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["specify",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["spinnerelem",{"_index":1514,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["spirit",{"_index":4599,"title":{},"body":{"license.html":{}}}],["splitarraystringstoarray",{"_index":3610,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitarraystringstoarray(data",{"_index":3643,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splits",{"_index":3616,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray",{"_index":3611,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray(data",{"_index":3645,"title":{},"body":{"injectables/UtilityService.html":{}}}],["srcfld",{"_index":1696,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["stage",{"_index":4800,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stagelabel",{"_index":4833,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stages",{"_index":4811,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stand",{"_index":4053,"title":{},"body":{"license.html":{}}}],["standard",{"_index":4144,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["standards",{"_index":4147,"title":{},"body":{"license.html":{}}}],["start",{"_index":796,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/DashboardService.html":{},"classes/LoadableComponent.html":{},"injectables/ReportService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["started",{"_index":711,"title":{"index.html":{},"license.html":{}},"body":{"components/AsynchComponent.html":{}}}],["startedbylabel",{"_index":688,"title":{},"body":{"components/AsynchComponent.html":{}}}],["starting",{"_index":4836,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["startlisten",{"_index":647,"title":{},"body":{"components/AsynchComponent.html":{}}}],["starts",{"_index":4675,"title":{},"body":{"license.html":{}}}],["startswith:string",{"_index":2629,"title":{},"body":{"components/PDFListComponent.html":{}}}],["startup",{"_index":4743,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["state",{"_index":963,"title":{},"body":{"injectables/DashboardService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["state:string",{"_index":983,"title":{},"body":{"injectables/DashboardService.html":{}}}],["state=${state",{"_index":987,"title":{},"body":{"injectables/DashboardService.html":{}}}],["stated",{"_index":4193,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4453,"title":{},"body":{"license.html":{}}}],["states",{"_index":4062,"title":{},"body":{"license.html":{}}}],["static",{"_index":13,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["stating",{"_index":4263,"title":{},"body":{"license.html":{}}}],["status",{"_index":546,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"license.html":{}}}],["status.empty",{"_index":2846,"title":{},"body":{"classes/RbValidator.html":{}}}],["status.emptyfields.push(f",{"_index":2845,"title":{},"body":{"classes/RbValidator.html":{}}}],["statuslabel",{"_index":685,"title":{},"body":{"components/AsynchComponent.html":{}}}],["step",{"_index":3358,"title":{},"body":{"components/SortComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["step:this.step",{"_index":3376,"title":{},"body":{"components/SortComponent.html":{}}}],["steps",{"_index":4017,"title":{},"body":{"license.html":{}}}],["stepto(oid",{"_index":2903,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["steptotab",{"_index":3408,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["steptotab(step",{"_index":569,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stop",{"_index":799,"title":{},"body":{"components/AsynchComponent.html":{}}}],["storage",{"_index":4293,"title":{},"body":{"license.html":{}}}],["stored",{"_index":4789,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["storelabelonly",{"_index":1650,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["street",{"_index":1200,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["strength",{"_index":3509,"title":{},"body":{"interfaces/UserForm.html":{}}}],["string",{"_index":44,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["string=null",{"_index":420,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stringlabeltofield",{"_index":1648,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["stringtemplate",{"_index":3379,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["stringtemplate:item",{"_index":3155,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["stringtemplatepipe",{"_index":3291,"title":{"pipes/StringTemplatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["structure",{"_index":4765,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["structured",{"_index":4878,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["structures",{"_index":4799,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["styles",{"_index":3494,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["styling",{"_index":4860,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["subclass",{"_index":172,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["subdividing",{"_index":4501,"title":{},"body":{"license.html":{}}}],["subdomains",{"_index":2405,"title":{},"body":{"components/MapComponent.html":{}}}],["subfield:string",{"_index":592,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["subject",{"_index":673,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["subjects",{"_index":893,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sublicenses",{"_index":4529,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4222,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4854,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["submitting",{"_index":213,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["subprograms",{"_index":4180,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4691,"title":{},"body":{"license.html":{}}}],["subs",{"_index":871,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["subs.length",{"_index":2098,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subscribe",{"_index":1804,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["subscribe((res:any",{"_index":912,"title":{},"body":{"injectables/ConfigService.html":{}}}],["subscribetoasyncprogress(oid",{"_index":2962,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["subscription",{"_index":3952,"title":{},"body":{"index.html":{}}}],["subsection",{"_index":4324,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4371,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4051,"title":{},"body":{"license.html":{}}}],["subtracker",{"_index":2092,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.loaded[`${serviceidx",{"_index":2096,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx",{"_index":2102,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx}`].unsubscribe",{"_index":2099,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtrackerfn",{"_index":2093,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["success",{"_index":1285,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RecordActionResult.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["success:boolean",{"_index":2967,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["successful",{"_index":526,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["successfully",{"_index":4866,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["successobs",{"_index":538,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["successobs.subscribe",{"_index":545,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["such",{"_index":4007,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["sue",{"_index":4543,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4381,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1765,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["suit",{"_index":4801,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["super",{"_index":482,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":102,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["super(options",{"_index":216,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["super.addelem(val",{"_index":1445,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["super.createformmodel",{"_index":3765,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["supplement",{"_index":4410,"title":{},"body":{"license.html":{}}}],["support",{"_index":3951,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["supported",{"_index":1738,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{}}}],["supportedlanguages",{"_index":3462,"title":{},"body":{"injectables/TranslationService.html":{}}}],["supports",{"_index":3923,"title":{},"body":{"index.html":{},"license.html":{}}}],["sure",{"_index":2835,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["surrender",{"_index":4003,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4452,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4636,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4698,"title":{},"body":{"modules.html":{}}}],["swap(fromidx",{"_index":1383,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["switch",{"_index":1977,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["synchloading",{"_index":1524,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["system",{"_index":3940,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["systematic",{"_index":4041,"title":{},"body":{"license.html":{}}}],["systemd",{"_index":4744,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["systemjs",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":3432,"title":{},"body":{"injectables/TranslationService.html":{}}}],["t(key",{"_index":3436,"title":{},"body":{"injectables/TranslationService.html":{}}}],["tab",{"_index":338,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tab.expandedchar",{"_index":478,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.id",{"_index":491,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.label",{"_index":476,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab[\"expandedchar",{"_index":487,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab['expandedchar",{"_index":485,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontainer",{"_index":475,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontainer'},{'name",{"_index":341,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tabid",{"_index":490,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbutton",{"_index":392,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbuttoncomponent",{"_index":337,"title":{"components/TabNavButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["taboraccordioncontainer",{"_index":479,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainer,parameterretrieverfield",{"_index":391,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainercomponent",{"_index":340,"title":{"components/TabOrAccordionContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["take",{"_index":1093,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["takes",{"_index":4760,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["tangible",{"_index":4353,"title":{},"body":{"license.html":{}}}],["target=\"#pdfhistorymodal",{"_index":2669,"title":{},"body":{"components/PDFListComponent.html":{}}}],["targetaction",{"_index":211,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["targetfld",{"_index":1697,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["targetprogress",{"_index":801,"title":{},"body":{"components/AsynchComponent.html":{}}}],["targetstep",{"_index":2894,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["targetval",{"_index":586,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["targetval.push(tval",{"_index":595,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tasks",{"_index":680,"title":{},"body":{"components/AsynchComponent.html":{}}}],["tasktype",{"_index":695,"title":{},"body":{"components/AsynchComponent.html":{}}}],["technological",{"_index":4230,"title":{},"body":{"license.html":{}}}],["tells",{"_index":4133,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1385,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["template(args",{"_index":3407,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templatedata",{"_index":3697,"title":{},"body":{"injectables/UtilityService.html":{}}}],["templatedir",{"_index":4888,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["templates",{"_index":4889,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["templatestring",{"_index":3382,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templateurl",{"_index":639,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["templating",{"_index":4915,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["term",{"_index":1627,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["terminal",{"_index":4673,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4458,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4479,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4467,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4455,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1176,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["term}}).map((res",{"_index":1795,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["test",{"_index":3510,"title":{},"body":{"interfaces/UserForm.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["text",{"_index":297,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["text_",{"_index":4820,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_description",{"_index":4827,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_title",{"_index":4822,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textarea",{"_index":2576,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textareacomponent",{"_index":342,"title":{"components/TextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["textblockcomponent",{"_index":343,"title":{"components/TextBlockComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textblockcomponent,markdowntextareacomponent",{"_index":3335,"title":{},"body":{"modules/SharedModule.html":{}}}],["textbox",{"_index":1658,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield",{"_index":2034,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield'},{'name",{"_index":324,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["textfield.component",{"_index":3300,"title":{},"body":{"modules/SharedModule.html":{}}}],["textfield.component.ts",{"_index":2557,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield.component.ts:169",{"_index":3227,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:172",{"_index":3225,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:175",{"_index":3224,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:179",{"_index":3226,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:225",{"_index":3419,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:227",{"_index":3418,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:257",{"_index":2562,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfield.component.ts:259",{"_index":2560,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfieldcomponent",{"_index":345,"title":{"components/TextFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["that's",{"_index":3398,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["that.accessdeniedobjects.push(meta",{"_index":3145,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.changeref.detectchanges",{"_index":488,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.failedobjects.push(meta",{"_index":3141,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:false",{"_index":493,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:true",{"_index":489,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.relatedrecordid",{"_index":764,"title":{},"body":{"components/AsynchComponent.html":{}}}],["that.field.setvalue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldmap._rootcomp.oid",{"_index":236,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.field.submitting",{"_index":235,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.fieldmap._rootcomp.onsubmit().subscribe",{"_index":237,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.initialised",{"_index":2485,"title":{},"body":{"components/MapComponent.html":{}}}],["that.initmap(map",{"_index":2479,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layergeojson",{"_index":2498,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layers.push(layer",{"_index":2497,"title":{},"body":{"components/MapComponent.html":{}}}],["that.map.fitbounds(that.drawnitems.getbounds",{"_index":2532,"title":{},"body":{"components/MapComponent.html":{}}}],["that.relatedobjects.push(meta",{"_index":3147,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.setvalue(that.layergeojson",{"_index":2500,"title":{},"body":{"components/MapComponent.html":{}}}],["that.startlisten",{"_index":766,"title":{},"body":{"components/AsynchComponent.html":{}}}],["that.tabid",{"_index":2478,"title":{},"body":{"components/MapComponent.html":{}}}],["that2",{"_index":2503,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers.push(layer",{"_index":2511,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers[layerindex",{"_index":2512,"title":{},"body":{"components/MapComponent.html":{}}}],["that[key",{"_index":1369,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["then((res",{"_index":109,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["then((res:any",{"_index":1024,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["then((res:loginresult",{"_index":2145,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["then(function",{"_index":234,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["then(this.extractdata",{"_index":1231,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["there's",{"_index":3635,"title":{},"body":{"injectables/UtilityService.html":{}}}],["therefore",{"_index":3465,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["thereof",{"_index":173,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["thi",{"_index":1132,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["things",{"_index":3995,"title":{},"body":{"license.html":{}}}],["third",{"_index":4256,"title":{},"body":{"license.html":{}}}],["this.accessdeniedobjects",{"_index":2632,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.activerefiners",{"_index":2987,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activerefiners.push(refiner",{"_index":3022,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activevalue",{"_index":2982,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(config",{"_index":3038,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(refinerconfig",{"_index":3006,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addbuttonclass",{"_index":1286,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontext",{"_index":1275,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontextclass",{"_index":1283,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addelem(entry",{"_index":1409,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addrendercompleteelement(form.fields",{"_index":2889,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.alwaysactive",{"_index":2979,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.app['_injector",{"_index":1120,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.applink",{"_index":3735,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.applyeditnotesbuttontext",{"_index":2766,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.arrayproperty",{"_index":1798,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.baseurl",{"_index":865,"title":{},"body":{"classes/BaseService.html":{}}}],["this.baseurl}/${this.config.branding}/${this.config.portal",{"_index":868,"title":{},"body":{"classes/BaseService.html":{}}}],["this.basicsearch",{"_index":2990,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl",{"_index":867,"title":{},"body":{"classes/BaseService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.brandingandportalurl}/${this.config.collectionrooturi}/${collectionid}/?search",{"_index":1855,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.mintrooturi}/${source}/?search",{"_index":1860,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.userrooturi}/?source=${searchsource}&name",{"_index":1857,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.vocabrooturl}/${vocabid",{"_index":1849,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/admin/getreportresults?name=`+name+`&start=`+start+`&rows=`+rows",{"_index":3256,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.brandingandportalurl}/dashboard/${rectype",{"_index":2906,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/external/vocab/${provider",{"_index":1862,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/listrecords?recordtype=${recordtype}&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":985,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.brandingandportalurl}/record/form/${recordtype}?edit=${editable}&ts=${ts",{"_index":2874,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/record/form/auto/${oid}?edit=${editable}&ts=${ts",{"_index":2873,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.canceleditnotesbuttontext",{"_index":2764,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.cansort",{"_index":1440,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.changeref.detectchanges",{"_index":564,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.checkifhasloaded",{"_index":1585,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["this.classes",{"_index":2008,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.classes[f.class",{"_index":1934,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp",{"_index":1951,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp[0",{"_index":1950,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].meta(f.definition",{"_index":1936,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.clname].lookupservice",{"_index":1965,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.clear",{"_index":2988,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.clname",{"_index":1430,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.cols",{"_index":2574,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.columns",{"_index":2634,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.columntitle",{"_index":3178,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.comparefn.bind(this",{"_index":448,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.completerservice",{"_index":1721,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completerservice.local(this.sourcedata",{"_index":1730,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completerservice.remote(url",{"_index":1745,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completionlabel",{"_index":723,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.completionratetype",{"_index":699,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.component",{"_index":1717,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.component.ngcompleter",{"_index":1718,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.component.ngcompleter.ctrinput.nativeelement.value",{"_index":1719,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.componentfactoryresolver",{"_index":1114,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.field.compclass",{"_index":1117,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.config",{"_index":864,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["this.config.baseurl",{"_index":866,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.branding",{"_index":3585,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config.csrftoken",{"_index":884,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.maxsearchrowsperpage",{"_index":1022,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.maxtransferrowsperpage",{"_index":979,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.portal",{"_index":3587,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config['csrftoken",{"_index":913,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configservice",{"_index":860,"title":{},"body":{"classes/BaseService.html":{},"injectables/FieldControlMetaService.html":{}}}],["this.configservice.getconfig((config:any",{"_index":863,"title":{},"body":{"classes/BaseService.html":{}}}],["this.controltype",{"_index":1657,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.converttoitem(mintdataitem",{"_index":1823,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.coordinateshelp",{"_index":2465,"title":{},"body":{"components/MapComponent.html":{}}}],["this.coordinateshelpshow",{"_index":2552,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createnewelem(basefield",{"_index":1329,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.createnewelem(this.fields[0",{"_index":1372,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.criteria",{"_index":742,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.csrftoken",{"_index":908,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cssclasses",{"_index":2565,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.currentuser",{"_index":2260,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.newroles",{"_index":2262,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.roles",{"_index":2281,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.rolestr",{"_index":2283,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.dashboardservice",{"_index":3181,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dashboardservice.getallrecordscanedit(this.recordtype,'').then((draftplans",{"_index":3183,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dataservice",{"_index":1729,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.datecompletedlabel",{"_index":712,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.dateformat",{"_index":732,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.datepickeropts",{"_index":1569,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.datestartedlabel",{"_index":708,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.defaultdrawoptions",{"_index":2433,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultleafletoptions",{"_index":2439,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultvalue",{"_index":2568,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.delegateerrorhandling",{"_index":1299,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.disabled",{"_index":1092,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.disabledelements",{"_index":1075,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.disableeditafterselect",{"_index":1676,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.disableinput",{"_index":1885,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.doaction",{"_index":532,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.document.location.href",{"_index":2150,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.drawlayers",{"_index":2525,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitems",{"_index":2416,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitems.clearlayers",{"_index":2518,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawoptions",{"_index":2455,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editingnotes",{"_index":2806,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editingnotes.notes",{"_index":2812,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editmode",{"_index":2473,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editnotesbuttontext",{"_index":2760,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotescssclasses",{"_index":2769,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotestitle",{"_index":2762,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.emitconfig",{"_index":905,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.emitinit",{"_index":870,"title":{},"body":{"classes/BaseService.html":{}}}],["this.expandcollapseall",{"_index":497,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.extractdata(res",{"_index":110,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.failedobjects",{"_index":2633,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.fb.group",{"_index":2133,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.fcmetaservice.getfieldsmeta(fieldsarr",{"_index":2022,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getfieldsmeta(form.fields",{"_index":2891,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.fcmetaservice.getlookupdata(fields",{"_index":2023,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getlookupdata(form.fieldsmeta).flatmap((fields:any",{"_index":2861,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.field",{"_index":408,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.addelem",{"_index":1423,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.additionaldata",{"_index":543,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.allexpanded",{"_index":496,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.applink}${this.field.workspaceapp.name}/edit?rdmp=${this.field.rdmp",{"_index":3790,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.closeonsave",{"_index":547,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.component",{"_index":1867,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.confirmationmessage",{"_index":530,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.controltype",{"_index":458,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.currenttab",{"_index":563,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.disableeditafterselect",{"_index":1878,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.editmode",{"_index":609,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.expandaccordionsonopen",{"_index":495,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.fieldmap._rootcomp.getsubscription('recordcreated",{"_index":759,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.fieldmap._rootcomp.oid",{"_index":233,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{}}}],["this.field.fieldmap._rootcomp.subscribe('recordcreated",{"_index":762,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.fields.length",{"_index":1484,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].basemargintop",{"_index":1474,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].componentreactors.push(this",{"_index":1475,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].margintop",{"_index":1473,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0]['showheader",{"_index":1472,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[i].margintop",{"_index":1493,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].basemargintop",{"_index":1495,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].margintop",{"_index":1494,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.filteredplans",{"_index":3208,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.filteredplans.length",{"_index":3209,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.formatvalue(this.getformcontrol().value",{"_index":615,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formatvaluefordisplay",{"_index":2582,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.formmodel",{"_index":425,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.haserror('required",{"_index":427,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1897,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.formmodel.touched",{"_index":426,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.getcontrol(name",{"_index":410,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettabid(step",{"_index":570,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettabs",{"_index":558,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettitle(this.field.value",{"_index":1899,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.groupclasses",{"_index":422,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.init",{"_index":3786,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.initmap(this.field.map",{"_index":2551,"title":{},"body":{"components/MapComponent.html":{}}}],["this.field.isdelete",{"_index":539,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.isdisabledfn",{"_index":553,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.label",{"_index":611,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.latestpdf",{"_index":2651,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.listentype",{"_index":778,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.name",{"_index":406,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onchange.updateconf",{"_index":597,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onitemselect.emit(selected['originalobject",{"_index":1879,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.options['disabledexpression",{"_index":1079,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.pdfattachments.push(attachment",{"_index":2657,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.pdfattachments.sort(function",{"_index":2660,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.progressarr",{"_index":794,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.progressarr.push(progress",{"_index":798,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.publishparametervalue(paramvalue",{"_index":622,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.recordservice.executeaction(this.field.targetaction,{oid",{"_index":232,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.recordsservice.getasyncprogress(fq).then(progressarr",{"_index":773,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.getattachments(oid",{"_index":2644,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${location",{"_index":2805,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${oid}/datastream?datastreamid=${attachment.label",{"_index":2667,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(`${this.field.relatedrecordid",{"_index":786,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(progress.id",{"_index":779,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(this.field.relatedrecordid",{"_index":785,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.redirectlocation",{"_index":549,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.registerevents",{"_index":3787,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.relatedrecordid",{"_index":753,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.removeelem(i",{"_index":1425,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.required",{"_index":430,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.restricttoselection",{"_index":1896,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.searchfiltername",{"_index":3206,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.setfieldmapentry(this.fieldmap",{"_index":1139,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.field.setvalue(null",{"_index":1890,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(selected.title",{"_index":1883,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(selected['originalobject",{"_index":1884,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1894,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.submitting",{"_index":231,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.swap(i",{"_index":1492,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.targetstep",{"_index":541,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.tasktype",{"_index":787,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.value",{"_index":2803,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.value[this.editingnotes.index].notes",{"_index":2811,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.fieldanchor",{"_index":1081,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.clear",{"_index":1115,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.createcomponent(compfactory",{"_index":1119,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap",{"_index":407,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp",{"_index":3708,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.delete",{"_index":540,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.fields",{"_index":2481,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.getfieldwithid(this.maintabid",{"_index":2480,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(focustabid",{"_index":568,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(tabid",{"_index":571,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.oid",{"_index":2641,"title":{},"body":{"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit().subscribe(response",{"_index":3789,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(null",{"_index":544,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(this.field.targetstep",{"_index":542,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.recordcreated.subscribe(this.setoid.bind(this",{"_index":3748,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.recordsaved.subscribe(this.setoid.bind(this",{"_index":3749,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.relatedrecordid",{"_index":2712,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(null",{"_index":3195,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(record.oid",{"_index":3191,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(this.value.oid",{"_index":3197,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.isdisabledfn",{"_index":554,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.onclick_rootfn",{"_index":552,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap[this.field.name].instance",{"_index":1141,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldnames",{"_index":1669,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.fields",{"_index":1321,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields.length",{"_index":1417,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields.push(newelem",{"_index":1375,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0",{"_index":1319,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].createformmodel",{"_index":1308,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].getgroup(grp",{"_index":1307,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].isgroup",{"_index":1303,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setmissingfields(val",{"_index":1444,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setvalue(null",{"_index":1416,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[fromidx",{"_index":1387,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(selected",{"_index":1433,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(value",{"_index":1443,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].setvalue(value",{"_index":1393,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[toidx",{"_index":1386,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.filteredplans",{"_index":3199,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.filteredusers",{"_index":2256,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.flattenfields(f.fields",{"_index":1959,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.flattenfields(fields",{"_index":1961,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.forceclone",{"_index":1281,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.form",{"_index":1076,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/LocalAuthComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.controls",{"_index":1077,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.controls['username'].haserror('required",{"_index":2154,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.controls[this.field.name].valid",{"_index":1078,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.status",{"_index":2138,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.value.password",{"_index":2144,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.valuechanges.subscribe(data",{"_index":2136,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.formatdates(this.extractdata(res",{"_index":995,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formatdates(this.extractdata(res))as",{"_index":981,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formmodel",{"_index":1313,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.at(fromidx",{"_index":1390,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.at(toidx",{"_index":1388,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.controls.length",{"_index":1408,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.markasdirty",{"_index":2778,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.formmodel.markastouched",{"_index":228,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.patchvalue(this.layergeojson",{"_index":2527,"title":{},"body":{"components/MapComponent.html":{}}}],["this.formmodel.patchvalue(value",{"_index":224,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.push(newformmodel",{"_index":1378,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.removeat(index",{"_index":1382,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(fromidx",{"_index":1391,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(toidx",{"_index":1389,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setvalidators([validators.required",{"_index":1710,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.formmodel.setvalue(null",{"_index":1715,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.formmodel.setvalue(value",{"_index":1787,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["this.generatetemplatestring(templatestring",{"_index":3406,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["this.getclonecustomizer",{"_index":1354,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.getclonecustomizer(f",{"_index":1362,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.getcompleterdescription(data",{"_index":1833,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.geterrors",{"_index":2140,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.getfieldsmeta(f.definition.fields",{"_index":1955,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getfieldvaluepair(fldname",{"_index":1778,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.getformcontrol",{"_index":468,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformcontrol().setvalue(targetval",{"_index":596,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformfields(recordtype",{"_index":2878,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getformfieldsmeta(recordtype",{"_index":2859,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getfrominjector(dashboardservice",{"_index":3182,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.getfrominjector(recordsservice",{"_index":220,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.getfrominjector(workspacetypeservice",{"_index":3721,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.getinjectedservice('configservice').config",{"_index":1940,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice('utilityservice",{"_index":1938,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice(lookupservicename",{"_index":1967,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getoptions(headersobj",{"_index":885,"title":{},"body":{"classes/BaseService.html":{}}}],["this.getoptionsclient",{"_index":869,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UserSimpleService.html":{}}}],["this.getoptionsclient()).topromise",{"_index":2909,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getpropertyfromobject(data",{"_index":3662,"title":{},"body":{"injectables/UtilityService.html":{}}}],["this.getrefinerconfig(name",{"_index":3036,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettargetstepparam(targetstep",{"_index":2896,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettitle(data",{"_index":1728,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettitle(this.value",{"_index":1706,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettitle(value",{"_index":1788,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettranslated(`${this.options.statuslabel",{"_index":749,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(option['label",{"_index":3733,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options.coordinateshelp",{"_index":2466,"title":{},"body":{"components/MapComponent.html":{}}}],["this.gettranslated(options['applyeditnotesbuttontext",{"_index":2767,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['canceleditnotesbuttontext",{"_index":2765,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['completionlabel",{"_index":725,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['datecompletedlabel",{"_index":714,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['datestartedlabel",{"_index":710,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['editnotesbuttontext",{"_index":2761,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['editnotestitle",{"_index":2763,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['lastupdatelabel",{"_index":729,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['locationheader",{"_index":2774,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['messagelabel",{"_index":721,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['namelabel",{"_index":704,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['notesheader",{"_index":2776,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['open",{"_index":3723,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['savefirst",{"_index":3726,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['startedbylabel",{"_index":718,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['statuslabel",{"_index":707,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['typeheader",{"_index":2772,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.geturlparameter('focustabid",{"_index":566,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.geturlparameter(this.field.parametername",{"_index":620,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.googlehybrid",{"_index":2445,"title":{},"body":{"components/MapComponent.html":{}}}],["this.googlemaps",{"_index":2436,"title":{},"body":{"components/MapComponent.html":{}}}],["this.groupname",{"_index":1336,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasclearbutton",{"_index":1568,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.hasgroup",{"_index":1274,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasloaded",{"_index":2079,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.haslookup",{"_index":1654,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.hasrequirederror",{"_index":423,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.hasvalue",{"_index":3112,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.helpshow",{"_index":428,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.hideconfirmdlg",{"_index":550,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.http",{"_index":859,"title":{},"body":{"classes/BaseService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.delete(`${this.brandingandportalurl}/record/delete/${oid",{"_index":2966,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${searchurl",{"_index":1907,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.get(`${searchurl}`).map((res",{"_index":1820,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.get(`${this.baseurl}/user/info",{"_index":3581,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/getreport?name=`+name",{"_index":3252,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/roles/get",{"_index":3267,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/users/get",{"_index":3591,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/ands/vocab/resourcedetails?uri=${uri}&vocab=${vocab",{"_index":106,"title":{},"body":{"injectables/ANDSService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/asynch?fq=${fq",{"_index":2961,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?${recordtype}${packagetype}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":1009,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":980,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":994,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":992,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/${oid}/attachments",{"_index":2908,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/metadata/`+oid",{"_index":2955,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/search/${params.recordtype}/?searchstr=${params.basicsearch}${refinedsearchstr",{"_index":2947,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/type",{"_index":2951,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/type/${name",{"_index":2949,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/wfsteps/${name",{"_index":2953,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/searchplans?start=${start}&rows=${rows}&query=${basicsearch}&facets=${facets}&ts=${moment().unix",{"_index":1023,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/transferconfig/${recordtype",{"_index":2921,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/workspaces/types",{"_index":3797,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["this.http.get(`/csrftoken`).mergemap((csrfres:any",{"_index":907,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`/dynamic/apiclientconfig?v=${new",{"_index":910,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(url",{"_index":988,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["this.http.post(`${this.baseurl}/user/login_local",{"_index":3588,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/action/${action",{"_index":2958,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/roles/user",{"_index":3268,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/genkey",{"_index":3595,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/newuser",{"_index":3594,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/revokekey",{"_index":3596,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/update",{"_index":3592,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/api/sendnotification",{"_index":1230,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/editors/modify",{"_index":2911,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/responsibility/update",{"_index":2917,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/workflow/step/${targetstep}/${oid",{"_index":2904,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/recordmeta/${recordtype",{"_index":2895,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/genkey",{"_index":3598,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/revokekey",{"_index":3599,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/update",{"_index":3597,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(this.url,{options:{query",{"_index":1794,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.put(`${this.brandingandportalurl}/recordmeta/${oid",{"_index":2899,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.importdatastring",{"_index":2533,"title":{},"body":{"components/MapComponent.html":{}}}],["this.importfailed",{"_index":2534,"title":{},"body":{"components/MapComponent.html":{}}}],["this.index",{"_index":416,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.initconfig",{"_index":903,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.initialvalue",{"_index":1707,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.initlookupdata",{"_index":1713,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.initsubject",{"_index":861,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.next(this",{"_index":873,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.subscribe(handler",{"_index":872,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubs",{"_index":2228,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.initsubs.unsubscribe",{"_index":2230,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.inittranslator",{"_index":3441,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.inittranslator(translationservice",{"_index":1575,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["this.injector",{"_index":1348,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.injector.get(token",{"_index":432,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.isembedded",{"_index":1128,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.islistening",{"_index":768,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.isloading",{"_index":2075,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.islogindisabled",{"_index":2137,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lastupdatelabel",{"_index":727,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.layergeojson",{"_index":2461,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layers",{"_index":2521,"title":{},"body":{"components/MapComponent.html":{}}}],["this.leafletoptions",{"_index":2447,"title":{},"body":{"components/MapComponent.html":{}}}],["this.lines",{"_index":2579,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.listentype",{"_index":736,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.loaded",{"_index":1870,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.locale",{"_index":751,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.locationheader",{"_index":2773,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.locationservice.prepareexternalurl(`export/record/download/csv?before=${before}&after=${after}&rectype=${this.record_type",{"_index":1592,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.loginmessage",{"_index":2152,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lookupservice",{"_index":1722,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getcollectionrooturl(this.vocabid",{"_index":1732,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getexternalserviceurl(this.provider",{"_index":1751,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getmintrooturl(this.vocabid",{"_index":1747,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getuserlookupurl",{"_index":1733,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.http",{"_index":1749,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.maintabid",{"_index":2463,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map",{"_index":2468,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterdrawoptions",{"_index":2458,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterleafletoptions",{"_index":2454,"title":{},"body":{"components/MapComponent.html":{}}}],["this.messagelabel",{"_index":719,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.modafter",{"_index":1590,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.modbefore",{"_index":1586,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.movedownbuttonclass",{"_index":1297,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.moveupbuttonclass",{"_index":1293,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.name",{"_index":405,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.namelabel",{"_index":702,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.newlocation",{"_index":2781,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.next(matches",{"_index":1803,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.notesheader",{"_index":2775,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.onapplyfilter.emit(this.refinerconfig",{"_index":3114,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.onfilterchange",{"_index":2310,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.onremovebtnclick.emit([event",{"_index":1419,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.onstart.bind(this",{"_index":789,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onstop.bind(this",{"_index":791,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onupdate.bind(this",{"_index":793,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onvalueupdate.emit(data",{"_index":2710,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{}}}],["this.open",{"_index":3722,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.options",{"_index":107,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.options['disabledexpression",{"_index":2708,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.origdisabledexpr",{"_index":2705,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.parametername",{"_index":3053,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.parentid",{"_index":1126,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.pdfattachments",{"_index":2639,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.placeholder",{"_index":1673,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.plans",{"_index":3184,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.populateformgroup(field.fields",{"_index":2020,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.populateformgroup(fields",{"_index":2010,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.provider",{"_index":1686,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.rdmp",{"_index":3728,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.record_type",{"_index":1583,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordservice",{"_index":219,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.recordsservice",{"_index":747,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.recordsservice.getalltypes().then((typeconfs",{"_index":1578,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(data",{"_index":3056,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(record",{"_index":2791,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.recordsservice.getrecordmeta(this.value).then(data",{"_index":2709,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.recordtype",{"_index":2986,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.rectypenames",{"_index":1579,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames.push(typeconf.name",{"_index":1582,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames[0",{"_index":1584,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.refinerconfig",{"_index":2999,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.refinerconfig.activevalue",{"_index":3113,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.registermapeventhandlers(map",{"_index":2469,"title":{},"body":{"components/MapComponent.html":{}}}],["this.relatedobjects",{"_index":2631,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.relatedobjectselected.emit(record.oid",{"_index":3193,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.relatedrecordid",{"_index":696,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.removebuttonclass",{"_index":1291,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontext",{"_index":1277,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontextclass",{"_index":1289,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removeelem(idx",{"_index":1413,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.required",{"_index":1314,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.resetselectorevent.emit",{"_index":3196,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.restricttoselection",{"_index":1681,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.resultarrayproperty",{"_index":1688,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.roles",{"_index":2232,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.rolesservice.updateuserroles(this.currentuser.id",{"_index":2278,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.rows",{"_index":2571,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(url",{"_index":3152,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["this.savefirst",{"_index":3725,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.savemsg",{"_index":2289,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.savemsgtype",{"_index":2290,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfields",{"_index":1663,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.searchfieldstr",{"_index":1902,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.searchfilter.name",{"_index":2298,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.prevname",{"_index":2299,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.prevrole",{"_index":2300,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.role",{"_index":2293,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.roles.push({value:role.name",{"_index":2235,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfiltername",{"_index":3205,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setemptyvalue",{"_index":1712,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.setloading(false",{"_index":2080,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.setsavemessage",{"_index":2259,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(\"please",{"_index":2275,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(\"saving",{"_index":2277,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(saveres.message",{"_index":2286,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setupeventhandlers(fieldmap",{"_index":2011,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.setvalue(this.layergeojson",{"_index":2470,"title":{},"body":{"components/MapComponent.html":{}}}],["this.setvalue(this.value",{"_index":2640,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalue({oid",{"_index":3187,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalueatelem(idx",{"_index":1410,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.showconfirmdlg",{"_index":531,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.skipclone",{"_index":1279,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.sort",{"_index":3370,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sortchanged.emit({title:this.title",{"_index":3373,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sourcetype",{"_index":1671,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.startedbylabel",{"_index":716,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.startlisten",{"_index":767,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.startswith",{"_index":2636,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.statuslabel",{"_index":705,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.storelabelonly",{"_index":1684,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.stringlabeltofield",{"_index":1678,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.subjects",{"_index":901,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/TranslationService.html":{}}}],["this.subjects['get",{"_index":902,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].next(this.config",{"_index":906,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].subscribe(handler",{"_index":904,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['init",{"_index":3442,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].next(this",{"_index":3481,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].subscribe(handler",{"_index":3482,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.synchloading",{"_index":2076,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.tabid",{"_index":2459,"title":{},"body":{"components/MapComponent.html":{}}}],["this.targetaction",{"_index":217,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.tasktype",{"_index":740,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.timepickeropts",{"_index":1567,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.title",{"_index":2973,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.titlecompleterdescription",{"_index":1667,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr",{"_index":1661,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr.length",{"_index":1743,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr[0",{"_index":1744,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim",{"_index":1665,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim[idx",{"_index":1767,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim}${data[titlefld",{"_index":1841,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim}${titleval",{"_index":1759,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldname",{"_index":1659,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.translatei18next.init",{"_index":3443,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatei18next.translate(key",{"_index":3483,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translationservice",{"_index":1979,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["this.translationservice.t(key",{"_index":2088,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.translator.t('plan",{"_index":1018,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.translatorloaded",{"_index":3480,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatorready",{"_index":2078,"title":{},"body":{"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.type",{"_index":2563,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.typeheader",{"_index":2771,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.typelabel",{"_index":2977,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.updateprogress(progress",{"_index":800,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.url}${searchstring",{"_index":1819,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.users",{"_index":2257,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.users.push(existinguser",{"_index":2251,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.userservice.loginlocal(this.form.value.username",{"_index":2143,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.utilityservice",{"_index":1980,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.value",{"_index":221,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.value.length",{"_index":1312,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.value.push(newloc",{"_index":2783,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.push(this.newlocation",{"_index":2780,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.split(\"\\n",{"_index":2580,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.value=value",{"_index":3198,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.vocabfieldlookupservice",{"_index":1978,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.vocabid",{"_index":1655,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.waitforinit",{"_index":1576,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.workspaceapp",{"_index":3754,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspaceapps",{"_index":3730,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice",{"_index":3720,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getbrand",{"_index":3736,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getworkspacetypes().then(response",{"_index":3737,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this[lookupservicename",{"_index":1971,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["thom",{"_index":1225,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["those",{"_index":3002,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["though",{"_index":4413,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":4059,"title":{},"body":{"license.html":{}}}],["three",{"_index":4313,"title":{},"body":{"license.html":{}}}],["through",{"_index":3000,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["throw",{"_index":2489,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["thus",{"_index":4213,"title":{},"body":{"license.html":{}}}],["tiles",{"_index":2357,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":606,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["time'},{'name",{"_index":267,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["timepickeropts",{"_index":1512,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["times",{"_index":529,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["title",{"_index":1019,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"components/SortComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["title:record.title",{"_index":3189,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["titlecompleterdescription",{"_index":1642,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefieldarr",{"_index":1616,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefielddelim",{"_index":1617,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefieldname",{"_index":1641,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefld",{"_index":1755,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titles",{"_index":1736,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titleval",{"_index":1756,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titleval}${delimpair.suffix",{"_index":1842,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["title}${_.isempty(title",{"_index":1758,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["todelidx",{"_index":1407,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["todo",{"_index":1739,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["toformgroup",{"_index":1988,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["toformgroup(fields",{"_index":2002,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["together",{"_index":2026,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["toggle",{"_index":193,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggle'},{'name",{"_index":347,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggle=\"modal",{"_index":2668,"title":{},"body":{"components/PDFListComponent.html":{}}}],["toggle=\"tab\"]').on('shown.bs.tab",{"_index":560,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":346,"title":{"components/ToggleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["togglecoordinateshelp",{"_index":2387,"title":{},"body":{"components/MapComponent.html":{}}}],["togglehelp",{"_index":144,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggles",{"_index":199,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toidx",{"_index":1384,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["token",{"_index":177,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tool",{"_index":2885,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["tools",{"_index":3918,"title":{},"body":{"index.html":{},"license.html":{}}}],["tooltipmodule",{"_index":3369,"title":{},"body":{"components/SortComponent.html":{}}}],["tooltipmodule.forroot",{"_index":946,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["top",{"_index":1452,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["topright",{"_index":2419,"title":{},"body":{"components/MapComponent.html":{}}}],["topromise",{"_index":108,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["totalitems",{"_index":2688,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["trade",{"_index":4437,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4436,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4438,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4387,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":349,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["transfer_owner.component",{"_index":3429,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["transferownercomponent",{"_index":348,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["transferownermodule",{"_index":3423,"title":{"modules/TransferOwnerModule.html":{}},"body":{"modules/TransferOwnerModule.html":{},"modules.html":{},"overview.html":{}}}],["transferownerto",{"_index":4911,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transferred",{"_index":4388,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transferring",{"_index":4499,"title":{},"body":{"license.html":{}}}],["transform",{"_index":2598,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["transform(templatestring",{"_index":3380,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(templatestring:string",{"_index":3404,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(values",{"_index":2599,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transform(values:string",{"_index":2604,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transition",{"_index":4812,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translate",{"_index":1456,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["translatei18next",{"_index":3434,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatei18nextmodule",{"_index":3313,"title":{},"body":{"modules/SharedModule.html":{}}}],["translation",{"_index":93,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translationservice",{"_index":35,"title":{"injectables/TranslationService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"overview.html":{}}}],["translationservice.isready((tservice:any",{"_index":2077,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["translationservice.isready(tservice",{"_index":1577,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["translationservice:translationservice",{"_index":2227,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["translator",{"_index":34,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["translator:translationservice",{"_index":101,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["translatorloaded",{"_index":1525,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["translatorready",{"_index":1515,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["transmission",{"_index":4342,"title":{},"body":{"license.html":{}}}],["treated",{"_index":4412,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":4237,"title":{},"body":{"license.html":{}}}],["tree",{"_index":118,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["treemodule",{"_index":3324,"title":{},"body":{"modules/SharedModule.html":{}}}],["treenode",{"_index":3491,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["treenodecheckboxcomponent",{"_index":351,"title":{"components/TreeNodeCheckboxComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["trigger",{"_index":4853,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["triggervalidation",{"_index":1394,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["true",{"_index":226,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["try",{"_index":2487,"title":{},"body":{"components/MapComponent.html":{}}}],["ts",{"_index":2871,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["tus",{"_index":3891,"title":{},"body":{"dependencies.html":{}}}],["tval",{"_index":590,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tval}${this.field.onchange.control.delim}`}${v[subfield",{"_index":594,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["two",{"_index":4016,"title":{},"body":{"license.html":{}}}],["type",{"_index":41,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["type:\"url",{"_index":2742,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["type:string=\"primary",{"_index":2288,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["typeahead",{"_index":1742,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["typeconf",{"_index":1581,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["typeheader",{"_index":2757,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["typelabel",{"_index":2969,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typeof",{"_index":2546,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["types",{"_index":4802,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typescript",{"_index":3894,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":4367,"title":{},"body":{"license.html":{}}}],["unacceptable",{"_index":4047,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":698,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["under",{"_index":1175,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["understand",{"_index":4798,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["unique",{"_index":4968,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["universities",{"_index":3922,"title":{},"body":{"index.html":{}}}],["unless",{"_index":4374,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":4197,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4099,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4224,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4408,"title":{},"body":{"license.html":{}}}],["unqiue",{"_index":2475,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":4466,"title":{},"body":{"license.html":{}}}],["up",{"_index":1295,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["update",{"_index":514,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["update(oid",{"_index":2898,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updated",{"_index":731,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updatedata",{"_index":2916,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatedata:updatedata",{"_index":2919,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatemeta",{"_index":4937,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["updateprogress",{"_index":648,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updateprogress(progress",{"_index":662,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updateresponsibilities(records",{"_index":2915,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updates",{"_index":4398,"title":{},"body":{"license.html":{}}}],["updatetitle",{"_index":1716,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["updateuserdetails",{"_index":3560,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserdetails(userid",{"_index":3575,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofile",{"_index":3561,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofile(details",{"_index":3577,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserroles",{"_index":3263,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateuserroles(userid",{"_index":3264,"title":{},"body":{"injectables/RolesService.html":{}}}],["uppercase",{"_index":3781,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["uppy",{"_index":2740,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["uppy/core",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["uppy/dashboard",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["uppy/tus",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["uri",{"_index":47,"title":{},"body":{"injectables/ANDSService.html":{}}}],["url",{"_index":984,"title":{},"body":{"injectables/DashboardService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["url':\"url",{"_index":2748,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["url:\"/api/v1.1/harvest/$packagetype",{"_index":4945,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["url=url+'&'+key+\"=\"+params[key",{"_index":3257,"title":{},"body":{"injectables/ReportService.html":{}}}],["urls",{"_index":4924,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["urlvariables",{"_index":576,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["usa",{"_index":1207,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["usage",{"_index":515,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["use",{"_index":3920,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["useclass",{"_index":1151,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["used",{"_index":4072,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["useful",{"_index":1181,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["user",{"_index":355,"title":{"classes/User.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["user.email",{"_index":2313,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.name",{"_index":2312,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.rolestr",{"_index":2254,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.service",{"_index":3320,"title":{},"body":{"modules/SharedModule.html":{}}}],["user.username",{"_index":2241,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user/login_aaf",{"_index":4967,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["user:any",{"_index":2239,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user:any)=>{return",{"_index":2261,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user_profile.component",{"_index":3549,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["userform",{"_index":3504,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["userid",{"_index":3266,"title":{},"body":{"injectables/RolesService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["username",{"_index":2134,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["username:username",{"_index":2913,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["userprofilecomponent",{"_index":354,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["userprofilemodule",{"_index":3543,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":2176,"title":{},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["users'},{'name",{"_index":292,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["userservice",{"_index":2119,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["userservice.waitforinit((whatever:any",{"_index":2132,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["usersimpleservice",{"_index":2114,"title":{"injectables/UserSimpleService.html":{}},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/UserSimpleService.html":{},"overview.html":{}}}],["uses",{"_index":2334,"title":{},"body":{"components/MapComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["using",{"_index":3460,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["usually",{"_index":4816,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["util",{"_index":1927,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"modules/SharedModule.html":{}}}],["utilises",{"_index":4921,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["utility",{"_index":3601,"title":{},"body":{"injectables/UtilityService.html":{}}}],["utilityservice",{"_index":1358,"title":{"injectables/UtilityService.html":{}},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["v",{"_index":3689,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v.replace(regtrail",{"_index":3690,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v:any",{"_index":589,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["val",{"_index":440,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["val.location",{"_index":2798,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.name",{"_index":2796,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.type",{"_index":2786,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val1",{"_index":3514,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val1.value",{"_index":3518,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2",{"_index":3516,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2.value",{"_index":3519,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val:any",{"_index":1381,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["valid",{"_index":1071,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["validation",{"_index":2830,"title":{},"body":{"classes/RbValidator.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["validator",{"_index":3837,"title":{},"body":{"dependencies.html":{}}}],["validatorfn",{"_index":2839,"title":{},"body":{"classes/RbValidator.html":{}}}],["validators",{"_index":670,"title":{},"body":{"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{}}}],["validators.email",{"_index":3521,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["validators.required",{"_index":1316,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["valobj",{"_index":1771,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[fldname",{"_index":1781,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[targetfld",{"_index":1785,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[this.stringlabeltofield",{"_index":1776,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["value",{"_index":58,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["value'},{'name",{"_index":284,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["value.split(delim",{"_index":3675,"title":{},"body":{"injectables/UtilityService.html":{}}}],["value:any",{"_index":1342,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem",{"_index":1328,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem:any",{"_index":1323,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem[fieldctr",{"_index":1327,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["values",{"_index":2602,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"classes/RbValidator.html":{},"injectables/UtilityService.html":{}}}],["values.push(_.get(data",{"_index":3672,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values.push(v.split(reg).map(item",{"_index":3691,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values[i",{"_index":2608,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["var",{"_index":242,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["variable",{"_index":3359,"title":{},"body":{"components/SortComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["variable:this.variable",{"_index":3374,"title":{},"body":{"components/SortComponent.html":{}}}],["variables",{"_index":1082,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["variables.imports['moment",{"_index":1086,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables.imports[key",{"_index":1085,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables['imports",{"_index":3707,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["variety",{"_index":4787,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["verbatim",{"_index":3966,"title":{},"body":{"license.html":{}}}],["version",{"_index":1165,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/PDFListComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["versions",{"_index":3980,"title":{},"body":{"license.html":{}}}],["very",{"_index":4791,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["via",{"_index":4809,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["view",{"_index":4135,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewchild",{"_index":379,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('datetime",{"_index":608,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["viewchild('field",{"_index":1065,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('ngcompleter",{"_index":1865,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["viewcontainerref",{"_index":380,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewcssclasses",{"_index":4848,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewencapsulation",{"_index":3493,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewencapsulation.none",{"_index":3487,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewonly",{"_index":4850,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewroles",{"_index":4834,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["views/emailtemplates",{"_index":4899,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["violates",{"_index":4403,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4462,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2356,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["vocab",{"_index":45,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["vocab'},{'name",{"_index":326,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["vocab.component",{"_index":1259,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["vocab.component.ts",{"_index":1609,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:277",{"_index":1618,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:288",{"_index":1626,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:303",{"_index":1619,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:307",{"_index":1621,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:317",{"_index":1624,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:344",{"_index":2584,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:358",{"_index":2589,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:376",{"_index":2585,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:380",{"_index":2586,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:407",{"_index":2587,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:419",{"_index":2588,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:610",{"_index":2591,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:611",{"_index":2590,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:618",{"_index":2592,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab:string",{"_index":104,"title":{},"body":{"injectables/ANDSService.html":{}}}],["vocabfield",{"_index":1258,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["vocabfieldcomponent",{"_index":357,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["vocabfieldlookupservice",{"_index":1843,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["vocabid",{"_index":1637,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["vocabulary",{"_index":1635,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["void",{"_index":52,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["volume",{"_index":4292,"title":{},"body":{"license.html":{}}}],["w",{"_index":4679,"title":{},"body":{"license.html":{}}}],["w['name",{"_index":3757,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["wait",{"_index":757,"title":{},"body":{"components/AsynchComponent.html":{}}}],["waitforinit",{"_index":31,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["waitforinit(handler",{"_index":68,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["waitforinit(servicearr",{"_index":1548,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["waive",{"_index":4245,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4649,"title":{},"body":{"license.html":{}}}],["want",{"_index":1096,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["warranties",{"_index":4134,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1183,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["watch",{"_index":4732,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["way",{"_index":2222,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{}}}],["ways",{"_index":4304,"title":{},"body":{"license.html":{}}}],["web",{"_index":4782,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["website",{"_index":2038,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["welcome",{"_index":4680,"title":{},"body":{"license.html":{}}}],["well",{"_index":4115,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["whatever",{"_index":1891,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["whether",{"_index":4008,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["whole",{"_index":1098,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["whose",{"_index":4349,"title":{},"body":{"license.html":{}}}],["wide",{"_index":739,"title":{},"body":{"components/AsynchComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["widely",{"_index":4150,"title":{},"body":{"license.html":{}}}],["widget",{"_index":2337,"title":{},"body":{"components/MapComponent.html":{}}}],["width",{"_index":2041,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["window",{"_index":400,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["window.location.href",{"_index":548,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["window.navigator.language",{"_index":752,"title":{},"body":{"components/AsynchComponent.html":{}}}],["window.open(url",{"_index":1593,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["wipo",{"_index":4236,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3991,"title":{},"body":{"license.html":{}}}],["within",{"_index":2715,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["without",{"_index":1182,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["work",{"_index":3983,"title":{},"body":{"license.html":{}}}],["work's",{"_index":4172,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":4795,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow.js",{"_index":4852,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow_stagelabel",{"_index":4831,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflowstep",{"_index":359,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workflowstepbuttoncomponent",{"_index":358,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["working",{"_index":4151,"title":{},"body":{"license.html":{}}}],["works",{"_index":3973,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":363,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workspace.component",{"_index":3774,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["workspaceapp",{"_index":3718,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["workspaceapps",{"_index":3715,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["workspacefieldcomponent",{"_index":360,"title":{"components/WorkspaceFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacelistcomponent",{"_index":362,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacelistmodule",{"_index":3768,"title":{"modules/WorkspaceListModule.html":{}},"body":{"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["workspaces",{"_index":3744,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workspaceselectorcomponent",{"_index":364,"title":{"components/WorkspaceSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspaceselectorfield",{"_index":3714,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workspaceselectorfieldcomponent",{"_index":366,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacetypeservice",{"_index":3292,"title":{"injectables/WorkspaceTypeService.html":{}},"body":{"modules/SharedModule.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["worldwide",{"_index":4532,"title":{},"body":{"license.html":{}}}],["worries",{"_index":1889,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["wrap",{"_index":2062,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["wrapped",{"_index":601,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["write",{"_index":1196,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["writing",{"_index":4613,"title":{},"body":{"license.html":{}}}],["written",{"_index":4312,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["ws",{"_index":361,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["xs",{"_index":1873,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["xxxxxx",{"_index":4954,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["yarn",{"_index":4715,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["year",{"_index":4667,"title":{},"body":{"license.html":{}}}],["years",{"_index":4314,"title":{},"body":{"license.html":{}}}],["yes",{"_index":523,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["you've",{"_index":4817,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["yourself",{"_index":4550,"title":{},"body":{"license.html":{}}}],["z0",{"_index":3526,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["zone.js",{"_index":3900,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":929,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ANDSService.html":{"url":"injectables/ANDSService.html","title":"injectable - ANDSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ANDSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/ands-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResourceDetails\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/ands-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResourceDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetResourceDetails(uri: string, vocab: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/ands-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vocab\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ANDSService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getResourceDetails(uri:string, vocab:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/ands/vocab/resourceDetails?uri=${uri}&vocab=${vocab}`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionButtonComponent.html":{"url":"components/ActionButtonComponent.html","title":"component - ActionButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/action-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                action-button\n            \n\n\n\n            \n                template\n                \n  Record published to CKAN at {{ field.value }}\n  {{field.label}}Submitting to CKAN\n  \n  \n  \n  \n\n\n  Record published to CKAN at {{ field.value }}\n  Record not yet published\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeAction\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeAction\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteAction(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/action-button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/action-button.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/action-button.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { AnchorOrButton } from './field-simple';\nimport { RecordsService } from './records.service';\n\nexport class ActionButton extends FieldBase  {\n  targetAction: string;\n  recordService: RecordsService;\n  submitting: boolean = false;\n\n  constructor(options: any, injector:any) {\n    super(options, injector);\n    this.targetAction = options['targetAction'] || null;\n    this.recordService = this.getFromInjector(RecordsService);\n    this.value = options['value'] || null;\n  }\n\n  setValue(value:any) {\n    this.value = value;\n    this.formModel.patchValue(value, {emitEvent: true, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n  }\n}\n\n// For action buttons\n@Component({\n  selector: 'action-button',\n  template: `\n  \n    Record published to CKAN at {{ field.value }}\n    {{field.label}}Submitting to CKAN\n    \n    \n    \n    \n  \n  \n    Record published to CKAN at {{ field.value }}\n    Record not yet published\n  \n  `,\n})\nexport class ActionButtonComponent extends SimpleComponent {\n  field: ActionButton;\n\n  executeAction(event:any) {\n    this.field.submitting = true;\n    let that = this;\n    this.field.recordService.executeAction(this.field.targetAction,{oid: this.field.fieldMap._rootComp.oid})\n    .then(function (response) {\n      that.field.submitting = false;\n      that.field.setValue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldMap._rootComp.oid);\n      that.fieldMap._rootComp.onSubmit().subscribe();\n    });\n\n  }\n\n  isDisabled() {\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Record published to CKAN at {{ field.value }}  {{field.label}}Submitting to CKAN          Record published to CKAN at {{ field.value }}  Record not yet published'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnchorOrButtonComponent.html":{"url":"components/AnchorOrButtonComponent.html","title":"component - AnchorOrButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnchorOrButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                anchor-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n&nbsp;{{field.label}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:554\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:550\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnchorOrButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:548\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}} {{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnchorOrButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularPage.html":{"url":"classes/AngularPage.html","title":"class - AngularPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in angular/e2e/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in angular/e2e/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AngularPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AsynchComponent.html":{"url":"components/AsynchComponent.html","title":"component - AsynchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AsynchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-asynch.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display asynchronous processes\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                asynch-component\n            \n\n\n\n\n            \n                templateUrl\n                ./field-asynch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                    Public\n                                isListening\n                            \n                            \n                                    Public\n                                locale\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formatDateForDisplay\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onStart\n                            \n                            \n                                    Public\n                                onStop\n                            \n                            \n                                    Public\n                                onUpdate\n                            \n                            \n                                    Protected\n                                startListen\n                            \n                            \n                                    Protected\n                                updateProgress\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-asynch.component.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formatDateForDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatDateForDisplay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStart(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStop(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onUpdate(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startListen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startListen()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateProgress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProgress(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AsynchField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isListening\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locale\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ChangeDetectorRef } from '@angular/core';\nimport { PercentPipe } from '@angular/common';\nimport { SimpleComponent } from './field-simple.component';\nimport { NotInFormField } from './field-simple';\nimport { RecordsService } from './records.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/bufferTime';\nimport 'rxjs/add/operator/filter';\nimport moment from 'moment-es6';\n\ndeclare var jQuery: any;\ndeclare var io: any;\n\n/**\n * Async / background tasks field\n *\n * @author Shilo Banihit\n *\n */\nexport class AsynchField extends NotInFormField {\n  public listenType: any;\n  public relatedRecordId: string;\n  public criteria: any;\n  public nameLabel: string;\n  public statusLabel: string;\n  public dateStartedLabel: string;\n  public dateCompletedLabel: string;\n  public startedByLabel: string;\n  public messageLabel: string;\n  public lastUpdateLabel: string;\n  public completionLabel: string;\n  public completionRateType: string;\n  public progressArr: any[];\n  public RecordsService: RecordsService;\n  public dateFormat:string;\n  public taskType: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedRecordId = options['relatedRecordId'] || undefined;\n    this.completionRateType = options['completionRateType'] || 'percentage';\n    this.nameLabel = options['nameLabel'] ? this.getTranslated(options['nameLabel'], options['nameLabel']) : 'Name';\n    this.statusLabel = options['statusLabel'] ? this.getTranslated(options['statusLabel'], options['statusLabel']) : 'Status';\n    this.dateStartedLabel = options['dateStartedLabel'] ? this.getTranslated(options['dateStartedLabel'], options['dateStartedLabel']) : 'Date Started';\n    this.dateCompletedLabel = options['dateCompletedLabel'] ? this.getTranslated(options['dateCompletedLabel'], options['dateCompletedLabel']) : 'Date Completed';\n    this.startedByLabel = options['startedByLabel'] ? this.getTranslated(options['startedByLabel'], options['startedByLabel']) : 'Started By';\n    this.messageLabel = options['messageLabel'] ? this.getTranslated(options['messageLabel'], options['messageLabel']) : 'Message';\n    this.completionLabel = options['completionLabel'] ? this.getTranslated(options['completionLabel'], options['completionLabel']) : 'Completion';\n    this.lastUpdateLabel = options['lastUpdateLabel'] ? this.getTranslated(options['lastUpdateLabel'], options['lastUpdateLabel']) : 'Last Updated';\n    this.dateFormat = options['dateFormat'] || 'L LT';\n    this.listenType = options['listenType'] || \"record\"; // listens to record wide\n    this.taskType = options['taskType'] || '';\n    this.criteria = options['criteria'] || {where: {relatedRecordId: '@oid'}}; // defaults to all happenings for this oid\n\n    this.RecordsService = this.getFromInjector(RecordsService);\n  }\n\n  public getStatusLabel(status) {\n    return this.getTranslated(`${this.options.statusLabel}-${status}`, status);\n  }\n\n}\n/**\n*\n* Component to display asynchronous processes\n*\n*\n*/\n@Component({\n  selector: 'asynch-component',\n  templateUrl: './field-asynch.component.html'\n})\nexport class AsynchComponent extends SimpleComponent {\n  field: AsynchField;\n  public isListening:boolean;\n  public locale;\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n    this.locale = window.navigator.language;\n  }\n\n  public ngOnInit() {\n    let oid = this.field.relatedRecordId || this.field.fieldMap._rootComp.oid;\n    const that = this;\n    if (_.isNull(oid) || _.isUndefined(oid) || _.isEmpty(oid)) {\n      // wait for the OID to be set when record is created\n      if (!this.field.fieldMap._rootComp.getSubscription('recordCreated')) {\n        console.log(`Subscribing to record creation..... ${this.field.name}`);\n        this.field.fieldMap._rootComp.subscribe('recordCreated', this.field.name, (createdInfo) => {\n          that.field.relatedRecordId = createdInfo.oid;\n          that.startListen();\n        });\n      }\n    }\n    if (oid) {\n      this.field.relatedRecordId = this.field.fieldMap._rootComp.oid;\n      this.startListen();\n    }\n  }\n\n  protected startListen() {\n    if (!this.isListening && (!_.isUndefined(this.field.relatedRecordId) && !_.isEmpty(this.field.relatedRecordId))) {\n      const fq = JSON.stringify(this.field.criteria).replace(/@oid/g, this.field.relatedRecordId);\n\n      this.field.RecordsService.getAsyncProgress(fq).then(progressArr => {\n        _.each(progressArr, (progress) => {\n          progress.completionRate = progress.currentIdx / progress.targetIdx;\n          if (this.field.listenType == \"progress\") {\n            this.field.RecordsService.subscribeToAsyncProgress(progress.id, (data, socketRes) => {\n              console.log(`Subscribed to async tasks: ${progress.id}`);\n              console.log(data);\n              console.log(socketRes);\n            });\n          }\n        });\n        if (this.field.listenType == \"record\") {\n          this.field.RecordsService.subscribeToAsyncProgress(this.field.relatedRecordId, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record: ${this.field.relatedRecordId}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        } else if (this.field.listenType == \"taskType\") {\n          this.field.RecordsService.subscribeToAsyncProgress(`${this.field.relatedRecordId}-${this.field.taskType}`, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record with taskType: ${this.field.relatedRecordId}-${this.field.taskType}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        }\n        io.socket.on('start', this.onStart.bind(this));\n        io.socket.on('stop', this.onStop.bind(this));\n        io.socket.on('update', this.onUpdate.bind(this));\n        this.field.progressArr = progressArr;\n        this.isListening = true;\n      });\n    }\n  }\n\n  public onStart(progress) {\n    console.log(`Got start event:`);\n    console.log(progress);\n    this.field.progressArr ? this.field.progressArr.push(progress) : this.field.progressArr = [progress];\n    this.changeRef.detectChanges();\n  }\n\n  public onStop(progress) {\n    console.log(`Got stop event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  public onUpdate(progress) {\n    console.log(`Got update event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  protected updateProgress(progress) {\n\n    const targetProgress = _.find(this.field.progressArr, (prog) => { return prog.id == progress.id; });\n    _.assign(targetProgress, progress);\n    this.changeRef.detectChanges();\n  }\n\n  public formatDateForDisplay(value: string) {\n    return value ? moment(value).locale(this.locale).format(this.field.dateFormat) : '';\n  }\n}\n\n    \n\n    \n        \n  &nbsp;\n   {{ field.label }} \n  \n    \n      \n        {{ field.nameLabel }} \n        {{ field.statusLabel }} \n        {{ field.completionLabel }} \n        {{ field.messageLabel }} \n        {{ field.dateStartedLabel }} \n        {{ field.startedByLabel }} \n        {{ field.lastUpdateLabel }} \n        {{ field.dateCompletedLabel }} \n      \n    \n    \n      \n        {{ progress.name }}\n        {{ field.getStatusLabel(progress.status) }}\n        {{ progress.completionRate | percent:'1.0-0':locale }}\n        {{ progress.message }}\n        {{ formatDateForDisplay(progress.date_started) }}\n        {{ progress.started_by }}\n        {{ formatDateForDisplay(progress.updatedAt) }}\n        {{ formatDateForDisplay(progress.date_completed) }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ field.label }}                     {{ field.nameLabel }}         {{ field.statusLabel }}         {{ field.completionLabel }}         {{ field.messageLabel }}         {{ field.dateStartedLabel }}         {{ field.startedByLabel }}         {{ field.lastUpdateLabel }}         {{ field.dateCompletedLabel }}                             {{ progress.name }}        {{ field.getStatusLabel(progress.status) }}        {{ progress.completionRate | percent:\\'1.0-0\\':locale }}        {{ progress.message }}        {{ formatDateForDisplay(progress.date_started) }}        {{ progress.started_by }}        {{ formatDateForDisplay(progress.updatedAt) }}        {{ formatDateForDisplay(progress.date_completed) }}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AsynchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/base-service.ts\n        \n\n            \n                Description\n            \n            \n                Base class for all client-side services...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBrandingAndPortalUrl\n                                \n                                \n                                    getBaseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any, configService: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getBrandingAndPortalUrl\n                    \n                \n\n                \n                    \n                        getgetBrandingAndPortalUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getBaseUrl\n                    \n                \n\n                \n                    \n                        getgetBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:60\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\nimport { Subject } from 'rxjs/Subject';\n/**\n * Base class for all client-side services...\n *\n * Author: Shilo Banihit\n *\n */\nexport class BaseService {\n  protected http: any;\n  protected config: any;\n  protected configService: any;\n  protected baseUrl:string;\n  protected brandingAndPortalUrl:string;\n  protected options: any;\n  protected static __config: any;\n  protected initSubject: any;\n\n  constructor (http: any , configService: any) {\n    this.http = http;\n    this.configService = configService;\n    this.initSubject = new Subject();\n    this.configService.getConfig((config:any) => {\n      this.config = config;\n      this.baseUrl = this.config.baseUrl;\n      this.brandingAndPortalUrl = `${this.baseUrl}/${this.config.branding}/${this.config.portal}`;\n      this.options = this.getOptionsClient();\n      this.emitInit();\n    });\n  }\n\n  public get getBrandingAndPortalUrl() {\n    return this.brandingAndPortalUrl;\n  }\n\n  public get getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  public waitForInit(handler: any) {\n    const subs = this.initSubject.subscribe(handler);\n    this.emitInit();\n    return subs;\n  }\n\n  public getInitSubject() {\n    return this.initSubject;\n  }\n\n  public emitInit() {\n    if (this.config) {\n      this.initSubject.next(this);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n\n  protected getOptions(headersObj: any) {\n    let headers = new Headers(headersObj);\n    return new RequestOptions({ headers: headers });\n  }\n\n  protected getOptionsClient(headersObj: any = {}) {\n    headersObj['X-Source'] = 'jsclient';\n    headersObj['Content-Type'] = 'application/json;charset=utf-8';\n    headersObj['X-CSRF-Token'] = this.config.csrfToken;\n\n    return this.getOptions(headersObj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonBarContainerComponent.html":{"url":"components/ButtonBarContainerComponent.html","title":"component - ButtonBarContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonBarContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                buttonbarcontainer\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonBarContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelButtonComponent.html":{"url":"components/CancelButtonComponent.html","title":"component - CancelButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Cancel Button Component\nButton designed to\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cancel-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CancelButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:534\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/config-service.ts\n        \n\n            \n                Description\n            \n            \n                Handles client-side global configuration\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                csrfToken\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitConfig\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                initConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitConfig\n                        \n                        \n                    \n                \n            \n            \n                \nemitConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initConfig\n                        \n                        \n                    \n                \n            \n            \n                \ninitConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            csrfToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\n/**\n * Handles client-side global configuration\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class ConfigService {\n  protected config: any;\n  protected subjects: any;\n  public csrfToken: any;\n\n  constructor (@Inject(Http) protected http: any) {\n    this.subjects = {};\n    this.subjects['get'] = new Subject();\n    this.initConfig();\n  }\n\n  getConfig(handler: any): any {\n    const subs = this.subjects['get'].subscribe(handler);\n    this.emitConfig();\n    return subs;\n  }\n\n  emitConfig() {\n    if (this.config) {\n      this.subjects['get'].next(this.config);\n    }\n  }\n\n  initConfig() {\n    this.http.get(`/csrfToken`).mergeMap((csrfRes:any) => {\n      this.csrfToken = csrfRes.json()['_csrf'];\n      return this.http.get(`/dynamic/apiClientConfig?v=${new Date().getTime()}`);\n    })\n    .subscribe((res:any) => {\n      this.config = this.extractData(res);\n      this.config['csrfToken'] = this.csrfToken;\n      console.log(`ConfigService, initialized. `);\n      this.emitConfig();\n    });\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dashboard/app/dashboard.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Dashboard Module\nAuthor: Shilo Banihit\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            SortComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DashboardComponent }  from './dashboard.component';\nimport { SortComponent } from './sort.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Dashboard Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ DashboardComponent, SortComponent ],\n  providers:    [  ],\n  bootstrap:    [ DashboardComponent ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getActivePlans\n                            \n                            \n                                getAllDraftPlansCanEdit\n                            \n                            \n                                getAllRecordsCanEdit\n                            \n                            \n                                getDraftPlans\n                            \n                            \n                                getRecords\n                            \n                            \n                                    Public\n                                searchRecords\n                            \n                            \n                                    Public\n                                setDashboardTitle\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/dashboard-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDates\n                        \n                        \n                    \n                \n            \n            \n                \nformatDates(response: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivePlans(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllDraftPlansCanEdit\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllDraftPlansCanEdit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllRecordsCanEdit\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllRecordsCanEdit(recordType: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recordType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDraftPlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetDraftPlans(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecords(recordType: string, state: string, pageNumber: number, packageType: string, sort: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    recordType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    packageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRecords(pageNumber: number, basicSearch: string, facets: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    basicSearch\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    facets\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDashboardTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDashboardTitle(planTable: PlanTable, plans: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    planTable\n                                    \n                                                PlanTable\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    plans\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class DashboardService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getAllDraftPlansCanEdit(): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getAllRecordsCanEdit(recordType:string, state:string): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n\n    let url = `${this.brandingAndPortalUrl}/listRecords?recordType=${recordType}&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`;\n    if(state != '') {\n      url += `&state=${state}`;\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getActivePlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getDraftPlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  getRecords(recordType:string,state:string,pageNumber:number,packageType:string=undefined, sort:string=undefined): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    recordType = (!_.isEmpty(recordType) && !_.isUndefined(recordType)) ? `recordType=${recordType}` : '';\n    packageType = (!_.isEmpty(packageType) && !_.isUndefined(packageType)) ? `packageType=${packageType}` : '';\n    sort = (!_.isEmpty(sort) && !_.isUndefined(sort)) ? `&sort=${sort}` : '';\n    state = (!_.isEmpty(state) && !_.isUndefined(state)) ? `&state=${state}` : '';\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?${recordType}${packageType}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i {\n      plan.dashboardTitle = (_.isUndefined(plan.title) || _.isEmpty(plan.title) || _.isEmpty(plan.title[0])) ? this.translator.t('plan-with-no-title'): plan.title;\n    });\n  }\n\n  public searchRecords(pageNumber:number, basicSearch: string, facets: any = null) {\n    const rows = this.config.maxSearchRowsPerPage;\n    const start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/searchPlans?start=${start}&rows=${rows}&query=${basicSearch}&facets=${facets}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res:any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateTimeComponent.html":{"url":"components/DateTimeComponent.html","title":"component - DateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                date-time\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.formatValueForDisplay()}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:711\n                \n            \n\n\n            \n                \n                    Component method that formats the value, delegates to field.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:703\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dateTime')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:701\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:699\n                            \n                        \n\n                \n                    \n                        The field model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.formatValueForDisplay()}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DmpFieldComponent.html":{"url":"components/DmpFieldComponent.html","title":"component - DmpFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DmpFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/dmp-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a DMP field.\nAuthor: Shilo Banihit\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dmp-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:42\n                            \n                        \n                \n                    \n                        The model for this field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:55\n                            \n                        \n                \n                    \n                        Field map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:47\n                            \n                        \n                \n                    \n                        Form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:64\n                            \n                        \n                \n                    \n                        The parentId of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:51\n                            \n                        \n                \n                    \n                        The value of this field.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/dmp-field.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/dmp-field.component.ts:154\n                \n            \n\n\n            \n                \n                    Change handler, instantiates the field component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/dmp-field.component.ts:91\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldBase } from './field-base';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var $: any;\n/**\n * Base component for a DMP field.\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  selector: 'dmp-field',\n  template: ''\n})\nexport class DmpFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  @Input() isEmbedded: boolean = false;\n\n  @Input() public name: any;\n\n  @Input() public index: number;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n  public disabled:boolean = false;\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {imports: {}};\n      _.forOwn(this.fieldMap._rootComp, (val, key) => {\n        variables.imports[key] = val;\n      });\n      variables.imports['moment'] = moment;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        if (!this.disabled) {\n          //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n          this.disabledElements = parentElement.find('*:disabled');\n          parentElement.find('input').prop( \"disabled\", true );\n          parentElement.find('button').filter((index, buttonElem) => {\n            const isHelp = jQuery(buttonElem).find(\"span[class='glyphicon glyphicon-question-sign']\");\n            return isHelp.length  {\n            if (_.isFunction(disabledElement.prop)) {\n              disabledElement.prop(\"disabled\",true)\n            }\n          });\n          this.disabledElements = [];\n          this.disabled = false;\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    fieldCompRef.instance.isEmbedded = this.isEmbedded;\n    fieldCompRef.instance.name = this.name;\n    fieldCompRef.instance.index = this.index;\n    // flip thi: make the fields responsible for setting the right fieldMap member\n    this.field.setFieldMapEntry(this.fieldMap, fieldCompRef);\n    //this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DmpFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DmpModule.html":{"url":"modules/DmpModule.html","title":"module - DmpModule","body":"\n                   \n\n\n\n\n    Modules\n    DmpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_DmpFormComponent_providers\n\n\n\ncluster_DmpModule_imports\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nDmpFormComponent -->\n\nLocation->DmpFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDmpFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DmpFormComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dmp/app/dmp.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DmpFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DmpFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DmpFormComponent } from './dmp-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ DmpFormComponent ],\n  providers:    [ ],\n  bootstrap:    [ DmpFormComponent ],\n  entryComponents: [ ]\n})\nexport class DmpModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownFieldComponent.html":{"url":"components/DropdownFieldComponent.html","title":"component - DropdownFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SelectionComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dropdownfield\n            \n\n\n\n            \n                template\n                \n   \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n   \n   \n      \n        {{opt.label}}\n      \n      \n        {{opt.label}}\n      \n   \n   {{field.label}} is required\n   {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  \n  {{getLabel(field.value)}}\n  \n  \n  {{getLabel(field.value.value)}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                compare\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compareFn\n                            \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compareFn\n                        \n                        \n                    \n                \n            \n            \n                \ncompareFn(a, b)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SelectionComponent\n\n                \n            \n            \n                \n                        Defined in         SelectionComponent:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DropdownFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compare\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.compareFn.bind(this)\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionField\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SelectionComponent:147\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{field.label}} {{ getRequiredLabelStr()}}                           {{opt.label}}                    {{opt.label}}            {{field.label}} is required   {{field.validationMessages.required}}  {{field.label}}    {{getLabel(field.value)}}      {{getLabel(field.value.value)}}  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailNotificationService.html":{"url":"injectables/EmailNotificationService.html","title":"injectable - EmailNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/email-service.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendNotification\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendNotification\n                        \n                        \n                    \n                \n            \n            \n                \nsendNotification(to: string, template: string, data: any, subject: string, from: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/email-service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * @author Thom Cuddihy\n *\n */\n@Injectable()\nexport class EmailNotificationService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  sendNotification(to: string, template: string, data: any = {}, subject: string = null, from: string = null): Promise {\n    var payload = {to: to, template: template, data: data};\n    if (subject) {\n      payload['subject'] = subject;\n    }\n    if (from) {\n      payload['from'] = from;\n    }\n    return this.http.post(`${this.brandingAndPortalUrl}/api/sendNotification`, payload, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmbeddableComponent.html":{"url":"classes/EmbeddableComponent.html","title":"class - EmbeddableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmbeddableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:223\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:226\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportFormComponent.html":{"url":"components/ExportFormComponent.html","title":"component - ExportFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExportFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/export/app/export-form.component.ts\n\n\n    \n        Description\n    \n    \n        Main Export component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n            \n                providers\n                \n                                Location\n                            { provide: LocationStrategy, useClass: PathLocationStrategy }\n                \n            \n\n\n            \n                selector\n                export-form\n            \n\n\n\n\n            \n                templateUrl\n                ./export-form.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                criticalError\n                            \n                            \n                                datePickerOpts\n                            \n                            \n                                hasClearButton\n                            \n                            \n                                initSubs\n                            \n                            \n                                modAfter\n                            \n                            \n                                modBefore\n                            \n                            \n                                record_type\n                            \n                            \n                                recTypeNames\n                            \n                            \n                                timePickerOpts\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                download\n                            \n                            \n                                getRecordTypeNames\n                            \n                            \n                                setRecordType\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elm: ElementRef, LocationService: Location, translationService: TranslationService, recordsService: RecordsService)\n                    \n                \n                        \n                            \n                                Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LocationService\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recordsService\n                                                  \n                                                        \n                                                                        RecordsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            download\n                        \n                        \n                    \n                \n            \n            \n                \ndownload()\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecordTypeNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecordTypeNames()\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRecordType\n                        \n                        \n                    \n                \n            \n            \n                \nsetRecordType(recType, e)\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criticalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePickerOpts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasClearButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modAfter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modBefore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            record_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recTypeNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePickerOpts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, ElementRef } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { LoadableComponent } from './shared/loadable.component';\nimport moment from 'moment-es6';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n/**\n * Main Export component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'export-form',\n  templateUrl: './export-form.html',\n  providers: [Location, { provide: LocationStrategy, useClass: PathLocationStrategy }]\n})\n\nexport class ExportFormComponent extends LoadableComponent {\n  criticalError: any;\n  modBefore: any;\n  modAfter: any;\n  initSubs: any;\n  datePickerOpts: any;\n  timePickerOpts: any;\n  hasClearButton: boolean;\n  recTypeNames: string[];\n  record_type: string;\n\n  constructor(\n    elm: ElementRef,\n    @Inject(Location) protected LocationService: Location,\n    translationService: TranslationService,\n    protected recordsService: RecordsService\n  ) {\n    super();\n    this.timePickerOpts = false;\n    this.hasClearButton = false;\n    this.datePickerOpts = { placeholder: 'dd/mm/yyyy', format: 'dd/mm/yyyy', icon: 'fa fa-calendar' };\n    this.initTranslator(translationService);\n    this.waitForInit([\n      this.recordsService\n    ], () => {\n      translationService.isReady(tService => {\n        this.recordsService.getAllTypes().then((typeConfs: any) => {\n          this.recTypeNames = [];\n          _.each(typeConfs, typeConf => {\n            this.recTypeNames.push(typeConf.name);\n          });\n          this.record_type = this.recTypeNames[0];\n          this.checkIfHasLoaded();\n        });\n\n      });\n    });\n  }\n\n  download() {\n    const before = this.modBefore ? moment(this.modBefore).format('YYYY-MM-DD') : '';\n    const after = this.modAfter ? moment(this.modAfter).format('YYYY-MM-DD') : '';\n    const url = this.LocationService.prepareExternalUrl(`export/record/download/csv?before=${before}&after=${after}&recType=${this.record_type}`);\n    window.open(url, '_blank');\n  }\n\n  getRecordTypeNames() {\n    return this.recTypeNames;\n  }\n\n  setRecordType(recType, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    this.record_type = recType;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n      \n        {{ 'export-modified-after' | translate }} \n        \n          \n        \n      \n      \n        {{ 'export-modified-before' | translate }} \n        \n          \n        \n      \n      \n        \n        \n          \n            \n              {{ 'export-csv-' + record_type  | translate }}\n            \n            \n              \n            \n            \n              \n                \n                  {{ 'export-csv-' + recTypeName  | translate }}\n                \n              \n            \n          \n        \n      \n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \\'export-modified-after\\' | translate }}                                               {{ \\'export-modified-before\\' | translate }}                                                                                           {{ \\'export-csv-\\' + record_type  | translate }}                                                                                                              {{ \\'export-csv-\\' + recTypeName  | translate }}                                                                            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExportModule.html":{"url":"modules/ExportModule.html","title":"module - ExportModule","body":"\n                   \n\n\n\n\n    Modules\n    ExportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_ExportFormComponent_providers\n\n\n\ncluster_ExportModule_imports\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/export/app/export.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExportFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ExportFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ExportFormComponent } from './export-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, NKDatetimeModule ],\n  declarations: [ ExportFormComponent ],\n  providers:    [  ],\n  bootstrap:    [ ExportFormComponent ],\n  entryComponents: [  ]\n})\nexport class ExportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalLookupDataService.html":{"url":"classes/ExternalLookupDataService.html","title":"class - ExternalLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, arrayProperty: string, compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:277\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        arrayProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertToItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToItem(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:307\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CompleterItem | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(term: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlMetaService.html":{"url":"injectables/FieldControlMetaService.html","title":"injectable - FieldControlMetaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlMetaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control-meta.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flattenFields\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getInjectedService\n                            \n                            \n                                getLookupData\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, vocabFieldLookupService: VocabFieldLookupService, completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vocabFieldLookupService\n                                                  \n                                                        \n                                                                        VocabFieldLookupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flattenFields\n                        \n                        \n                    \n                \n            \n            \n                \nflattenFields(fields: any[], fieldArr: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldsMeta\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldsMeta(fieldsArr: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldsArr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInjectedService\n                        \n                        \n                    \n                \n            \n            \n                \ngetInjectedService(serviceName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLookupData\n                        \n                        \n                    \n                \n            \n            \n                \ngetLookupData(fields: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }   from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport  { fieldClasses }from '../fieldClasses';\n\nimport { ConfigService } from '../config-service';\nimport { VocabFieldLookupService } from './field-vocab.component';\nimport { CompleterService } from 'ng2-completer';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class FieldControlMetaService extends BaseService {\n  protected classes =  fieldClasses;\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(VocabFieldLookupService) private vocabFieldLookupService: VocabFieldLookupService,\n    @Inject(CompleterService) private completerService: CompleterService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translationService: TranslationService,\n    @Inject(UtilityService) protected utilityService: UtilityService,\n    protected app: ApplicationRef\n  ) {\n      super(http, configService);\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = _.map(fieldsArr, (f:any) => {\n        // console.log(f.class);\n        // if(typeof this.classes[f.class] != 'undefined'){\n        //   console.log(f.class + ' is null');\n        // }\n      const inst = new this.classes[f.class].meta(f.definition, this.app['_injector']);\n      inst.utilityService = this.getInjectedService('utilityService');\n      inst.appConfig = this.getInjectedService('configService').config;\n      // set the component class\n      if (_.isArray(this.classes[f.class].comp)) {\n        inst.compClass = _.find(this.classes[f.class].comp, (c:any)=> {\n          // console.log(`Checking if ${c.clName} == ${f.compClass}`);\n          return c.clName == f.compClass\n        });\n        // defaults to the first entry when compClass is undefined\n        if (_.isUndefined(inst.compClass)) {\n          inst.compClass = this.classes[f.class].comp[0];\n        }\n      } else {\n        inst.compClass = this.classes[f.class].comp;\n      }\n      if (f.definition && f.definition.fields) {\n        inst.fields = this.getFieldsMeta(f.definition.fields);\n      }\n      return inst;\n    });\n    return fields;\n  }\n\n  flattenFields(fields: any[], fieldArr: any[]) {\n    _.map(fields, (f:any)=> {\n      fieldArr.push(f);\n      if (f.fields) {\n        this.flattenFields(f.fields, fieldArr);\n      }\n    });\n  }\n\n  getLookupData(fields: any[]) {\n    let fieldArray: any[] = [];\n    this.flattenFields(fields, fieldArray);\n    return Observable.from(fieldArray).flatMap((f:any) => {\n      if (f.hasLookup) {\n        const lookupServiceName = this.classes[f.clName].lookupService;\n        const serviceInst = this.getInjectedService(lookupServiceName);\n        f.setLookupServices(this.getInjectedService('completerService'), serviceInst);\n        // f.completerService = this.completerService;\n        // f.lookupService = this[lookupServiceName];\n        return serviceInst.getLookupData(f);\n      } else {\n        return Observable.of(null);\n      }\n    })\n    .flatMap((field:any) => {\n      return Observable.of(field);\n    })\n    .last()\n    .flatMap((whatever:any) => {\n      return Observable.of(fields);\n    });\n  }\n\n  getInjectedService(serviceName: string) {\n    let serviceInst = null;\n    switch (serviceName) {\n      case 'vocabFieldLookupService':\n        serviceInst = this.vocabFieldLookupService;\n        break;\n      case 'completerService':\n        serviceInst = this.completerService;\n        break;\n      case 'configService':\n        serviceInst = this.configService;\n        break;\n      case 'translationService':\n        serviceInst = this.translationService;\n        break;\n      case 'utilityService':\n        serviceInst = this.utilityService;\n        break;\n    }\n    return serviceInst;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlService.html":{"url":"injectables/FieldControlService.html","title":"injectable - FieldControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control.service.ts\n        \n\n            \n                Description\n            \n            \n                Field / Model Factory Service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComponentClasses\n                            \n                            \n                                getEmptyFormGroup\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getLookupData\n                            \n                            \n                                populateFormGroup\n                            \n                            \n                                setupEventHandlers\n                            \n                            \n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, fcmetaService: FieldControlMetaService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fcmetaService\n                                                  \n                                                        \n                                                                        FieldControlMetaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addComponentClasses\n                        \n                        \n                    \n                \n            \n            \n                \naddComponentClasses(componentClasses: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentClasses\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldsMeta\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldsMeta(fieldsArr: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldsArr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLookupData\n                        \n                        \n                    \n                \n            \n            \n                \ngetLookupData(fields: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFormGroup(fields: any[], group: any, fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupEventHandlers\n                        \n                        \n                    \n                \n            \n            \n                \nsetupEventHandlers(fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormGroup(fields: FieldBase[], fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                FieldBase[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef, Output, EventEmitter }   from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/last';\nimport 'rxjs/add/observable/from';\nimport { CompleterService } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { FieldBase } from './field-base';\nimport  { fieldClasses } from '../fieldClasses';\n/**\n * Field / Model Factory Service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class FieldControlService {\n  protected classes =  fieldClasses;\n  constructor(\n  @Inject(CompleterService) private completerService: CompleterService,\n  @Inject(ConfigService) protected configService: ConfigService,\n  @Inject(TranslationService) protected translationService: TranslationService,\n  @Inject(UtilityService) protected utilityService: UtilityService,\n  @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n  protected app: ApplicationRef\n  ) {\n\n  }\n\n  addComponentClasses(componentClasses: object) {\n    this.classes = _.merge(this.classes,componentClasses);\n  }\n\n  getEmptyFormGroup() {\n    return new FormGroup({});\n  }\n\n  toFormGroup(fields: FieldBase[], fieldMap: any = null ) {\n    let group: any = {};\n    this.populateFormGroup(fields, group, fieldMap);\n    this.setupEventHandlers(fieldMap);\n    return new FormGroup(group);\n  }\n\n  setupEventHandlers(fieldMap: any) {\n    _.forOwn(fieldMap, (fMap:any) => {\n      if (fMap.field) {\n        fMap.field.setupEventHandlers();\n      }\n    });\n  }\n\n  populateFormGroup(fields: any[], group: any, fieldMap: any) {\n    fields.forEach((field:any) => {\n      if (field.fields && !field.hasGroup) {\n        this.populateFormGroup(field.fields, group, fieldMap);\n      } else {\n        field.getGroup(group, fieldMap);\n      }\n    });\n    return group;\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = this.fcmetaService.getFieldsMeta(fieldsArr);\n    return fields;\n  }\n\n  getLookupData(fields: any[]) {\n    return this.fcmetaService.getLookupData(fields);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenericGroupComponent.html":{"url":"components/GenericGroupComponent.html","title":"component - GenericGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenericGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Generic Group Component\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n\n    \n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                generic-group-field\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n        \n          \n        \n        \n          {{removeBtnText}}\n          \n        \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GenericGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                                                          {{removeBtnText}}                                                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenericGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenValueComponent.html":{"url":"components/HiddenValueComponent.html","title":"component - HiddenValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hidden-field\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(value: any, source: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:648\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HtmlRawComponent.html":{"url":"components/HtmlRawComponent.html","title":"component - HtmlRawComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HtmlRawComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                htmlraw\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HtmlRaw\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:404\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HtmlRawComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkValueComponent.html":{"url":"components/LinkValueComponent.html","title":"component - LinkValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LinkValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                link-value\n            \n\n\n\n            \n                template\n                \n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:633\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinkValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadableComponent.html":{"url":"classes/LoadableComponent.html","title":"class - LoadableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/loadable.component.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class to wrap JQuery calls ...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslationService } from './translation-service';\n\nimport * as _ from \"lodash\";\ndeclare var jQuery: any;\n/**\n * Convenience class to wrap JQuery calls ...\n *\n * Author: Shilo Banihit\n *\n */\nexport class LoadableComponent  {\n  isLoading: boolean;\n  translatorReady: boolean;\n  translationService: any;\n  spinnerElem: string = ``;\n\n  constructor() {\n    this.isLoading = true;\n    this.synchLoading();\n\n  }\n\n  initTranslator(translationService: TranslationService) {\n    this.translationService = translationService;\n    translationService.isReady((tService:any) => {\n      this.translatorReady = true;\n    });\n  }\n\n  translatorLoaded() {\n    this.translatorReady = true;\n    this.checkIfHasLoaded();\n  }\n\n  public checkIfHasLoaded() {\n    if (this.hasLoaded()) {\n      this.setLoading(false);\n    }\n  }\n\n  hasLoaded() {\n    return this.isLoading && (this.translationService ? this.translatorReady : true);\n  }\n\n  setLoading(loading: boolean=true) {\n    this.isLoading = loading;\n    this.synchLoading();\n  }\n\n  synchLoading() {\n    if (this.isLoading) {\n      jQuery(\"#loading\").removeClass(\"hidden\");\n    } else {\n      jQuery(\"#loading\").addClass(\"hidden\");\n    }\n  }\n\n  getTranslated(key, defValue) {\n    if (!_.isEmpty(key) && !_.isUndefined(key)) {\n      // Keys can now be any string, previously, these were required to start with the '@' character\n      if (this.translationService) {\n        return this.translationService.t(key);\n      } else {\n        return key;\n      }\n    } else {\n      return defValue;\n    }\n  }\n\n  waitForInit(serviceArr: any[], handler:any) {\n    const subs = _.map(serviceArr, (service)=> { return service.getInitSubject() });\n    const subTracker = {loaded: {}, subs: {}};\n    const subTrackerFn = (serviceIdx:any) => {\n      return (serviceInst:any) => {\n        subTracker.loaded[`${serviceIdx}`] = serviceInst;\n        if (_.keys(subTracker.loaded).length >= subs.length) {\n          subTracker.subs[`${serviceIdx}`].unsubscribe();\n          handler();\n        }\n      };\n    };\n    _.forOwn(serviceArr, (service:any, serviceIdx:any) => {\n      subTracker.subs[`${serviceIdx}`] = service.getInitSubject().subscribe(subTrackerFn(serviceIdx));\n      service.emitInit();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocalAuthComponent.html":{"url":"components/LocalAuthComponent.html","title":"component - LocalAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocalAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/localAuth/app/local_auth.component.ts\n\n\n    \n        Description\n    \n    \n        Local Authentication  Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                local-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./localAuth.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                isLoginDisabled\n                            \n                            \n                                loginMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserSimpleService, fb: FormBuilder, document: any, translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserSimpleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in angular/localAuth/app/local_auth.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/localAuth/app/local_auth.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { LoginResult } from './shared/user-models'\nimport { LoadableComponent } from './shared/loadable.component';\nimport { TranslationService } from './shared/translation-service';\n\n/**\n * Local Authentication  Component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'local-auth',\n  templateUrl: './localAuth.html'\n})\n\n@Injectable()\nexport class LocalAuthComponent extends LoadableComponent {\n  form: FormGroup;\n  loginMessage: string;\n  isLoginDisabled: boolean;\n  constructor (@Inject(UserSimpleService) protected userService: UserSimpleService, @Inject(FormBuilder) protected fb: FormBuilder, @Inject(DOCUMENT) protected document:any, translationService: TranslationService) {\n    super();\n    this.initTranslator(translationService);\n    translationService.isReady(tService => {\n      userService.waitForInit((whatever:any)=> {\n        this.form = this.fb.group({\n            \"username\": [\"\", Validators.required],\n            \"password\":[\"\", Validators.required]\n        });\n        this.form.valueChanges.subscribe(data => {\n          this.isLoginDisabled = this.form.status == 'INVALID';\n          if (this.isLoginDisabled) {\n            this.getErrors();\n          }\n        });\n        this.checkIfHasLoaded();\n      });\n    });\n  }\n\n  onLogin(event:any) {\n    if (this.isLoginDisabled || this.form.status == 'INVALID') {\n      this.getErrors();\n      return;\n    }\n    event.preventDefault();\n    this.isLoginDisabled = true;\n    this.userService.loginLocal(this.form.value.username, this.form.value.password)\n    .then((res:LoginResult) => {\n      console.log(res);\n      if (res.user) {\n        console.log(\"Login success, redirecting...\");\n        this.document.location.href = res.url;\n      } else {\n        this.loginMessage = res.message;\n        this.isLoginDisabled = false;\n      }\n    });\n  }\n\n  getErrors() {\n    if (this.form.controls['username'].hasError('required')) {\n      this.loginMessage = \"Please provide a username.\";\n    } else {\n      this.loginMessage = \"Please provide a password.\";\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'local-creds-header' | translate }}\n    \n    \n      \n      \n        \n        \n        \n        \n        \n          \n              Login \n          \n        \n        \n        \n          {{loginMessage}}\n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'local-creds-header\\' | translate }}                                                                                    Login                                             {{loginMessage}}                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocalAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocalAuthModule.html":{"url":"modules/LocalAuthModule.html","title":"module - LocalAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    LocalAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_imports\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/localAuth/app/local_auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocalAuthComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            LocalAuthComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { LocalAuthComponent }  from './local_auth.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ LocalAuthComponent ],\n  providers:    [ ],\n  bootstrap:    [ LocalAuthComponent ]\n})\nexport class LocalAuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResult.html":{"url":"classes/LoginResult.html","title":"class - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageRolesComponent.html":{"url":"components/ManageRolesComponent.html","title":"component - ManageRolesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageRolesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/manageRoles/app/manage_roles.component.ts\n\n\n    \n        Description\n    \n    \n        Manage Roles component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                manage-roles\n            \n\n\n\n\n            \n                templateUrl\n                ./manageRoles.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                hiddenUsers\n                            \n                            \n                                initSubs\n                            \n                            \n                                roles\n                            \n                            \n                                saveMsg\n                            \n                            \n                                saveMsgType\n                            \n                            \n                                searchFilter\n                            \n                            \n                                users\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                resetFilter\n                            \n                            \n                                saveCurrentUser\n                            \n                            \n                                setSaveMessage\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService, fb: FormBuilder, document: any, translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/manageRoles/app/manage_roles.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilterChange\n                        \n                        \n                    \n                \n            \n            \n                \nonFilterChange(roleFilter: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roleFilter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilter\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilter()\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCurrentUser($event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSaveMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetSaveMessage(msg: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"primary\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {username:'', name:'', email:'', roles:[]}\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hiddenUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['admin']\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveMsgType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"info\"\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : { name: null, role: null, prevName: null, prevRole:null, roles: [ {value: null, label:'Any', checked:true}]}\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { RolesService } from './shared/roles-service';\nimport { Role, User, LoginResult, SaveResult } from './shared/user-models';\nimport * as _ from \"lodash\";\nimport { LoadableComponent } from './shared/loadable.component';\nimport { TranslationService } from './shared/translation-service';\n\ndeclare var pageData :any;\ndeclare var jQuery: any;\n/**\n * Manage Roles component\n *\n *\n * Author: Shilo Banihit\n */\n@Component({\n  moduleId: module.id,\n  selector: 'manage-roles',\n  templateUrl: './manageRoles.html'\n})\n\n// TODO: find a way to remove jQuery dependency\n@Injectable()\nexport class ManageRolesComponent extends LoadableComponent {\n  users: any[] = [];\n  filteredUsers: any[];\n  searchFilter: { name: string, role: any, prevName: string, prevRole: any, roles: any[] } = { name: null, role: null, prevName: null, prevRole:null, roles: [ {value: null, label:'Any', checked:true}]};\n  roles: Role[];\n  hiddenUsers = ['admin'];\n  currentUser: any = {username:'', name:'', email:'', roles:[]};\n  saveMsg = \"\";\n  saveMsgType =\"info\";\n  initSubs: any;\n\n  constructor (@Inject(RolesService) protected rolesService: RolesService, @Inject(FormBuilder) fb: FormBuilder, @Inject(DOCUMENT) protected document:any, translationService:TranslationService) {\n    super();\n    this.initTranslator(translationService);\n    this.initSubs = rolesService.waitForInit((initStat:any) => {\n      this.initSubs.unsubscribe();\n      translationService.isReady(tService => {\n        rolesService.getBrandRoles().then((roles:any) => {\n          this.roles = roles;\n          _.forEach(roles, (role:any) => {\n            this.searchFilter.roles.push({value:role.name, label:role.name, checked:false});\n            _.forEach(role.users, (user:any) => {\n              if (!_.includes(this.hiddenUsers, user.username)) {\n                // flattening the tree, match by username\n                let existingUser: any = _.find(this.users, (existingUser:any) => { return existingUser.username == user.username});\n                if (_.isEmpty(existingUser)) {\n                  existingUser = user;\n                  existingUser.roles = [role.name];\n                  this.users.push(existingUser);\n                } else {\n                  existingUser.roles.push(role.name);\n                }\n              }\n            });\n          });\n          _.map(this.users, (user:any)=> {user.roleStr = _.join(user.roles, ', ')});\n          this.filteredUsers = this.users;\n          this.checkIfHasLoaded();\n        });\n      });\n    });\n  }\n\n  editUser(username:string) {\n    this.setSaveMessage();\n    this.currentUser = _.find(this.users, (user:any)=>{return user.username == username});\n    this.currentUser.newRoles = _.map(this.roles, (r:any) => {\n      return {name: r.name, id:r.id, hasRole: _.includes(this.currentUser.roles, r.name)};\n    });\n  }\n\n  saveCurrentUser($event:any) {\n    let hasRole:boolean = false;\n    let newRoles:any[] = [];\n    _.forEach(this.currentUser.newRoles, (role:any) => {\n      hasRole = hasRole || role.hasRole;\n      if (role.hasRole)\n        newRoles.push(role.name);\n    });\n    if (!hasRole) {\n      this.setSaveMessage(\"Please select at least one role!\", \"danger\");\n      return;\n    }\n    this.setSaveMessage(\"Saving...\", \"primary\");\n    this.rolesService.updateUserRoles(this.currentUser.id, newRoles).then((saveRes:SaveResult) => {\n      if (saveRes.status) {\n        this.currentUser.roles = newRoles;\n        this.currentUser.roleStr =  _.join(this.currentUser.roles);\n        this.setSaveMessage();\n        jQuery('#myModal').modal('hide');\n      } else {\n        this.setSaveMessage(saveRes.message, \"danger\");\n      }\n    });\n  }\n\n  setSaveMessage(msg:string=\"\", type:string=\"primary\") {\n    this.saveMsg = msg;\n    this.saveMsgType = type;\n  }\n\n  onFilterChange(roleFilter:any=null) {\n    if (roleFilter) {\n      roleFilter.checked = true;\n      this.searchFilter.role = roleFilter.value;\n      _.map(this.searchFilter.roles, (role:any)=> role.checked = roleFilter.value == role.value );\n    }\n    if (this.searchFilter.name != this.searchFilter.prevName || this.searchFilter.role != this.searchFilter.prevRole) {\n      this.searchFilter.prevName = this.searchFilter.name;\n      this.searchFilter.prevRole = this.searchFilter.role;\n      var nameFilter =_.isEmpty(this.searchFilter.name) ? \"\" : _.trim(this.searchFilter.name);\n      // run filter change...\n      this.filteredUsers = _.filter(this.users, (user:any) => {\n        var hasRole = this.searchFilter.role == null ?  true : _.includes(user.roles, this.searchFilter.role);\n        var hasNameMatch = nameFilter == \"\" ? true : (_.toLower(user.name).indexOf(_.toLower(this.searchFilter.name)) >= 0);\n        return hasRole && hasNameMatch;\n      });\n    }\n  }\n\n  resetFilter() {\n    this.searchFilter.name = null;\n    this.searchFilter.role = null;\n    _.map(this.searchFilter.roles, (role:any)=> role.checked = role.value == null);\n    this.onFilterChange();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'manage-roles-title' | translate }}\n      \n    \n    \n      \n        {{ 'manage-roles-filter-name' | translate }}\n        \n        Reset\n      \n      \n        \n      \n      \n        \n          {{ 'manage-roles-filter-label' | translate }}\n        \n        \n          \n            \n            \n              \n              &nbsp;{{roleFilter.label}}\n            \n          \n        \n        \n      \n      \n        \n      \n      \n        \n          \n            \n              {{ 'manage-roles-name' | translate }}\n              {{ 'manage-roles-email' | translate }}\n              {{ 'manage-roles-role' | translate }}\n              {{ 'manage-roles-action' | translate }}\n            \n          \n          \n            \n              {{user.name}}\n              {{user.email}}\n              {{user.roleStr}}\n              \n                Edit\n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n    \n      \n        &times;\n        {{ 'manage-roles-edit' | translate }}\n      \n      \n        \n          \n            \n              \n                \n                  {{ 'manage-roles-name' | translate }}\n                  {{currentUser.name}}\n                \n                \n                  {{ 'manage-roles-email' | translate }}\n                  {{currentUser.email}}\n                \n                \n                  {{ 'manage-roles-role' | translate }}\n                  \n                    \n                      \n                        \n                        {{role.name}}\n                      \n                    \n                  \n                \n              \n            \n          \n        \n        {{saveMsg}}\n      \n      \n        {{ 'manage-roles-save' | translate }}\n        {{ 'manage-roles-cancel' | translate }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'manage-roles-title\\' | translate }}                            {{ \\'manage-roles-filter-name\\' | translate }}                Reset                                                  {{ \\'manage-roles-filter-label\\' | translate }}                                                                               {{roleFilter.label}}                                                                                                                  {{ \\'manage-roles-name\\' | translate }}              {{ \\'manage-roles-email\\' | translate }}              {{ \\'manage-roles-role\\' | translate }}              {{ \\'manage-roles-action\\' | translate }}                                                          {{user.name}}              {{user.email}}              {{user.roleStr}}                              Edit                                                                                ×        {{ \\'manage-roles-edit\\' | translate }}                                                                                          {{ \\'manage-roles-name\\' | translate }}                  {{currentUser.name}}                                                  {{ \\'manage-roles-email\\' | translate }}                  {{currentUser.email}}                                                  {{ \\'manage-roles-role\\' | translate }}                                                                                                            {{role.name}}                                                                                                                                {{saveMsg}}                    {{ \\'manage-roles-save\\' | translate }}        {{ \\'manage-roles-cancel\\' | translate }}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageRolesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageRolesModule.html":{"url":"modules/ManageRolesModule.html","title":"module - ManageRolesModule","body":"\n                   \n\n\n\n\n    Modules\n    ManageRolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_imports\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageRoles/app/manage_roles.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ManageRolesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ManageRolesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ManageRolesComponent }  from './manage_roles.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ ManageRolesComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageRolesComponent ]\n})\nexport class ManageRolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageUsersModule.html":{"url":"modules/ManageUsersModule.html","title":"module - ManageUsersModule","body":"\n                   \n\n\n\n\n    Modules\n    ManageUsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_imports\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageUsers/app/manage_users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ManageUsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ManageUsersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { ManageUsersComponent }  from './manage_users.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ ManageUsersComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageUsersComponent ]\n})\nexport class ManageUsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-map.component.ts\n\n\n    \n        Description\n    \n    \n        Map Component.\nUses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\nUsage\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n*\n| Property Name  | Description                                                                                                                                                                                                                                                                                                                       | Required | Default                                                                                                                                                                                                                                                                                  |\n|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| label          | The label to show above the component                                                                                                                                                                                                                                                                                             | No       *|                                                                                                                                                                                                                                                                                          |\n| help           | Help text                                                                                                                                                                                                                                                                                                                         | No       *|                                                                                                                                                                                                                                                                                          |\n| tabId          | The name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.                                                                                                                                            | No       *|                                                                                                                                                                                                                                                                                          |\n| leafletOptions | The leaflet options object. See the Leaflet's documentation for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map) | No       | {zoom: 4, center:\" latLng([-24.673148, 134.074574]) }                                                                                                                                                                                                                              |\n| drawOptions    | The leaflet draw options object. See the Leaflet Draw's documentation for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.                         | No       | {position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}} |\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-mapdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-map.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coordinatesHelpShow\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                toggleCoordinatesHelp\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-map.component.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleCoordinatesHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleCoordinatesHelp()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-map.component.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesHelpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:366\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MapField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:364\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport {  Map,  GeoJSON,   } from 'leaflet';\ndeclare var omnivore: any;\ndeclare var L: any;\ndeclare var jQuery: any;\n\n\n/**\n * Map Model\n *\n *\n * @author Andrew Brazzatti\n *\n */\nexport class MapField extends FieldBase {\n\n\n  initialised: boolean = false;\n  tabId: string;\n  importDataString: string = \"\";\n\n  layerGeoJSON: any = {};\n  map: Map;\n  importFailed:boolean = false;\n  layers = [];\n  drawnItems: any = new L.FeatureGroup();\n  googleMaps = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n  googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n  coordinatesHelp?: any;\n\n\n  /*\n  *\n  * Draw options\n  */\n  /* Draw options that we do not want to be overridden by form config as it'll break functionality */\n  masterDrawOptions: any = {\n    edit: {\n      featureGroup: this.drawnItems\n    },\n  };\n\n\n  defaultDrawOptions: any = {\n    position: 'topright',\n    edit: {\n      featureGroup: this.drawnItems\n    },\n    draw: {\n      marker: {\n        icon: L.icon({\n          iconSize: [25, 41],\n          iconAnchor: [13, 41],\n          iconUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png',\n          shadowUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png'\n        })\n      },\n      circlemarker: false,\n      circle: false\n    }\n  };\n\n  drawOptions: any = this.defaultDrawOptions;\n\n  /*\n  *\n  * Leaf options\n  */\n  masterLeafletOptions = {\n    layers: [this.googleMaps, this.drawnItems],\n  };\n\n  defaultLeafletOptions = {\n    zoom: 4,\n    center: L.latLng([-24.673148, 134.074574])\n  };\n\n  leafletOptions: any = this.defaultLeafletOptions;\n\n  layersControl = {\n    baseLayers: {\n      'Google Maps': this.googleMaps,\n      'Google Hybrid': this.googleHybrid\n    }\n  };\n\n  mainTabId: any;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'MapField';\n\n    this.leafletOptions = options['leafletOptions'] || this.defaultLeafletOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.leafletOptions = _.merge(this.leafletOptions, this.masterLeafletOptions);\n\n    this.drawOptions = options['drawOptions'] || this.drawOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.drawOptions = _.merge(this.drawOptions, this.masterDrawOptions);\n\n    this.tabId = options['tabId'] || null;\n\n    this.layerGeoJSON = options.value;\n    this.mainTabId = options['mainTabId'] || null;\n    this.coordinatesHelp =  this.getTranslated(options.coordinatesHelp, undefined);\n  }\n\n  onMapReady(map: Map) {\n\n    this.map = map;\n\n    let that = this;\n\n    this.registerMapEventHandlers(map);\n    this.setValue(this.layerGeoJSON);\n\n\n    if (this.tabId === null) {\n      map.invalidateSize();\n      map.fitBounds(this.drawnItems.getBounds());\n    } else {\n      if (this.editMode) {\n        // Note: this assumes the tabId is unqiue in the page, which may not be when there are multiple tab layouts.\n        jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n          const curTabId = e.target.href.split('#')[1];\n          if (curTabId == that.tabId) {\n            that.initMap(map, that);\n          }\n        });\n      } else {\n        const field = this.fieldMap._rootComp.getFieldWithId(this.mainTabId, this.fieldMap._rootComp.fields);\n        field.onAccordionCollapseExpand.subscribe((event) => {\n          if (event.shown == true && event.tabId == that.tabId && !that.initialised) {\n            that.initMap(map, that);\n            that.initialised = true;\n          }\n        });\n      }\n    }\n  }\n\n  public initMap(map, that) {\n    map.invalidateSize();\n\n      try {\n        // if there are no layers present this will throw an error\n        map.fitBounds(this.drawnItems.getBounds());\n      } catch (e) {\n\n      }\n\n  }\n\n\n\n  registerMapEventHandlers(map: Map) {\n    let that = this;\n    map.on(L.Draw.Event.CREATED, function(e: any) {\n      var type = e.layerType,\n        layer = e.layer;\n      that.layers.push(layer);\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n      return false;\n    });\n\n    map.on('draw:edited', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        let layerIndex = _.findIndex(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n        if(layerIndex == -1) {\n          that2.layers.push(layer);\n        } else {\n          that2.layers[layerIndex] = layer;\n        }\n\n      });\n    });\n\n    map.on('draw:editstop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deletestop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deleted', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        _.remove(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n      });\n    });\n  }\n\n\n  drawLayers() {\n    this.drawnItems.clearLayers();\n    let geoJSONLayer: GeoJSON = L.geoJSON(this.layerGeoJSON);\n    this.layers = [];\n    let that = this;\n    geoJSONLayer.eachLayer(layer => {\n      layer.addTo(that.drawnItems);\n      that.layers.push(layer);\n    });\n  }\n\n\n  postInit(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.layerGeoJSON = valueElem;\n    }\n\n    this.formModel = new FormControl(this.layerGeoJSON || {});\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n      this.formModel.patchValue(this.layerGeoJSON, { emitEvent: false });\n      this.formModel.markAsTouched();\n    }\n  }\n\n  setEmptyValue() {\n    this.layerGeoJSON = {};\n    return this.layerGeoJSON;\n  }\n\n  importData() {\n    if(this.importDataString.length > 0) {\n      try {\n      if(this.importDataString.indexOf(\" {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      } else {\n        let parsedLayers = L.geoJSON(JSON.parse(this.importDataString));\n        let that = this;\n        parsedLayers.eachLayer(layer => {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      }\n      this.layerGeoJSON = L.featureGroup(this.layers).toGeoJSON();\n      this.setValue(this.layerGeoJSON);\n    } catch (e) {\n      this.importFailed = true;\n    }\n\n    }\n\n    return false;\n  }\n\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbMapDataTemplate = './field-map.html';\nif (typeof aotMode == 'undefined') {\n  rbMapDataTemplate = '../angular/shared/form/field-map.html';\n}\n\n/**\n* #### Map Component.\n*\n* Uses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\n*\n* #### Usage\n* ```\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n* ```\n*\n*| Property Name  | Description                                                                                                                                                                                                                                                                                                                       | Required | Default                                                                                                                                                                                                                                                                                  |\n*|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n*| label          | The label to show above the component                                                                                                                                                                                                                                                                                             | No       *|                                                                                                                                                                                                                                                                                          |\n*| help           | Help text                                                                                                                                                                                                                                                                                                                         | No       *|                                                                                                                                                                                                                                                                                          |\n*| tabId          | The name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.                                                                                                                                            | No       *|                                                                                                                                                                                                                                                                                          |\n*| leafletOptions | The leaflet options object. See the [Leaflet's documentation](http://leafletjs.com/reference-1.3.0.html#map-option) for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map) | No       | ```{zoom: 4, center:\" latLng([-24.673148, 134.074574]) }```                                                                                                                                                                                                                              |\n*| drawOptions    | The leaflet draw options object. See the [Leaflet Draw's documentation](https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html#options) for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.                         | No       | ```{position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}}``` |\n*/\n@Component({\n  selector: 'rb-mapdata',\n  templateUrl: './field-map.html'\n})\nexport class MapComponent extends SimpleComponent {\n  field: MapField;\n\n  coordinatesHelpShow: boolean;\n\n  ngAfterViewInit() {\n    if (!this.field.editMode) {\n      this.field.initMap(this.field.map, this.field);\n    }\n  }\n\n  public toggleCoordinatesHelp() {\n    this.coordinatesHelpShow = !this.coordinatesHelpShow;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n  \n\n  \n  \n  \n  \n    Enter KML or GeoJSON\n      \n    \n    {{field.coordinatesHelp}}\n    \n  Import Entered text is not a valid KML or GeoJSON\n\n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{field.label}} {{ getRequiredLabelStr()}}                     Enter KML or GeoJSON              {{field.coordinatesHelp}}      Import Entered text is not a valid KML or GeoJSON    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownTextAreaComponent.html":{"url":"components/MarkdownTextAreaComponent.html","title":"component - MarkdownTextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarkdownTextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                markdown-text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  Preview\n  \n  {{field.label}} is required\n  {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MarkdownTextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:257\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}            Preview    {{field.label}} is required  {{field.validationMessages.required}}  {{field.label}}    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownTextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MintLookupDataService.html":{"url":"classes/MintLookupDataService.html","title":"class - MintLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MintLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getCompleterDescription\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, fields: string[], compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: any[], titleCompleterDescription: string, searchFieldStr: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:344\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fields\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleCompleterDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchFieldStr\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:344\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:376\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertToItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToItem(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CompleterItem | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCompleterDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCompleterDescription(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:407\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:419\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(term: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MintRelationshipLookup.html":{"url":"classes/MintRelationshipLookup.html","title":"class - MintRelationshipLookup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MintRelationshipLookup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                            \n                                searchFieldStr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, searchFieldStr: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:611\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchFieldStr\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Http\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:611\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFieldStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:610\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(term, lower)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:618\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lower\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MultivalueFieldPipe.html":{"url":"pipes/MultivalueFieldPipe.html","title":"pipe - MultivalueFieldPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MultivalueFieldPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/MultivalueFieldPipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        multivalue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(values: string, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/report/app/MultivalueFieldPipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'multivalue'\n})\nexport class MultivalueFieldPipe implements PipeTransform {\n\n\n    public transform(values:string, args?:any[]):string {\n      var output = \"\";\n      for(var i=0; i \" + values[i] +\"\";\n      }\n      output = output + \"\";\n      return output;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PDFListComponent.html":{"url":"components/PDFListComponent.html","title":"component - PDFListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PDFListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-pdflist.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display PDFs related to this record\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-pdf-list\n            \n\n\n\n\n            \n                templateUrl\n                ./field-pdflist.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDownloadUrl\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDownloadUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDownloadUrl(attachment)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-pdflist.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attachment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-pdflist.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PDFListField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-pdflist.component.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport moment from 'moment-es6';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PDFListField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n  pdfAttachments: object[];\n  latestPdf: object;\n  startsWith:string;\n  showHistoryTable:boolean = false;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n    this.startsWith = options['startsWith'] || 'rdmp-pdf';\n    var relatedObjects = this.relatedObjects;\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.pdfAttachments = [];\n  }\n\n\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\n/**\n* Component to display PDFs related to this record\n*\n*/\n@Component({\n  selector: 'rb-pdf-list',\n  templateUrl: './field-pdflist.html'\n})\nexport class PDFListComponent extends SimpleComponent implements OnInit {\n  field: PDFListField;\n\n  public ngOnInit() {\n    const oid = this.fieldMap._rootComp.oid;\n    if(oid) {\n      let allAttachmentsPromise = this.field.recordsService.getAttachments(oid);\n      let matchingExpression = new RegExp(`${this.field.startsWith}-[0-9a-fA-F]{32}-[0-9]+\\.pdf`);\n      var that = this;\n      allAttachmentsPromise.then(allAttachments => {\n        this.field.latestPdf = null;\n        _.forEach(allAttachments, (attachment:any) => {\n          if(matchingExpression.test(attachment.label)) {\n\n            attachment.dateUpdated = moment(attachment.dateUpdated).format('LLL');\n            this.field.pdfAttachments.push(attachment);\n            if(this.field.latestPdf == null || moment(this.field.latestPdf['dateUpdated']).isBefore(moment(attachment.dateUpdated))) {\n              this.field.latestPdf = attachment;\n            }\n          }\n        });\n\n        this.field.pdfAttachments.sort(function compare(a, b) {\n          let before = moment(a['dateUpdated']).isBefore(moment(b['dateUpdated']));\n          //We want descending order so let's reverse it\n          return before ? -1 : 1;\n        });\n\n      });\n\n    }\n  }\n\n  public getDownloadUrl(attachment) {\n    const oid = this.fieldMap._rootComp.oid;\n    return  `${this.field.recordsService.getBrandingAndPortalUrl}/record/${oid}/datastream?datastreamId=${attachment.label}`\n  }\n}\n\n    \n\n    \n        \n\n 0\">\n  &nbsp; Download a PDF of this plan\n   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->\n\n\n\n  &nbsp; Download a PDF of this plan\n  \n    \n    Toggle Dropdown\n  \n  \n    Download a previous version\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n              \n                  Date createdDownload\n              \n          \n          \n            \n              {{ item.dateUpdated }}\n               Download\n            \n          \n        \n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">    Download a PDF of this plan   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->    Download a PDF of this plan          Toggle Dropdown        Download a previous version                                                                Date createdDownload                                                            {{ item.dateUpdated }}               Download                                                  Close            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PDFListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterRetrieverComponent.html":{"url":"components/ParameterRetrieverComponent.html","title":"component - ParameterRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                parameter-retriever\n            \n\n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUrlParameter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrlParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrlParameter(param: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:735\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:728\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParameterRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:726\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plan.html":{"url":"classes/Plan.html","title":"class - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboardTitle\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateModified\n                            \n                            \n                                oid\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashboardTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateModified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanTable.html":{"url":"classes/PlanTable.html","title":"class - PlanTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Plan[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishDataLocationRefreshComponent.html":{"url":"components/PublishDataLocationRefreshComponent.html","title":"component - PublishDataLocationRefreshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishDataLocationRefreshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-publish-data-location-refresh.component.ts\n\n\n    \n        Description\n    \n    \n        Component to refresh data pub data locations from the related Data Record\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                publish-data-location-refresh\n            \n\n\n\n\n            \n                templateUrl\n                ./field-publish-data-location-refresh.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishDataLocationRefreshField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publish-data-location-refresh.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\n\ndeclare var jQuery: any;\n/**\n * Published Data Refresher Component Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PublishDataLocationRefreshField extends FieldBase {\n  isGettingAttachments: boolean;\n  origDisabledExpr: string;\n  recordsService: RecordsService;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n\n    this.value = options['value'];\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.origDisabledExpr = options['disabledExpression'];\n  }\n\n  public getAttachments(event) {\n    event.preventDefault();\n    this.options['disabledExpression'] = \"true\";\n    this.recordsService.getRecordMeta(this.value).then(data => {\n      this.onValueUpdate.emit(data);\n      this.options['disabledExpression'] = this.origDisabledExpr;\n    });\n  }\n\n  getRelatedRecordId() {\n    this.value = this.fieldMap._rootComp.relatedRecordId;\n  }\n}\n\n/**\n* Component to refresh data pub data locations from the related Data Record\n*\n*\n*\n* @author Shilo Banihit\n*/\n@Component({\n  selector: 'publish-data-location-refresh',\n  templateUrl: './field-publish-data-location-refresh.component.html'\n})\nexport class PublishDataLocationRefreshComponent extends SimpleComponent {\n  field: PublishDataLocationRefreshField;\n}\n\n    \n\n    \n        \n  {{ field.label }}\n  \n  {{field.help}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ field.label }}    {{field.help}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishDataLocationRefreshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishDataLocationSelectorComponent.html":{"url":"components/PublishDataLocationSelectorComponent.html","title":"component - PublishDataLocationSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishDataLocationSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-publishdatalocationselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                publish-data-location-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-publishdatalocationselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editingNotes\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editNotes\n                            \n                            \n                                    Public\n                                getAbsUrl\n                            \n                            \n                                    Public\n                                getDatalocations\n                            \n                            \n                                    Public\n                                hideEditNotes\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                saveNotes\n                            \n                            \n                                    Public\n                                selectAllLocations\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNotes(dataLocation, i)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataLocation\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAbsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAbsUrl(location: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDatalocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatalocations()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideEditNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideEditNotes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveNotes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectAllLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectAllLocations(checked)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editingNotes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {notes: '', index:-1}\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:156\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishDataLocationSelectorField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport * as Uppy from 'uppy';\n\ndeclare var jQuery: any;\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PublishDataLocationSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  value: any[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  recordsService: RecordsService;\n  columns: object[];\n  newLocation:any = {type:\"url\", location:\"\",notes:\"\"};\n  dataTypes:object[] = [{\n    'label': 'URL',\n    'value': 'url',\n  },\n  {\n    'label': 'Physical location',\n    'value': 'physical',\n  },\n  {\n    'label': 'File path',\n    'value': 'file',\n  },\n  {\n    'label': 'Attachment',\n    'value': 'attachment'\n  }\n];\n\n  dataTypeLookup:any = {\n    'url':\"URL\",\n    'physical':\"Physical location\",\n    'attachment':\"Attachment\",\n    'file':\"File path\"\n  }\n\n  editNotesButtonText: string;\n  editNotesTitle: string;\n  cancelEditNotesButtonText: string;\n  applyEditNotesButtonText: string;\n  editNotesCssClasses: any;\n  typeHeader: string;\n  locationHeader: string;\n  notesHeader: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.accessDeniedObjects = [];\n\n    this.columns = options['columns'] || [];\n\n    this.editNotesButtonText = this.getTranslated(options['editNotesButtonText'], 'Edit');\n    this.editNotesTitle = this.getTranslated(options['editNotesTitle'], 'Edit Notes');\n    this.cancelEditNotesButtonText = this.getTranslated(options['cancelEditNotesButtonText'], 'Cancel');\n    this.applyEditNotesButtonText = this.getTranslated(options['applyEditNotesButtonText'], 'Apply');\n    this.editNotesCssClasses = options['editNotesCssClasses'] || 'form-control';\n    this.typeHeader =  this.getTranslated(options['typeHeader'], 'Type');\n    this.locationHeader =  this.getTranslated(options['locationHeader'], 'Location');\n    this.notesHeader =  this.getTranslated(options['notesHeader'], 'Notes');\n\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n  }\n\n  setValue(value:any, emitEvent:boolean = true) {\n    this.formModel.setValue(value, {emitEvent: emitEvent, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n    this.formModel.markAsDirty();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n\n  addLocation() {\n    this.value.push(this.newLocation);\n    this.setValue(this.value);\n    this.newLocation = {type:\"url\", location:\"\",notes:\"\"};\n  }\n\n  appendLocation(newLoc:any) {\n    this.value.push(newLoc);\n    this.setValue(this.value, true);\n  }\n\n  clearPendingAtt(value) {\n    _.each(value, (val:any) => {\n      if (val.type == 'attachment') {\n       _.unset(val, 'pending');\n      }\n    });\n  }\n\n  public populateDataLocation(oid, config: any) {\n      console.log(oid);\n      this.recordsService.getRecordMeta(oid).then(record => {\n        this.value = record.dataLocations;\n      });\n }\n\n  removeLocation(loc: any) {\n    _.remove(this.value, (val:any) => {\n      return val.type == loc.type && val.name == loc.name && val.location == loc.location;\n    });\n    this.setValue(this.value);\n  }\n}\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'publish-data-location-selector',\n  templateUrl: './field-publishdatalocationselector.html'\n})\nexport class PublishDataLocationSelectorComponent extends SimpleComponent {\n  field: PublishDataLocationSelectorField;\n  editingNotes: any = {notes: '', index:-1};\n\n  public ngOnInit() {\n\n  }\n\n  public selectAllLocations(checked){\n    _.each(this.field.value, (dataLocation:any) => {\n      dataLocation.selected = checked;\n    });\n  }\n\n  public getDatalocations() {\n    return this.field.value;\n  }\n\n  public getAbsUrl(location:string) {\n    return `${this.field.recordsService.getBrandingAndPortalUrl}/record/${location}`\n  }\n\n  public editNotes(dataLocation, i) {\n    this.editingNotes = {notes: dataLocation.notes, index:i};\n    jQuery(`#${this.field.name}_editnotes`).modal('show');\n  }\n\n  public hideEditNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n  }\n\n  public saveNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n    this.field.value[this.editingNotes.index].notes = this.editingNotes.notes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n    \n    \n      \n        \n          Select\n          {{ field.typeHeader }}\n          {{ field.locationHeader }}\n          {{ field.notesHeader }}\n        \n      \n      \n        \n          \n          {{ field.dataTypeLookup[dataLocation.type] }}\n          \n            \n            {{ dataLocation.location }}\n            \n            \n              \n                {{ dataLocation.name }}\n              \n              \n                {{ dataLocation.name }}\n              \n            \n          \n          \n            {{ dataLocation.notes }}\n            {{ field.editNotesButtonText }}\n          \n\n        \n      \n    \n  \n  Export -->\n\n\n\n\n  \n    \n      \n        &times;\n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                        Select          {{ field.typeHeader }}          {{ field.locationHeader }}          {{ field.notesHeader }}                                                {{ field.dataTypeLookup[dataLocation.type] }}                                  {{ dataLocation.location }}                                                      {{ dataLocation.name }}                                            {{ dataLocation.name }}                                                          {{ dataLocation.notes }}            {{ field.editNotesButtonText }}                                Export -->                    ×                                                                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishDataLocationSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RbValidator.html":{"url":"classes/RbValidator.html","title":"class - RbValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RbValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                Custom RB-Specific Validators - static methods only\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isEmpty\n                            \n                            \n                                    Static\n                                noEmptyInGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/validators.ts:34\n                \n            \n\n\n            \n                \n                    Forces validation on empty / null values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            noEmptyInGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    noEmptyInGroup(field: any, dependentFieldNames: string[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/validators.ts:43\n                \n            \n\n\n            \n                \n                    Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dependentFieldNames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidatorFn, Validators, AbstractControl, FormGroup } from '@angular/forms';\nimport * as _ from \"lodash\";\n\n/**\n * Custom RB-Specific Validators - static methods only\n *\n * Author: Shilo Banihit\n *\n */\nexport class RbValidator {\n\n  /**\n  * Forces validation on empty / null values\n  */\n  static isEmpty(control: AbstractControl ): boolean {\n    return (control && (_.isEmpty(control.value) || control.value.length == 0));\n  }\n\n  /**\n  *\n  * Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n  *\n  */\n  static noEmptyInGroup(field: any, dependentFieldNames: string[]): ValidatorFn {\n    return (control: AbstractControl ): {[key: string]: any} => {\n      const group = field.formModel;\n      if (group) {\n        const status: {empty: boolean, emptyFields: any[]} = {empty: false, emptyFields: []};\n        _.forEach(dependentFieldNames, (f:any)=> {\n          const isEmpty = RbValidator.isEmpty(group.controls[f]);\n          if (isEmpty) {\n            status.emptyFields.push(f);\n          }\n          status.empty = status.empty || (isEmpty != null);\n        });\n        const retval = status.empty ? status : null;\n        return retval;\n      }\n      console.log(`Group doesn't exist yet: ${field.name}`);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordActionResult.html":{"url":"classes/RecordActionResult.html","title":"class - RecordActionResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordActionResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                oid\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:225\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordMetadataRetrieverComponent.html":{"url":"components/RecordMetadataRetrieverComponent.html","title":"component - RecordMetadataRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordMetadataRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/record-meta.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-metadata-retriever\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RecordMetadataRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/record-meta.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { RecordsService } from './records.service';\nimport { SimpleComponent } from './field-simple.component';\n\nexport class RecordMetadataRetrieverField extends FieldBase {\n  parameterName: string;\n  recordsService: RecordsService;\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.parameterName = options.parameterName || '';\n  }\n\n  public publishMetadata(oid: any, config: any) {\n    this.recordsService.getRecordMeta(oid).then(data => {\n      data.oid = oid;\n      this.onValueUpdate.emit(data);\n    });\n  }\n\n}\n\n@Component({\n  selector: 'record-metadata-retriever',\n  template: `\n  `,\n})\nexport class RecordMetadataRetrieverComponent extends SimpleComponent {\n  field: RecordMetadataRetrieverField;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordMetadataRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecordSearchModule.html":{"url":"modules/RecordSearchModule.html","title":"module - RecordSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    RecordSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_RecordSearchComponent_providers\n\n\n\ncluster_RecordSearchModule_imports\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nLocation\n\nLocation\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/record_search/app/record_search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RecordSearchComponent\n                        \n                        \n                            RecordSearchRefinerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            RecordSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { RecordSearchComponent }  from './';\nimport { RecordSearchRefinerComponent } from './';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule],\n  declarations: [ RecordSearchRefinerComponent, RecordSearchComponent  ],\n  providers:    [ RecordSearchRefinerComponent ],\n  bootstrap:    [ RecordSearchComponent]\n})\nexport class RecordSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchParams.html":{"url":"classes/RecordSearchParams.html","title":"class - RecordSearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRefiners\n                            \n                            \n                                basicSearch\n                            \n                            \n                                recordType\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActiveRefiner\n                            \n                            \n                                clear\n                            \n                            \n                                filterActiveRefinersWithNoData\n                            \n                            \n                                getHttpQuery\n                            \n                            \n                                getRefinerConfig\n                            \n                            \n                                getRefinerConfigs\n                            \n                            \n                                hasActiveRefiners\n                            \n                            \n                                parseQueryStr\n                            \n                            \n                                setFacetValues\n                            \n                            \n                                setRefinerConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recType: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:261\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeRefiners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:260\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basicSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:259\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:258\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refinerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RecordSearchRefiner[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:261\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActiveRefiner\n                        \n                        \n                    \n                \n            \n            \n                \naddActiveRefiner(refiner: RecordSearchRefiner)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refiner\n                                    \n                                                RecordSearchRefiner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterActiveRefinersWithNoData\n                        \n                        \n                    \n                \n            \n            \n                \nfilterActiveRefinersWithNoData()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:341\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHttpQuery\n                        \n                        \n                    \n                \n            \n            \n                \ngetHttpQuery(searchUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRefinerConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetRefinerConfig(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRefinerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetRefinerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasActiveRefiners\n                        \n                        \n                    \n                \n            \n            \n                \nhasActiveRefiners()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseQueryStr\n                        \n                        \n                    \n                \n            \n            \n                \nparseQueryStr(queryStr: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFacetValues\n                        \n                        \n                    \n                \n            \n            \n                \nsetFacetValues(facets: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    facets\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRefinerConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetRefinerConfig(config: RecordSearchRefiner[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                RecordSearchRefiner[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchRefiner.html":{"url":"classes/RecordSearchRefiner.html","title":"class - RecordSearchRefiner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchRefiner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeValue\n                            \n                            \n                                alwaysActive\n                            \n                            \n                                name\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                typeLabel\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setCurrentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:237\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:237\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alwaysActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:235\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:231\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:233\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:236\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:234\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordSearchRefinerComponent.html":{"url":"components/RecordSearchRefinerComponent.html","title":"component - RecordSearchRefinerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordSearchRefinerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/record_search/app/record-search-refiner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-search-refiner\n            \n\n\n\n\n            \n                templateUrl\n                ./record_search_refiner.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                hasValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSearching\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onApplyFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSearching\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refinerConfig\n                    \n                \n                \n                    \n                        Type :         RecordSearchRefiner\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onApplyFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: any, refinerValue: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/record_search/app/record-search-refiner.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    refinerValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue()\n                \n            \n\n\n            \n                \n                    Defined in angular/record_search/app/record-search-refiner.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input, Output, ElementRef, EventEmitter } from '@angular/core';\nimport { RecordSearchRefiner} from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'record-search-refiner',\n  templateUrl: './record_search_refiner.html'\n})\nexport class RecordSearchRefinerComponent {\n  @Input() refinerConfig: RecordSearchRefiner;\n  @Input() isSearching: boolean;\n  @Output() onApplyFilter: EventEmitter = new EventEmitter();\n\n  applyFilter(event:any, refinerValue:any = null) {\n    event.preventDefault();\n    if (this.hasValue()) {\n      this.refinerConfig.activeValue = refinerValue;\n      this.onApplyFilter.emit(this.refinerConfig);\n    }\n  }\n\n  hasValue() {\n    return !_.isEmpty(this.refinerConfig.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ refinerConfig.title | translate }}\n    \n  \n  \n     {{ refinerConfig.typeLabel | translate }} \n    \n      \n      \n        {{ 'search-refine-apply-filter' | translate }}\n      \n    \n    \n      \n         0 && facetValue.value\">\n           {{ facetValue.value }} ({{ facetValue.count }})\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ refinerConfig.title | translate }}             {{ refinerConfig.typeLabel | translate }}                         {{ \\'search-refine-apply-filter\\' | translate }}                             0 && facetValue.value\">           {{ facetValue.value }} ({{ facetValue.count }})                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordSearchRefinerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectDataComponent.html":{"url":"components/RelatedObjectDataComponent.html","title":"component - RelatedObjectDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectdata.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-relatedobjectdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectdata.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sanitizeUrl\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-relatedobjectdata.component.ts:135\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanitizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanitizeUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-relatedobjectdata.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RelatedObjectDataField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectdata.component.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/zip';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectDataField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n\n    var relatedObjects = this.relatedObjects;\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n\n  }\n\n/**\n* Loading the metadata for each related object in the array\n*/\n  asyncLoadData() {\n    let getRecordMetaObs = [];\n    var that = this;\n    _.forEach(this.value, (item: any) => {\n      getRecordMetaObs.push(fromPromise(this.recordsService.getRecordMeta(item.id)).flatMap(meta => {\n        if (!meta) {\n          that.failedObjects.push(meta);\n        } else if (meta['status'] == \"Access Denied\") {\n          that.accessDeniedObjects.push(meta);\n        } else if (meta['title']) {\n          that.relatedObjects.push(meta);\n        } else {\n          that.failedObjects.push(meta);\n        }\n        return Observable.of(null);\n      }));\n    });\n    if ( getRecordMetaObs.length > 0 ) {\n      return Observable.zip(...getRecordMetaObs);\n    } else {\n      return Observable.of(null);\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n    this.formModel = new FormControl(this.value || []);\n\n    if (this.value) {\n      this.setValue(this.value);\n    }\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    this.formModel.patchValue(value, { emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbRelatedObjectDataTemplate = './field-relatedobjectdata.html';\nif (typeof aotMode == 'undefined') {\n  rbRelatedObjectDataTemplate = '../angular/shared/form/field-relatedobjectdata.html';\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-relatedobjectdata',\n  templateUrl: './field-relatedobjectdata.html'\n})\nexport class RelatedObjectDataComponent extends SimpleComponent {\n  field: RelatedObjectDataField;\n\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n\n  sanitizeUrl(url:string){\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n              {{ header.label }}\n          \n      \n      \n        \n          \n            \n              \n              \n              \n              {{ column.link.pattern | stringTemplate:item }}\n              \n                \n                  \n                    {{ item[column.property]['label'] }}\n                  \n                  \n                    \n                      {{ item[column.property]['label'] }}\n                    \n                  \n                \n                \n                  {{item[column.property]}}\n                \n              \n              {{ item[column.property] }}\n            \n          \n        \n      \n    \n     0\">There were {{ field.failedObjects.length }} records that failed to load\n     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ header.label }}                                                                                                            {{ column.link.pattern | stringTemplate:item }}                                                                    {{ item[column.property][\\'label\\'] }}                                                                              {{ item[column.property][\\'label\\'] }}                                                                                        {{item[column.property]}}                                            {{ item[column.property] }}                                             0\">There were {{ field.failedObjects.length }} records that failed to load     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectSelectorComponent.html":{"url":"components/RelatedObjectSelectorComponent.html","title":"component - RelatedObjectSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-RelatedObjectSelector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasFilteredResults\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         RelatedObjectSelectorField\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:143\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasFilteredResults\n                        \n                        \n                    \n                \n            \n            \n                \nhasFilteredResults()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector, EventEmitter} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { DashboardService } from '../dashboard-service';\nimport { PlanTable, Plan } from '../dashboard-models';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  hasInit: boolean;\n  dashboardService: DashboardService;\n  plans: PlanTable;\n  searchFilterName: any;\n  filteredPlans: Plan[];\n  recordType:string;\n  columnTitle:string;\n\n  relatedObjectSelected:EventEmitter = new EventEmitter();\n  resetSelectorEvent: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RelatedObjectDataField';\n\n    this.columnTitle = options['columnTitle'] || \"Record title\";\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordType = options['recordType'];\n    this.dashboardService = this.getFromInjector(DashboardService);\n    var that = this;\n    this.dashboardService.getAllRecordsCanEdit(this.recordType,'').then((draftPlans: PlanTable) => {\n      this.plans = draftPlans;\n    });\n  }\n\n  recordSelected(record: any, config: any) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n  }\n\n  recordSelectedEmit(record, event) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n    this.relatedObjectSelected.emit(record.oid);\n  }\n\n  resetSelector() {\n    this.setEmptyValue();\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(null);\n    }\n    this.resetSelectorEvent.emit();\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n        if(this.fieldMap) {\n          this.fieldMap._rootComp.setRelatedRecordId(this.value.oid);\n        }\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.value=value;\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = {};\n    return this.value;\n  }\n\n  onFilterChange() {\n    this.filteredPlans = _.filter(this.plans.items, (plan: any) => {\n      plan.selected = false;\n      const title = _.isArray(plan.title) ? plan.title[0] : plan.title;\n      return _.toLower(title).includes(_.toLower(this.searchFilterName));\n    });\n  }\n\n  resetFilter() {\n    this.searchFilterName = null;\n    this.onFilterChange();\n  }\n\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-RelatedObjectSelector',\n  templateUrl: './field-relatedobjectselector.html'\n})\nexport class RelatedObjectSelectorComponent extends SimpleComponent {\n  @Input() field: RelatedObjectSelectorField;\n\n  hasFilteredResults() {\n    return this.field.searchFilterName && !_.isEmpty(_.trim(this.field.searchFilterName)) && this.field.filteredPlans && this.field.filteredPlans.length > 0;\n  }\n}\n\n    \n\n    \n        \n   {{field.label}}\n   {{ field.value.title }}\n\n\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n       {{ field.value.title }} {{ 'change-text' | translate }}\n    \n    \n      \n        {{ 'search-by-name' | translate }}\n        \n        {{ 'transfer-ownership-reset' | translate }}\n      \n      \n      \n        \n          \n            \n              {{ field.columnTitle }}\n            \n          \n          \n            \n              {{ plan.title }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{field.label}}   {{ field.value.title }}            {{field.label}} {{ getRequiredLabelStr()}}                         {{ field.value.title }} {{ \\'change-text\\' | translate }}                      {{ \\'search-by-name\\' | translate }}                {{ \\'transfer-ownership-reset\\' | translate }}                                                              {{ field.columnTitle }}                                                          {{ plan.title }}                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepeatableComponent.html":{"url":"classes/RepeatableComponent.html","title":"class - RepeatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepeatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:242\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableGroupComponent.html":{"url":"components/RepeatableGroupComponent.html","title":"component - RepeatableGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Repeatable Generic Component\n* {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n\n    \n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-group\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                                                {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableTextfieldComponent.html":{"url":"components/RepeatableTextfieldComponent.html","title":"component - RepeatableTextfieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableTextfieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeElem\n                            \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableTextfieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{field.label}} {{ getRequiredLabelStr() }}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                  {{field.label}} is required      {{field.validationMessages.required}}                  {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableTextfieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableVocabComponent.html":{"url":"components/RepeatableVocabComponent.html","title":"component - RepeatableVocabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableVocabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-repeatable.component.ts\n\n\n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-vocab\n            \n\n\n\n            \n                template\n                \n  \n    \n    {{field.label}}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableVocabComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:319\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableVocab\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:318\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{field.label}}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                           {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableVocabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Report.html":{"url":"classes/Report.html","title":"class - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                filter\n                            \n                            \n                                name\n                            \n                            \n                                solrQuery\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            solrQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_imports\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/report.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MultivalueFieldPipe\n                        \n                        \n                            ReportComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ReportService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ReportComponent }  from './report.component';\nimport { MultivalueFieldPipe }  from './MultivalueFieldPipe';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport { ReportService } from './shared/report-service';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule, NKDatetimeModule],\n  declarations: [ ReportComponent, MultivalueFieldPipe ],\n  providers:    [  ReportService ],\n  bootstrap:    [ ReportComponent ]\n})\nexport class ReportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportResults.html":{"url":"classes/ReportResults.html","title":"class - ReportResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getReport\n                            \n                            \n                                getReportResults\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/report-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDates\n                        \n                        \n                    \n                \n            \n            \n                \nformatDates(response: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetReport(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReportResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetReportResults(name: string, pageNumber: number, params: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { Report, ReportResults } from './report-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ReportService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getReport(name:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/getReport?name=`+name, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as Report);\n  }\n\n  getReportResults(name:string, pageNumber:number, params:object): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    var url = `${this.brandingAndPortalUrl}/admin/getReportResults?name=`+name+`&start=`+start+`&rows=`+rows;\n    for(var key in params) {\n      url=url+'&'+key+\"=\"+params[key];\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as ReportResults);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/roles-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: Shilo Banihit\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrandRoles\n                            \n                            \n                                updateUserRoles\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/roles-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrandRoles\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrandRoles()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/roles-service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserRoles\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserRoles(userid: any, roleIds: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/roles-service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roleIds\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { SaveResult, Role, User, LoginResult } from './user-models'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RolesService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrandRoles() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/roles/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Role[]);\n  }\n\n  updateUserRoles(userid: any, roleIds: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/roles/user`, {userid: userid, roles:roleIds}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveButtonComponent.html":{"url":"components/SaveButtonComponent.html","title":"component - SaveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Save Button Component.\nCalls the form framework's save function to create or update the record.\nUsage\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n*\n| Property Name       | Description                                                    | Required | Default |\n|---------------------|----------------------------------------------------------------|----------|---------|\n| label               | The text to display on the button                              | Yes      |         |\n| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                save-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n  \n    \n      \n        &times;\n        \n      \n      \n      \n        \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAction\n                            \n                            \n                                hideConfirmDlg\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                showConfirmDlg\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAction()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:497\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideConfirmDlg\n                        \n                        \n                    \n                \n            \n            \n                \nhideConfirmDlg()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:493\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:481\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showConfirmDlg\n                        \n                        \n                    \n                \n            \n            \n                \nshowConfirmDlg()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:489\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SaveButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:479\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}                    ×                                                      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveResult.html":{"url":"classes/SaveResult.html","title":"class - SaveResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectionComponent.html":{"url":"classes/SelectionComponent.html","title":"class - SelectionComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionFieldComponent.html":{"url":"components/SelectionFieldComponent.html","title":"component - SelectionFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SelectionComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                selectionfield\n            \n\n\n\n            \n                template\n                \n   \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n   \n   \n    \n      \n        \n        \n        \n        {{ opt.label }}\n        \n      \n   \n   {{field.label}} is required\n   {{field.validationMessages.required}}\n\n\n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n    \n      \n        {{getLabel(val)}}\n      \n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControlFromOption\n                            \n                            \n                                isRadio\n                            \n                            \n                                isValArray\n                            \n                            \n                                onChange\n                            \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getControlFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetControlFromOption(opt: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRadio\n                        \n                        \n                    \n                \n            \n            \n                \nisRadio()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isValArray\n                        \n                        \n                    \n                \n            \n            \n                \nisValArray()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(opt: any, event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SelectionComponent\n\n                \n            \n            \n                \n                        Defined in         SelectionComponent:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SelectionFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:253\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionField\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SelectionComponent:147\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{field.label}} {{ getRequiredLabelStr()}}                                                       {{ opt.label }}                    {{field.label}} is required   {{field.validationMessages.required}}      {{field.label}}    {{getLabel(field.value)}}        {{field.label}}    {{getLabel(field.value)}}                  {{getLabel(val)}}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationRefreshComponent\n\nPublishDataLocationRefreshComponent\n\nSharedModule -->\n\nPublishDataLocationRefreshComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent  -->\n\nSharedModule->PublishDataLocationRefreshComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            CancelButtonComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RelatedObjectDataComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            StringTemplatePipe\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            CancelButtonComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RelatedObjectDataComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ANDSService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            DashboardService\n                        \n                        \n                            EmailNotificationService\n                        \n                        \n                            FieldControlMetaService\n                        \n                        \n                            FieldControlService\n                        \n                        \n                            RecordsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            TranslationService\n                        \n                        \n                            UserSimpleService\n                        \n                        \n                            UtilityService\n                        \n                        \n                            VocabFieldLookupService\n                        \n                        \n                            WorkspaceTypeService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            StringTemplatePipe\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { MarkdownModule, MarkdownService } from 'angular2-markdown';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RecordsService } from './form/records.service';\nimport { FieldControlService } from './form/field-control.service';\nimport { TextFieldComponent, RepeatableTextfieldComponent, MarkdownTextAreaComponent, TextAreaComponent } from './form/field-textfield.component';\nimport { DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, HtmlRawComponent, HiddenValueComponent, LinkValueComponent, SelectionFieldComponent, ParameterRetrieverComponent, TabNavButtonComponent, SpacerComponent, ToggleComponent } from './form/field-simple.component';\nimport { RecordMetadataRetrieverComponent } from './form/record-meta.component';\nimport { VocabField, VocabFieldComponent, VocabFieldLookupService } from './form/field-vocab.component';\nimport { RepeatableVocabComponent, RepeatableContributorComponent } from './form/field-repeatable.component';\nimport { ContributorComponent } from './form/field-contributor.component';\nimport { PDFListComponent } from './form/field-pdflist.component';\nimport { RelatedObjectDataComponent } from './form/field-relatedobjectdata.component';\nimport { RelatedObjectSelectorComponent } from './form/field-relatedobjectselector.component';\nimport { DataLocationComponent } from './form/field-datalocation.component';\nimport { PublishDataLocationSelectorComponent } from './form/field-publishdatalocationselector.component';\nimport { ANDSVocabComponent } from './form/field-andsvocab.component';\nimport { MapComponent } from './form/field-map.component';\nimport { WorkflowStepButtonComponent } from './form/workflow-button.component';\nimport { ActionButtonComponent } from './form/action-button.component';\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport { Ng2CompleterModule } from \"ng2-completer\";\nimport { TranslateI18NextModule } from 'ngx-i18next';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { LeafletDrawModule } from '@asymmetrik/ngx-leaflet-draw';\nimport { DmpFieldComponent } from './form/dmp-field.component';\nimport { UserSimpleService } from './user.service-simple';\nimport { DashboardService } from './dashboard-service';\nimport { ANDSService } from './ands-service';\nimport { StringTemplatePipe }  from './StringTemplatePipe';\nimport { RolesService } from './roles-service';\nimport { UtilityService } from './util-service';\nimport { EmailNotificationService } from './email-service';\nimport { GenericGroupComponent, RepeatableGroupComponent } from './form/field-group.component';\nimport { WorkspaceSelectorFieldComponent } from './form/workspace-selector.component';\nimport { WorkspaceTypeService } from './workspace-service';\nimport { WorkspaceFieldComponent } from './form/workspace-field.component';\nimport { WorkspaceSelectorComponent } from './form/workspace-selector.component';\nimport { FieldControlMetaService } from './form/field-control-meta.service';\nimport { TreeModule } from 'angular-tree-component';\nimport { AsynchComponent } from './form/field-asynch.component';\nimport { TreeNodeCheckboxComponent } from './form/tree-node-checkbox.component';\nimport { PublishDataLocationRefreshComponent } from './form/field-publish-data-location-refresh.component'\nimport { MobxAngularModule } from 'mobx-angular';\n\n@NgModule({\n  imports:      [ BrowserModule, FormsModule, ReactiveFormsModule, NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, LeafletModule.forRoot(), LeafletDrawModule.forRoot(), MarkdownModule.forRoot(), TreeModule, MobxAngularModule ],\n  exports:      [ NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent,MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, TreeModule, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent ],\n  declarations: [ DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent ],\n  providers:    [ FieldControlService, RecordsService, VocabFieldLookupService, ConfigService, TranslationService, UserSimpleService, DashboardService, RolesService, EmailNotificationService, UtilityService, WorkspaceTypeService, FieldControlMetaService,ANDSService ],\n  bootstrap:    [ ],\n  entryComponents: [ DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent,DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent,PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent  ]\n\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleComponent.html":{"url":"classes/SimpleComponent.html","title":"class - SimpleComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n            \n                Description\n            \n            \n                A component base class\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:81\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:141\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:111\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:133\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:119\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:126\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:38\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:46\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:42\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:50\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:54\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortComponent.html":{"url":"components/SortComponent.html","title":"component - SortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/dashboard/app/sort.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sort\n            \n\n\n\n\n            \n                templateUrl\n                ./sort.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sort\n                            \n                            \n                                step\n                            \n                            \n                                title\n                            \n                            \n                                variable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sortChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variable\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sortChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortClicked\n                        \n                        \n                    \n                \n            \n            \n                \nsortClicked()\n                \n            \n\n\n            \n                \n                    Defined in angular/dashboard/app/sort.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, Inject, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { DashboardService } from './shared/dashboard-service';\nimport { PlanTable, Plan } from './shared/dashboard-models';\nimport * as _ from \"lodash\";\nimport { LoadableComponent } from './shared/loadable.component';\nimport { OnInit } from '@angular/core';\nimport { PaginationModule, TooltipModule } from 'ngx-bootstrap';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\n\ndeclare var pageData: any;\n@Component({\n  selector: 'sort',\n  templateUrl: './sort.html'\n})\n\n@Injectable()\nexport class SortComponent  {\n\n  @Input() sort: string = null;\n  @Input() title: string = null;\n  @Input() step: string = null;\n  @Input() variable: string = null;\n  @Output() sortChanged = new EventEmitter();\n\n\n\n  sortClicked() {\n    if (this.sort != null) {\n      if (this.sort == \"asc\") {\n        this.sort = \"desc\";\n      } else {\n        this.sort = \"asc\";\n      }\n    } else {\n      this.sort = \"asc\";\n    }\n    this.sortChanged.emit({title:this.title, variable:this.variable, sort:this.sort, step:this.step});\n    return false;\n  }\n\n\n\n}\n\n    \n\n    \n        {{title}} \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}} '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpacerComponent.html":{"url":"components/SpacerComponent.html","title":"component - SpacerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpacerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spacer\n            \n\n\n\n            \n                template\n                &nbsp;\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Spacer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:758\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpacerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringTemplatePipe.html":{"url":"pipes/StringTemplatePipe.html","title":"pipe - StringTemplatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringTemplatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/StringTemplatePipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringTemplate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(templateString: string, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/StringTemplatePipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateTemplateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})()\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/StringTemplatePipe.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'stringTemplate'\n})\nexport class StringTemplatePipe implements PipeTransform {\n\n\n    public transform(templateString:string, args?:any[]):string {\n      if(args != null) {\n        var template = this.generateTemplateString(templateString);\n        return template(args);\n      }\n        return templateString;\n    }\n\n    public generateTemplateString = (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabNavButtonComponent.html":{"url":"components/TabNavButtonComponent.html","title":"component - TabNavButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabNavButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab-nav-button\n            \n\n\n\n            \n                template\n                \n{{field.prevLabel}}\n{{field.nextLabel}}\n\n\n{{field.prevLabel}}\n{{field.nextLabel}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUrlParameter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                stepToTab\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-simple.component.ts:576\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrlParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrlParameter(param: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:607\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:591\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:582\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stepToTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stepToTab(step: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:598\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    step\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabNavButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:576\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.prevLabel}}{{field.nextLabel}}{{field.prevLabel}}{{field.nextLabel}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabNavButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabOrAccordionContainerComponent.html":{"url":"components/TabOrAccordionContainerComponent.html","title":"component - TabOrAccordionContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabOrAccordionContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer components\n\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabcontainer\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{tab.label}}\n      \n    \n    \n      \n    \n        \n          \n        \n      \n    \n  \n\n\n  \n    Expand/Collapse all\n    \n      \n        \n          \n            {{ tab.expandedChar }} {{ tab.label }}\n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandCollapseAll\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-simple.component.ts:339\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expandCollapseAll\n                        \n                        \n                    \n                \n            \n            \n                \nexpandCollapseAll()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabOrAccordionContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:339\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                                                                    Expand/Collapse all                                        {{ tab.expandedChar }} {{ tab.label }}                                                                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabOrAccordionContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaComponent.html":{"url":"components/TextAreaComponent.html","title":"component - TextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n    \n        Description\n    \n    \n        Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n    \n      \n      \n    \n    {{field.value}}\n  \n  \n  \n    {{field.value}}\n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  \n    {{line}}\n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                  {{field.value}}          {{field.value}}          {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}      {{line}}      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextBlockComponent.html":{"url":"components/TextBlockComponent.html","title":"component - TextBlockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextBlockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-block\n            \n\n\n\n            \n                template\n                \n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  \n  {{field.value}}\n  \n  \n\n\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TextBlockComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:430\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Container\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:429\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}    {{field.value}}        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextBlockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextFieldComponent.html":{"url":"components/TextFieldComponent.html","title":"component - TextFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n    \n      \n    \n  \n  \n    \n    \n      {{removeBtnText}}\n      \n    \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{ getRequiredLabelStr() }}                                      {{removeBtnText}}                  {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toggle\n            \n\n\n\n            \n                template\n                \n  \n  {{ field.label }} \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toggle\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:773\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ field.label }}   '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransferOwnerModule.html":{"url":"modules/TransferOwnerModule.html","title":"module - TransferOwnerModule","body":"\n                   \n\n\n\n\n    Modules\n    TransferOwnerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_imports\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/transfer_owner/app/transfer_owner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransferOwnerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TransferOwnerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { TransferOwnerComponent }  from './transfer_owner.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ TransferOwnerComponent ],\n  providers:    [ ],\n  bootstrap:    [ TransferOwnerComponent ]\n})\nexport class TransferOwnerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/translation-service.ts\n        \n\n            \n                Description\n            \n            \n                Translation service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                            \n                                    Protected\n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTranslator\n                            \n                            \n                                isReady\n                            \n                            \n                                t\n                            \n                            \n                                translatorLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateI18Next: TranslateI18Next, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateI18Next\n                                                  \n                                                        \n                                                                    TranslateI18Next\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \nisReady(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            t\n                        \n                        \n                    \n                \n            \n            \n                \nt(key: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { TranslateI18Next } from 'ngx-i18next';\nimport { Subject } from 'rxjs/Subject';\nimport { ConfigService } from './config-service';\n/**\n * Translation service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class TranslationService {\n  protected subjects: any;\n  protected translatorReady: boolean;\n  protected config: any;\n\n  constructor (protected translateI18Next: TranslateI18Next, protected configService: ConfigService) {\n    this.subjects = {};\n    this.initTranslator();\n  }\n\n  initTranslator() {\n    this.subjects['init'] = new Subject();\n    const ts = new Date().getTime();\n    this.translateI18Next.init({\n        debug: true,                                                        // optional\n        returnNull: false,\n        returnEmptyString: true,                                           // optional\t- but.. it's important, please see http://i18next.com/docs/options/!\n        // mapping: {\"specific_backend_message\": \"message_for_translate\"},     // optional\n        // browserLanguageDetector: injectableCustomLanguageDetectorService,   // optional - the specific application language detector (allows you to return the language of the user.\n        //                                                                     //            If it is absent, the service uses default \"angular2 locale detector\" behaviour using LOCALE_ID.\n        // // supportedLanguages: ['en', 'pt'],                                //            Therefore you can pass the optional supportedLanguages parameter which indicates your supported languages.\n        //                                                                     //            For example, LOCALE_ID = 'en-AU' or 'en-US' or 'en', you can pass only ['en'] -> locales/en/translation.json\n        //                                                                     //                         LOCALE_ID = 'pt-BR' or 'pt', you can pass only ['pt'] -> locales/pt/translation.json\n        // backend: injectableBackendConfigFactory                             // optional - allows to change \"loadPath\" i18next parameter\n        lng: 'en',\n        fallbackLng: 'en',\n        backend: { loadPath: `/locales/{{lng}}/{{ns}}.json?ts=${ts}` }\n    }).then(() => {\n      console.log(`Translator loaded...`);\n      this.translatorReady = true;\n      this.translatorLoaded();\n    });\n  }\n\n  translatorLoaded() {\n    if (this.translatorReady) {\n      this.subjects['init'].next(this);\n    }\n  }\n\n  isReady(handler: any) {\n    const subs = this.subjects['init'].subscribe(handler);\n    this.translatorLoaded();\n    return subs;\n  }\n\n  t(key: string) {\n    return this.translateI18Next.translate(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeCheckboxComponent.html":{"url":"components/TreeNodeCheckboxComponent.html","title":"component - TreeNodeCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/tree-node-checkbox.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-tree-node-checkbox\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :     TreeNode\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from 'angular-tree-component';\n\n@Component({\n  selector: 'rb-tree-node-checkbox',\n  encapsulation: ViewEncapsulation.None,\n  styles: [],\n  template: `\n    \n      \n    \n  `\n})\nexport class TreeNodeCheckboxComponent {\n  @Input() node: TreeNode;\n  @Input() ariaLabel: string;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                token\n                            \n                            \n                                type\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm.html":{"url":"interfaces/UserForm.html","title":"interface - UserForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/manageUsers/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as owasp from 'owasp-password-strength-test';\nimport * as _ from 'lodash';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\nexport function passwordStrengthValidator(control1: string) {\n  return (group: FormGroup): {[key: string]: any} => {\n    let password = group.controls[control1].value;\n    if (!_.isEmpty(password)) {\n      const result = owasp.test(password);\n      return result.errors.length == 0 ? undefined : { passwordStrength: true, passwordStrengthDetails: result };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm-1.html":{"url":"interfaces/UserForm-1.html","title":"interface - UserForm-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/userProfile/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/userProfile/app/user_profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { UserProfileComponent }  from './user_profile.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ UserProfileComponent ],\n  providers:    [ ],\n  bootstrap:    [ UserProfileComponent ]\n})\nexport class UserProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSimpleService.html":{"url":"injectables/UserSimpleService.html","title":"injectable - UserSimpleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserSimpleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user.service-simple.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\nAuthor: Shilo Banihit\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLocalUser\n                            \n                            \n                                genKey\n                            \n                            \n                                genUserKey\n                            \n                            \n                                getInfo\n                            \n                            \n                                getUsers\n                            \n                            \n                                loginLocal\n                            \n                            \n                                revokeKey\n                            \n                            \n                                revokeUserKey\n                            \n                            \n                                updateUserDetails\n                            \n                            \n                                updateUserProfile\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocalUser\n                        \n                        \n                    \n                \n            \n            \n                \naddLocalUser(username: any, details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKey\n                        \n                        \n                    \n                \n            \n            \n                \ngenKey(userid: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genUserKey\n                        \n                        \n                    \n                \n            \n            \n                \ngenUserKey()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfo()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginLocal\n                        \n                        \n                    \n                \n            \n            \n                \nloginLocal(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeKey\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeKey(userid: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeUserKey\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeUserKey()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserDetails(userid: any, details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { User, LoginResult, SaveResult } from './user-models'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UserSimpleService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getInfo(): Promise {\n    return this.http.get(`${this.baseUrl}/user/info`)\n    .toPromise()\n    .then((res:any) => this.extractData(res, 'user') as User);\n  }\n\n  loginLocal(username: string, password: string): Promise {\n    console.log(`Loggin in locally using brand: ${this.config.branding}, portal: ${this.config.portal}`);\n    return this.http.post(`${this.baseUrl}/user/login_local`, {username: username, password:password, branding:this.config.branding, portal: this.config.portal}, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n  getUsers() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/users/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as User[]);\n  }\n\n  updateUserDetails(userid: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/update`, {userid: userid, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  addLocalUser(username: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/newUser`, {username: username, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/genKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/revokeKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  updateUserProfile(details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/update`, {details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/genKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/revokeKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilityService.html":{"url":"injectables/UtilityService.html","title":"injectable - UtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/util-service.ts\n        \n\n            \n                Description\n            \n            \n                Utility service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                concatenate\n                            \n                            \n                                    Public\n                                getFirstofArray\n                            \n                            \n                                    Public\n                                getPropertyAsArrayFromObject\n                            \n                            \n                                    Public\n                                getPropertyFromObject\n                            \n                            \n                                    Public\n                                getPropertyFromObjectConcat\n                            \n                            \n                                    Public\n                                getPropertyFromObjectMapping\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                joinArray\n                            \n                            \n                                    Public\n                                runTemplate\n                            \n                            \n                                    Public\n                                splitArrayStringsToArray\n                            \n                            \n                                    Public\n                                splitStringToArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            concatenate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    concatenate(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:39\n                \n            \n\n\n            \n                \n                    returns concatenated string\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFirstofArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstofArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:188\n                \n            \n\n\n            \n                \n                    Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyAsArrayFromObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyAsArrayFromObject(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:82\n                \n            \n\n\n            \n                \n                    returns a property as Array of 1 item from the provided object.\nAuthor: Matt Mulholland\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObject(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:70\n                \n            \n\n\n            \n                \n                    returns a property from the provided object.\nAuthor: Andrew Brazzatti\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObjectConcat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObjectConcat(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:123\n                \n            \n\n\n            \n                \n                    returns an array of concatenated values\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndict of field: array of field paths to concat\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObjectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObjectMapping(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:94\n                \n            \n\n\n            \n                \n                    returns value based on mapping\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasValue(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:111\n                \n            \n\n\n            \n                \n                    returns true if value is not null, undefined, empty\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            joinArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinArray(data: any, config: any, fieldName: string, fieldSeparator: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    fieldSeparator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runTemplate(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            splitArrayStringsToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitArrayStringsToArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:158\n                \n            \n\n\n            \n                \n                    Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            splitStringToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitStringToArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:140\n                \n            \n\n\n            \n                \n                    Splits a string into an array by it's delimiter\nAuthor: Andrew Brazzatti\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\n/**\n * Utility service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UtilityService {\n\n  /**\n   * returns concatenated string\n   *\n   * Author: Shilo Banihit\n   * @param  {any} config\n   * @return {string}\n   */\n  public concatenate(data: any, config: any) {\n    let result: any = '';\n    _.each(config.fields, (f: any) => {\n      if (_.isArray(data)) {\n        result = [];\n        let itemResult = '';\n        _.each(data, (d: any) => {\n          const fldData = _.get(d, f);\n          // checking if field has data, otherwise will be skipping concat\n          if (fldData) {\n            itemResult = `${itemResult}${_.isEmpty(itemResult) ? '' : config.delim}${fldData}`;\n          }\n        });\n        result.push(itemResult);\n      } else {\n        const fldData = _.get(data, f);\n        if (fldData) {\n          result = `${result}${_.isEmpty(result) ? '' : config.delim}${fldData}`;\n        }\n      }\n    });\n    return result;\n  }\n\n  /**\n   * returns a property from the provided object.\n   *\n   * Author: Andrew Brazzatti\n   * @param  {any} config\n   * @return {string}\n   */\n  public getPropertyFromObject(data: any, config: any) {\n    const fieldPath = config.field;\n    return _.get(data, fieldPath);\n  }\n\n  /**\n   * returns a property as Array of 1 item from the provided object.\n   *\n   * Author: Matt Mulholland\n   * @param data\n   * @param config\n   */\n  public getPropertyAsArrayFromObject(data: any, config: any) {\n    return [this.getPropertyFromObject(data, config)];\n  }\n\n  /**\n   * returns value based on mapping\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n   * @return {any}\n   */\n  public getPropertyFromObjectMapping(data: any, config: any) {\n    const fieldPath = config.field;\n    const val = _.isUndefined(fieldPath) ? data : _.get(data, fieldPath);\n    const foundMapping = _.find(config.mapping, (mapEntry) => {\n      return `${mapEntry.key}` == `${val}`;\n    });\n    return foundMapping ? foundMapping.value : config.default;\n  }\n\n  /**\n   * returns true if value is not null, undefined, empty\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config\n   * @return {string}\n   */\n  public hasValue(data: any, config: any = null) {\n    return !_.isEmpty(data) && !_.isUndefined(data) && !_.isNull(data);\n  }\n\n  /**\n   * returns an array of concatenated values\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: array of field paths to concat\n   * @return {string}\n   */\n  public getPropertyFromObjectConcat(data: any, config: any) {\n    let values = [];\n    _.each(config.field, (f) => {\n      values.push(_.get(data, f));\n    });\n    return _.concat([], ...values);\n  }\n\n\n  /**\n   * Splits a string into an array by it's delimiter\n   *\n   * Author: Andrew Brazzatti\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {string}\n   */\n  public splitStringToArray(data: any, config: any) {\n    let delim = config.delim;\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    return value.split(delim);\n  }\n\n  /**\n   * Splits a string of arrays into an array by it's delimiter\n   *\n   * Author: Moises Sacal Bonequi\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {array}\n   */\n  public splitArrayStringsToArray(data: any, config: any) {\n    let regex = config.regex || ',';\n    let flags = config.flags || 'g';\n    const reg = new RegExp(regex, flags);\n    let regexTrail = config.regexTrail || '(^,)|(,$)';\n    let flagsTrail = config.flagsTrail || 'g';\n    const regTrail = new RegExp(regexTrail, flagsTrail);\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    const values = [];\n    _.each(value, (v) => {\n      if (v) {\n        v = v.replace(regTrail, '');\n      }\n      values.push(v.split(reg).map(item => item.trim()));\n    });\n    return _.concat([], ...values);\n  }\n\n  /**\n   * Splits a string of arrays into an array by it's delimiter\n   *\n   * Author: Moises Sacal Bonequi\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {array}\n   */\n  public getFirstofArray(data: any, config: any) {\n    let delim = config.delim;\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    return _.first(value);\n  }\n\n  public joinArray(data: any, config: any, fieldName: string = null, fieldSeparator: string = null) {\n    return _.join(_.get(data, fieldName ? fieldName : config.field), fieldSeparator ? fieldSeparator : config.separator);\n  }\n\n  public runTemplate(data: any, config: any) {\n    const imports = _.extend({data: data, config: config, moment: moment}, this);\n    const templateData = {imports: imports};\n    const template = _.template(config.template, templateData);\n    return template();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceFieldComponent.html":{"url":"components/WorkspaceFieldComponent.html","title":"component - WorkspaceFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a Workspace field.\nAuthor: moisbo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ws-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:25\n                            \n                        \n                \n                    \n                        The model for this field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:38\n                            \n                        \n                \n                    \n                        Field map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:30\n                            \n                        \n                \n                    \n                        Form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:47\n                            \n                        \n                \n                    \n                        The parentId of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:34\n                            \n                        \n                \n                    \n                        The value of this field.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-field.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-field.component.ts:111\n                \n            \n\n\n            \n                \n                    Change handler, instantiates the field component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:42\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/workspace-field.component.ts:70\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef, ElementRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport { WorkspaceTypeService } from '../workspace-service';\n\ndeclare var jQuery: any;\ndeclare var $: any;\n\n/**\n * Base component for a Workspace field.\n *\n * Author: moisbo\n *\n */\n@Component({\n  selector: 'ws-field',\n  template: ''\n})\nexport class WorkspaceFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n\n\n\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {};\n      variables['imports'] = this.fieldMap._rootComp;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n        this.disabledElements = parentElement.find('*:disabled');\n        parentElement.find('input').prop( \"disabled\", true );\n        return 'disabled';\n      } else {\n        if(jQuery(this.fieldElement.nativeElement).prop('disabled') == 'disabled') {\n          //previously disabled so lets re-enable\n          parentElement.find('input').prop( \"disabled\", false );\n          _.each(this.disabledElements, disabledElement => disabledElement.prop(\"disabled\",true));\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\nexport class WorkspaceSelectorField extends FieldBase  {\n  workspaceApps: any[] = [];\n  open: string;\n  saveFirst: string;\n  rdmp: string;\n  workspaceTypeService: WorkspaceTypeService;\n  workspaceApp: any;\n  appLink: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.workspaceTypeService = this.getFromInjector(WorkspaceTypeService);\n    this.open = this.getTranslated(options['open'], options['open']);\n    this.saveFirst = this.getTranslated(options['saveFirst'], options['saveFirst']);\n    this.rdmp = undefined;\n    // this.options = options['options'] || [];\n    this.workspaceApps = _.map(options['defaultSelection'] || [], (option) => {\n      option['label'] = this.getTranslated(option['label'], option['label']);\n      option['name'] = '';\n      return option;\n    });\n    this.appLink = this.workspaceTypeService.getBrand() + '/record/';\n    this.workspaceTypeService.getWorkspaceTypes().then(response => {\n      if(response['status']) {\n        //append results from database into workspaceApps\n        this.workspaceApps = _.concat(this.workspaceApps, response['workspaceTypes']);\n      } else {\n        throw new Error('cannot get workspaces');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  init() {\n    this.rdmp = this.fieldMap._rootComp.oid || undefined;\n  }\n\n  registerEvents() {\n    this.fieldMap._rootComp.recordCreated.subscribe(this.setOid.bind(this));\n    this.fieldMap._rootComp.recordSaved.subscribe(this.setOid.bind(this));\n  }\n\n  setOid(o) {\n    this.rdmp = o.oid;\n  }\n\n\n  loadWorkspaceDetails(value: string) {\n    //GET me the value from the database\n    if(!value){\n      this.workspaceApp = null\n    }else {\n      this.workspaceApp = _.find(this.workspaceApps,\n        function(w) {\n          return w['name'] == value;\n        }\n      );\n    }\n  }\n\n  createFormModel() {\n    if (this.controlType == 'checkbox') {\n      const fgDef = [];\n\n      _.map(this.options, (opt:any)=>{\n        const hasValue = _.find(this.value, (val:any) => {\n          return val == opt.value;\n        });\n        if (hasValue) {\n          fgDef.push(new FormControl(opt.value));\n        }\n      });\n      // const fg = new FormArray(fgDef);\n      // return fg;\n      return new FormArray(fgDef);\n    } else {\n      // const model = super.createFormModel();\n      // console.log(`Created form model:`);\n      // console.log(model);\n      // return model;\n      return super.createFormModel();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceListModule.html":{"url":"modules/WorkspaceListModule.html","title":"module - WorkspaceListModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspaceListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_imports\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/workspace_list/app/workspace_list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Workspace List Module\nAuthor: Shilo Banihit\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WorkspaceListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            WorkspaceListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { WorkspaceListComponent }  from './workspace.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Workspace List Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ WorkspaceListComponent ],\n  providers:    [],\n  bootstrap:    [ WorkspaceListComponent ],\n  entryComponents: [ ]\n})\nexport class WorkspaceListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceSelectorComponent.html":{"url":"components/WorkspaceSelectorComponent.html","title":"component - WorkspaceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                workspace-selector-parent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-selector.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WorkspaceSelectorComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { WorkspaceSelectorField } from './workspace-field.component';\n\nimport * as _ from \"lodash\";\n@Component({\n  selector: 'workspace-selector-parent',\n  template: ''\n})\nexport class WorkspaceSelectorComponent extends SimpleComponent {\n  static clName = 'WorkspaceSelectorComponent';\n\n  getLabel(val: any): string {\n    const opt = _.find(this.field.options, (opt) => {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n@Component({\n  selector: 'workspace-selector',\n  template: `\n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{opt.label}}\n    \n  \n  \n  \n    \n      \n        {{ field.workspaceApp.name | uppercase }}\n      \n      \n        \n          \n            {{ field.workspaceApp.subtitle }}\n            \n              {{ field.workspaceApp.description }}\n              {{ field.open }}\n            \n            \n              \n                {{ field.saveFirst }}\n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n  `,\n})\nexport class WorkspaceSelectorFieldComponent extends WorkspaceSelectorComponent {\n  field: WorkspaceSelectorField\n  static clName = 'WorkspaceSelectorFieldComponent';\n\n  ngOnInit() {\n    this.field.init();\n    this.field.registerEvents();\n  }\n\n  saveAndOpenWorkspace(){\n    this.fieldMap._rootComp.onSubmit().subscribe(response => {\n      window.location.href = `${this.field.appLink}${this.field.workspaceApp.name}/edit?rdmp=${this.field.rdmp}`;\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceTypeService.html":{"url":"injectables/WorkspaceTypeService.html","title":"injectable - WorkspaceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/workspace-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: moisbo\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrand\n                            \n                            \n                                getWorkspaceType\n                            \n                            \n                                getWorkspaceTypes\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/workspace-service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrand\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrand()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkspaceType\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkspaceType(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkspaceTypes\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkspaceTypes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: moisbo\n */\n@Injectable()\nexport class WorkspaceTypeService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrand() {\n    return this.brandingAndPortalUrl;\n  }\n\n  getWorkspaceTypes() : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkspaceType(name: string) : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types/` + name, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @sailshq/upgrade : ^1.0.9\n        \n            @uppy/core : ^0.29.0\n        \n            @uppy/dashboard : ^0.29.0\n        \n            @uppy/tus : ^0.29.0\n        \n            async : 2.6.3\n        \n            axios : ^0.19.0\n        \n            bcrypt : 3.0.6\n        \n            bootstrap-sass : ^3.3.7\n        \n            calcyte : ^1.0.2\n        \n            chokidar : ~3.1.1\n        \n            connect-mongo : 1.1.0\n        \n            core-js : ^3.0.1\n        \n            datacrate : ^1.0.4\n        \n            dotenv : ^7.0.0\n        \n            ejs : 2.6.1\n        \n            font-awesome-sass : 4.7.0\n        \n            fs-extra : ^7.0.0\n        \n            grunt-ts : ^6.0.0-beta.19\n        \n            har-validator : 5.1.3\n        \n            i18next : 17.0.14\n        \n            i18next-node-fs-backend : ^2.1.1\n        \n            include-all : ^4.0.3\n        \n            leaflet : ^1.3.1\n        \n            leaflet-draw : ^1.0.2\n        \n            lodash : ^4.17.5\n        \n            lodash-es : ^4.17.5\n        \n            lucene-escape-query : ^1.0.1\n        \n            moment : ^2.20.1\n        \n            moment-es6 : github:shilob/moment-es6\n        \n            ng2-completer : 2.0.8\n        \n            ng2-datetime : ^1.3.2\n        \n            ngx-bootstrap : ^4.0.0\n        \n            node-cache : ^4.1.1\n        \n            node-schedule : ^1.3.0\n        \n            passport : ^0.4.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : github:itayadler/passport-jwt\n        \n            passport-local : ^1.0.0\n        \n            passport-openidconnect : 0.0.2\n        \n            rc : 1.2.8\n        \n            redbox2ckan : github:redbox-mint-contrib/redbox2ckan#dev_build\n        \n            redux : 4.0.1\n        \n            request-promise : ^4.2.0\n        \n            rxjs : 6.5.3\n        \n            rxjs-compat : 6.5.3\n        \n            sails : ^1.0.2\n        \n            sails-hook-autoreload : ^1.1.0\n        \n            sails-hook-grunt : ^3.1.0\n        \n            sails-hook-orm : ^2.0.0\n        \n            sails-hook-sockets : ^1.5.2\n        \n            sails-mongo : ^1.0.0\n        \n            skipper-gridfs : https://github.com/marcelomedina10/skipper-gridfs.git\n        \n            systemjs : 6.0.0\n        \n            ts-node : ^8.0.1\n        \n            ts-smart-logger : 0.1.0\n        \n            tus-node-server : ^0.3.2\n        \n            typescript : 2.9\n        \n            typescript-require : ~0.2.9-1\n        \n            url-pattern : ^1.0.3\n        \n            zone.js : ^0.9.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            passwordStrengthValidator   (angular/.../forms.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    angular/manageUsers/app/forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            matchingValuesValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmatchingValuesValidator(control1, control2)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    control2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionalEmailValidator\n                        \n                        \n                    \n                \n            \n            \n                \noptionalEmailValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordStrengthValidator\n                        \n                        \n                    \n                \n            \n            \n                \npasswordStrengthValidator(control1)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    angular/userProfile/app/forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            matchingValuesValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmatchingValuesValidator(control1, control2)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    control2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionalEmailValidator\n                        \n                        \n                    \n                \n            \n            \n                \noptionalEmailValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\nReDBox is an open source Research Data Management platform that assists researchers and institutions to plan, create and publish their research data assets.\nReDBox is one of the most popular research data management tools in Australia. It is currently in use across 12 Australian universities. ReDBox supports the Australian research community to describe and share information about research data collections. It assists data custodians in meeting institutional data management policies, applying the requirements of the Australian Code for the Responsible Conduct of Research, and publishing to Research Data Australia (RDA), the national research data discovery system maintained by the Australian Research Data Commons (ARDC).\nThe Queensland Cyber Infrastructure Foundation (QCIF) leads the ReDBox development initiative and provides several services including a support subscription service to institutions.\nDevelopment\nRequirements:\n\nNode 8.11.0\n\nDevelopment requires Docker. Run ./runForDev.sh install jit at least once.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DmpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocalAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageRolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageUsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecordSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransferOwnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_DmpFormComponent_providers\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent  -->\n\nSharedModule->PublishDataLocationRefreshComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nDmpFormComponent -->\n\nLocation->DmpFormComponent\n\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDmpFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DmpFormComponent\n\n\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationRefreshComponent\n\nPublishDataLocationRefreshComponent\n\nSharedModule -->\n\nPublishDataLocationRefreshComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    56 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    60 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/installation-guide.html":{"url":"additional-documentation/installation-guide.html","title":"additional-page - Installation guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation Guide\nService Dependencies\nThe following dependencies will need to be installed on the OS:\n* NodeJS environment version 6.x\n* MongoDB\n* A reverse proxy server such as Nginx or Apache HTTP Server\n* Git\nNode dependencies\nOnce you have a NodeJS environment installed install the following dependencies globally using the npm install -g  command:\n* yarn\n* pm2\nInstall the ReDBox Portal\n\nCheckou the ReDBox Portal to your location of choice (e.g. /opt/redbox-portal)\n\ngit clone -b dev_build \"https://github.com/redbox-mint/redbox-portal\"\n\nCreate a ecosytem.json file for PM2 as below. See the configuration guide guide for information on how to configure the env section.\n{\n\"apps\" : [{\n // Application #1\n \"name\"        : \"rbportal\",\n \"script\"      : \"app.js\",\n \"args\"        : [],\n \"watch\"       : true,\n \"node_args\"   : \"\",\n \"merge_logs\"  : true,\n \"cwd\"         : \"/opt/redbox-portal/\",\n \"env\": {\n   \"NODE_ENV\": \"development\",\n   \"redboxApiKey\": \"\"\n }\n}\n]\n}\n\nCopy your configuration changes over the installation. See the configuration guide\n\nSetup PM2 run on init (depending on your distro) e.g pm2 startup systemd\n\nStart the application\npm2 start ecosystem.json\n\nSave the PM2 configuration\npm2 save\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide.html":{"url":"additional-documentation/configuration-guide.html","title":"additional-page - Configuration guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguration and Customisation Guide\nManaging your customisations\nMuch like in ReDBox 1.8+, it is recommended that you keep your configuration changes in it's own repository and overlay them as part of the deployment process.\nSee the sample customisation repository for an example.\nManaging portal configuration\nThe ReDBox Portal is built on the SailsJS framework and therefore takes advantage of the highly extensible configration framework provided.\nPlease see the SailsJS documentation for more information on it's structure and configuration options.\nThere are several configuration items that are specific to the ReDBox Portal:\n1. record.js manages configuration around record management and the portal's interaction with the ReDBox and Mint services\n2. auth.js manages configuration around authorisation and authentication.\n3. emailnotification.js manages configuration of email notifications\n4. form.js manages form configuration\nEnvironment variables\nIt is possible to use environment variables to modify configuration, this is particularly useful when running the portal in a containerised environment such as docker. Please see Sails configuration document for more information\nEnvironment specific files\nYou may override standard configuration item for a particular environment (e.g development, test and production) by creating or modifying the a environment specif config file in the location config/env/.js. You can specify the environment by setting the NODE_ENV environment variable.\nPlease see the Sails configuration documentation for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-web-forms.html":{"url":"additional-documentation/configuration-guide/configuring-web-forms.html","title":"additional-page - Configuring web forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring web forms\nIntroduction\nReDBox has a flexible and configurable framework that allows you to capture as metadata for a variety different purposes such as data management plans, provisioned workspaces and data collections. Metadata is stored in the JSON-LD format and has a very loose schema to support this flexibility.\nFor each type of metadata record stored, it is also possible to configure a workflow that the record may pass through to map to the business processes within your organisation.\nThere is also a configurable form system that allows you to design a form to meet your needs without having the need to understand code. It is possible to attach different form structures to each workflow stage to suit the requirements for the user of the form.\nRecord Type Configuration\nRecord Types are configured in the config/recordtype.js file.\nThe record type configuration defines the record type (e.g. a research data managment plan record) and what fields in the record should be displayed on the search interface for the purposes of filtering and faceting.\nRecord's are configured via the config/workflow.js file and specifies the workflow stages a record can transition through and the roles that are permitted to view and edit a record for each workflow stage.\n\n|\n|- search-filters []\n    |- name\n    |- title\n    |- type\n    |- typeLabel\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The label of record type | Yes      | rdmp           |\n| name  | The name of the Solr index field to facet on. For facet type fields, this is usually the name you've configured in your form configuration. To allow for inexact matching for filter search boxes, append text_ to the beginning of the name | Yes      | text_title         |\n| title  | The heading label to display in the facets section. Can read text from the language file | Yes      | search-refine-description           |\n| type  | The type of facet. Fixed for search box filters, facet for facet counts | Yes      | facet           |\n| typeLabel  | The label to show above the search box filter. Can read text from the language file. Set to null for facet count fields | Yes      | search-refine-contains           |\nExample\n\"rdmp\": {\n  searchFilters: [\n    {\n      name: \"text_title\",\n      title: \"search-refine-title\",\n      type: \"exact\",\n      typeLabel: \"search-refine-contains\"\n    },\n    {\n      name: \"text_description\",\n      title: \"search-refine-description\",\n      type: \"exact\",\n      typeLabel: \"Can read text from the language file\"\n    },\n    {\n      name: \"grant_number_name\",\n      title: \"search-refine-grant_number_name\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"finalKeywords\",\n      title: \"search-refine-keywords\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"workflow_stageLabel\",\n      title: \"search-refine-workflow_stageLabel\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    }\n  ]\n}\nWorkflow Configuration\nThe structure of the configuration is as follows\n\n|\n|- \n    |\n    |- config\n        |\n        |- workflow\n            |\n            |- stage\n            |- stageLabel\n            |- next\n        |- authorization\n            |\n            |- viewRoles\n            |- editRoles\n        |- form\n    |- starting\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The label of record type                                                                                                                                                                 | Yes      | rdmp           |\n|  | The label of the workflow stage for the record type                                                                                                                                      | Yes      | draft          |\n| stage            | The code value for the stage. This value is stored in the metadata record within ReDBox. Best practice would be to match it with  but it can be different if necessary.  | Yes      | draft          |\n| stageLabel       | The label for the stage that is presented to users on the interface.                                                                                                                     | Yes      | Draft          |\n| next             | The stage to transition to.                                                                                                                                                | No       | review         |\n| viewRoles        | An array of roles that are allowed to view this record type at this stage                                                                                                                | Yes      | ['Admin']      |\n| editRoles        | An array of roles that are allowed to edit this record type at this stage                                                                                                                | Yes      | ['Admin']      |\n| form             | The form code. This should match an entry in the form.js configuration file                                                                                                              | Yes      | rdmp-1.0-draft |\n| starting         | Is this the stage that new records should commence in?                                                                                                                                   | No       | true           |\nExample\n\"rdmp\": {\n    \"draft\": {\n      config: {\n        workflow: {\n          stage: 'draft',\n          stageLabel: 'Draft',\n          next: 'review',\n        },\n        authorization: {\n          viewRoles: ['Admin'],\n          editRoles: ['Admin']\n        },\n        form: 'rdmp-1.0-draft'\n      },\n      starting: true\n    },\nForm/view configuration\nThe form and view layout is configured via config/form.js file.\nThe structure of the configuration file is as follows\n```\ndefaultForm\n|\n|- forms\n    |\n    |- \n        |\n        |- name\n        |- type\n        |- skipValidationOnSave\n        |- editCssClasses\n        |- viewCssClasses\n        |- messages\n            |\n            |- \n        |\n        |- fields []\n            |\n            |- class\n            |- compClass\n            |- viewOnly\n            |- definition\n                |\n                |- \n```\nForm-wide configuration\nThe settings in this section control the behaviour of the entire form.\n| Field                | Description                                                                                                                                                                                                                                                                                                | Required               | Example                              |\n|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|--------------------------------------|\n|         | The label name of the form, should match a \"form\" value in workflow.js for it to be used                                                                                                                                                                                                                   | Yes                    | rdmp-1.0-draft                       |\n| name                 |        The label name of the form. This should match the  value. form                                                                                                                                                                                                                                                                                                   | Yes                    | rdmp-1.0-draft                       |\n| skipValidationOnSave | When set to true, validation will only trigger when the record is submitted to change it's workflow state. This property is particularly useful in early stages of a workflow where you want the user to be able to save and come back to the record later without having to fill in all mandatory fields. | No (defaults to false) | true                                 |\n| editCssClasses       | The css classes to apply to each element for styling. These are used in edit mode                                                                                                                                                                                                                          | Yes                    | row col-md-12                        |\n| viewCssClasses       | The css classes to apply to each element for styling. These are used in view mode                                                                                                                                                                                                                          | Yes                    | row col-md-12                        |\n|        | A set of key value pairs containing messages to show to the user                                                                                                                                                                                                                                           | Yes                    | \"saveSuccess\": \"Saved successfully.\" |\nField configuration\nThe fields section lays out the components to appear in the form.\n| Field      | Description                                                                                   | Required               | Example |\n|------------|-----------------------------------------------------------------------------------------------|------------------------|---------|\n| class      |                                                                                               | Yes                    |         |\n| compClass  |  The Component class name. See the Component documentation for a list of available components and how to configure them | Yes                    |   TextBlockComponent      |\n| viewOnly   | When set to true, this component will only appear in the view (details) rendition of the form | No (defaults to false) | true    |\n| editOnly   | When set to true, this component will only appear in the edit (details) rendition of the form | No (defaults to false) | true    |\n| definition | Configuration that is specific for the component being added. How to configure a component is described in the Component documentation  | Yes                    |  value: '@dmpt-data-collection-heading' |\nExample\nfields: [\n  {\n    class: 'Container',\n    compClass: 'TextBlockComponent',\n    viewOnly: true,\n    definition: {\n      name: 'title',\n      type: 'h1'\n    }\n  },\nLanguage Configuration\nMessages in the system can be configured using Language files. This allows for internationalisation of the portal as well as editing in a translation management system such as Locize.\nThe application uses i18next to render the messages and the language files are kept in the assests/locales/ directories.\nPlease see the i18next documentation for more information on how the language file is structured and it's features.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-email-notifications.html":{"url":"additional-documentation/configuration-guide/configuring-email-notifications.html","title":"additional-page - Configuring email notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring email notifications\nIntroduction\nThe ReDBox portal has a flexible email notification system that can be customised to your needs.\nConfiguring Email Settings\nThe config/emailnotification.js file provides configuration properties relating to the sending of emails.\napi\n|\n|- send\n|\nsettings\n|\n|- enabled\n|\n|- from\n|\n|- templateDir\n|\ndefaults\n|\n|- from\n|\n|- subject\n|\n|- format\n|\ntemplates\n|\n|- \n    |\n    |- subject\n    |\n    |- template\n|\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n| api/send    | The url and HTTP method of the API endpoint to send emails (via ReDBox)| Yes      | N/A           |\n| settings    | Section used to capture email notification settins  | Yes      | N/A           |\n| settings/enabled    | Whether email notifications are enabled | Yes      | true         |\n| settings/from    | The from address to use when sending emails | Yes      | noreply@redboxresearchdata.com.au         |\n| settings/templateDir    | The template directory that contains the email template files | Yes      | views/emailTemplates/        |\n| defaults   | Section used to capture default properties for emails (when not otherwise set) | Yes      | N/A          |\n| defaults/from    | The default from address | Yes      | redbox@redboxresearchdata.com.au             |\n| defaults/subject    | The default from email subject | Yes      | A notification from ReDBox         |\n| defaults/format    | The email format, can either be in HTML or plain text | Yes      | html         |\nExample\napi: {\n  send: {method: 'post', url: \"/api/v1/messaging/emailnotification\"}\n},\nsettings: {\n  enabled: true,\n  from: \"noreply@redbox\",\n  templateDir: \"views/emailTemplates/\"\n},\ndefaults: {\n  from: \"redbox@dev\",\n  subject: \"ReDBox Notification\",\n  format: \"html\"\n},\nCustomising Email Templates\nThe both the subjects and the contents of email notifications can be customised via configuration and templates.\nConfiguring email subjects and templates\nThe templates section of the config/emailnotification.js file contains configuration to customise the subject and template for an email notification\n\n|\n|- subject\n|\n|- template\n|\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The email code used by the application to find the configuration to trigger an email | Yes      | transferOwnerTo           |\n| /subject    | The email's subject | Yes      | Ownership of DMP record/s has been transferred to you |\n| /template    | The template file (located in the directory specified in the settings/templateDir property) to use to render the contents | Yes      | transferOwnerTo |\nExample\ntemplates: {\n  transferOwnerTo: {subject: 'Ownership of DMP record/s has been transferred to you', template: 'transferOwnerTo'}\n}\nEmail Templates\nEmail templates are located in the directory defined in the settings/templateDir property of the config/emailnotification.js files. They are written in the EJS templating language which allows for rich and complex formatting.\nExample\n```\nHello!\nThis is a test email from ReDBox Portal\nData: \n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{"url":"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html","title":"additional-page - Configuring integration with RedBox and Mint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring integration with ReDBox and Mint\nIntroduction\nFor record management, the ReDBox portal utilises the APIs provided by both the ReDBox and Mint applications.\nConfiguring API access\nThe config/record.js file provides configuration properties to set the URLs the services can be accessed on as well as the API endpoints.\nbaseUrl\n|\n|- redbox\n|\n|- mint\n|\napi\n|\n|- \n     |\n     |- method\n     |\n     |- url\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n| baseUrl    | Section used to capture the base URLs for ReDBox and Mint to reduce duplication of variables and easier cross environment configuration | Yes      | N/A           |\n| baseUrl/redbox    | The base url for the ReDBox instance the portal is integrating with. | Yes      | http://localhost:9000/redbox           |\n| baseUrl/mint    | The base url for the Mint instance the portal is integrating with. | Yes      | http://localhost:9001/mint          |\n| api    | Section used to capture the api endpoints for ReDBox and Mint | Yes      | N/A           |\n| api/    | The API action that is being configured. Can be one of create, search, getMeta, updateMeta and harvest. | Yes      | create        |\n| api//method    | The HTTP method used by the API end point | Yes      | get          |\n| api//url    | The url for the API endpoint | Yes      | /api/v1/object/$packageType          |\nExample\nbaseUrl: {\n    redbox: \"http://localhost:9000/redbox\",\n    mint: \"http://localhost:9001/mint\"\n  },\n  api: {\n    create: {method: 'post', url: \"/api/v1/object/$packageType\"},\n    search: {method: 'get', url: \"/api/v1/search\"},\n    getMeta: {method: 'get', url: \"/api/v1/recordmetadata/$oid\"},\n    updateMeta: {method: 'post', url: \"/api/v1/recordmetadata/$oid\"},\n    harvest: {method: 'post', url:\"/api/v1.1/harvest/$packageType\"}\n  }\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-authentication.html":{"url":"additional-documentation/configuration-guide/configuring-authentication.html","title":"additional-page - Configuring authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring AAF\nIntroduction\nThe ReDBox portal is compatible out of the box with AAF Credentials.\nConfiguring\nThe config/env/development.js or config/env/production.js file provides the configuration objects for authorisation\nauth: {\n    // Default brand...\n    default: {\n      active: [\"aaf\", \"local\"],\n      aaf: {\n        loginUrl: \"https://rapid.test.aaf.edu.au/jwt/authnrequest/research/XXXXXX\",\n        opts: {\n          secretOrKey: 'XXXXXX',\n          jsonWebTokenOptions: {\n            issuer: 'https://rapid.test.aaf.edu.au',\n            audience: 'https://dev-redbox.research.uts.edu.au/default/rdmp/',\n            ignoreNotBefore: true\n          }\n        }\n      }\n    }\n  }\n\nProceed to https://rapid.test.aaf.edu.au for test environments and https://rapid.aaf.edu.au for production environments\nRegister a new service\nThe Callback URL should be /user/login_aaf\n\n\nIf it is a development environment a unique url will be automatically provided\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rest-api-documentation.html":{"url":"additional-documentation/rest-api-documentation.html","title":"additional-page - REST API documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nREST API\nDocumentation available here\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
